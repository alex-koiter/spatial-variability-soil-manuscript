<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving
and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">

<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">

<front>
<journal-meta>
<journal-id></journal-id>

<journal-title-group>
<journal-title>TBD</journal-title>
</journal-title-group>
<issn></issn>

<publisher>
<publisher-name></publisher-name>
</publisher>
</journal-meta>


<article-meta>


<title-group>
<article-title>Investigating the Spatial Variability in Soil Geochemical
and Colour Properties Across Two Contrasting Land Uses</article-title>
</title-group>

<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0009-0004-3739-5103</contrib-id>
<name>
<surname>Miño</surname>
<given-names>Maria Luna</given-names>
</name>
<string-name>Maria Luna Miño</string-name>

<email>LUNAMIMA56@brandonu.ca</email>
<role>MSc thesis</role>
<role>Sample collection</role>
<role>Lab analysis</role>
<role>Initial data analysis</role>
<role>Initial draft of manuscript</role>
<xref ref-type="aff" rid="aff-1">a</xref>
</contrib>
<contrib contrib-type="author" corresp="yes">
<contrib-id contrib-id-type="orcid">0000-0002-9355-9561</contrib-id>
<name>
<surname>Koiter</surname>
<given-names>Alexander J</given-names>
</name>
<string-name>Alexander J Koiter</string-name>

<email>koitera@brandonu.ca</email>
<role>Principle investigator</role>
<role>Primary author</role>
<role>Statistics</role>
<role vocab="https://credit.niso.org" vocab-term="visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role>
<xref ref-type="aff" rid="aff-2">b</xref>
<xref ref-type="corresp" rid="cor-2">&#x002A;</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Lychuk</surname>
<given-names>Taras E</given-names>
</name>
<string-name>Taras E Lychuk</string-name>

<email>taras.lychuk@AGR.GC.CA</email>
<role>Spatial data analysis</role>
<role>Project design</role>
<role>Author</role>
<xref ref-type="aff" rid="aff-3">c</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Waddel</surname>
<given-names>Arnie</given-names>
</name>
<string-name>Arnie Waddel</string-name>

<email>arnie.waddell@AGR.GC.CA</email>
<role>Spatial data analysis</role>
<role>Author</role>
<xref ref-type="aff" rid="aff-3">c</xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Moulin</surname>
<given-names>Alan</given-names>
</name>
<string-name>Alan Moulin</string-name>

<email>apmaafc7788@gmail.com</email>
<role>Spatial data analysis</role>
<role>Author</role>
<xref ref-type="aff" rid="aff-3">c</xref>
</contrib>
</contrib-group>
<aff id="aff-1">
<institution-wrap>
<institution>Brandon University, Masters in Environmental and Life
Sciences</institution>
</institution-wrap>
<addr-line>270 18th St</addr-line>
<city>Brandon</city>
<state>MB</state>

<postal-code>R7A 6A9</postal-code>


</aff>
<aff id="aff-2">
<institution-wrap>
<institution>Brandon University, Department of Geography and
Environment</institution>
</institution-wrap>
<addr-line>270 18th St</addr-line>
<city>Brandon</city>
<state>MB</state>

<postal-code>R7A 6A9</postal-code>


</aff>
<aff id="aff-3">
<institution-wrap>
<institution>Agriculture and Agri-Food Canada, Brandon Research and
Development Centre</institution>
</institution-wrap>
<addr-line>2701 Grand Valley Road</addr-line>
<city>Brandon</city>
<state>MB</state>

<postal-code>R7A 5Y3</postal-code>


</aff>
<author-notes>
<corresp id="cor-2">koitera@brandonu.ca</corresp>
</author-notes>









<history></history>


<abstract>
<p>Quantification and accurate assessment of the spatial variability and
distribution of soil physical and biogeochemical properties are vital
components of agri-environmental research and modeling, including
sediment source fingerprinting. Understanding the distribution of soil
properties is crucial in the development of appropriate, reliable, and
efficient sampling campaigns. This study was aimed to investigate the
spatial variability in soil geochemical and colour (i.e., spectral
reflectance) soil properties (&lt;63um) across two contrasting land
uses. The main objectives of this study are to: 1) quantify the spatial
variability of geochemical and colour properties at a field-scale (~ 40
ha) across agricultural and forested sites; 2) evaluate the spatial
variability and distribution of soil properties and its relation to
seven terrain attributes (e.g., catchment area, elevation). A
combination of univariate analysis and geostatistical methods were
applied to characterize the soil geochemistry and colour properties.
This information was used to both quantify and assess the variability in
soil properties. The variability and spatial autocorrelation were
generally both site and soil property specific. For a selection of soil
properties exhibiting some spatial autocorrelation, random forest
regression was used to indentify the relative importance of terrain
attributes on observed patterns of soil geochemical and colour
properties. Elevation was found to explain the greatest amount of the
variation in soil properties followed by the SAGA wetness index and
relative slope position. These types of information can be used to help
create efficient soil sampling designs by providing information that can
inform sampling locations and number of samples collected in order to
meet research needs and objectives.</p>
</abstract>
<kwd-group kwd-group-type="author">
<kwd>Soil geochemistry</kwd>
<kwd>Soil colour</kwd>
<kwd>Spatial analysis</kwd>
</kwd-group>




</article-meta>

</front>

<body>
<sec id="introduction">
  <title>1 Introduction</title>
  <p>Variation in soil biological, chemical, and physical properties
  occurs across the landscape and in response to both regional and local
  (i.e., field-scale) variations in the five soil forming factors:
  parent material, relief or topography, biota, climate, and time.
  Superimposed on this is the influence of changes in land use and
  current and historic management practices which can further modify
  soil properties. Quantifying and understanding the patterns and
  drivers for this variation is an important component of many
  agri-environmental studies. For example, to meet the desired level of
  precision for agronomic and environmental nutrient management plans
  the spatial variability in soil nutrients will influence the soil
  sampling design in terms of number and locations of soil samples
  (<xref alt="Kariuki et al., 2009" rid="ref-kariuki2009" ref-type="bibr">Kariuki
  et al., 2009</xref>;
  <xref alt="Starr et al., 1995" rid="ref-starr1995" ref-type="bibr">Starr
  et al., 1995</xref>).</p>
  <p>Sediment source fingerprinting is a watershed-scale technique that
  is used to identify and quantify the relative proportions of sediment
  derived from unique sources. This technique uses natural occurring
  biogeochemical properties as fingerprints (i.e., tracers) to
  discriminate between potential sources of sediment and are linked to
  downstream sediment using mixing models. From a sediment
  fingerprinting perspective, investigating the spatial variability of
  soil properties at a watershed-scale can be advantageous to identify,
  classify, and distinguish between potential sources of sediment
  (<xref alt="Pulley et al., 2017" rid="ref-pulley2017" ref-type="bibr">Pulley
  et al., 2017</xref>). However, investigating spatial variability at
  smaller scales is less common
  (<xref alt="Collins et al., 2019" rid="ref-collins2019" ref-type="bibr">Collins
  et al., 2019</xref>; e.g.,
  <xref alt="Du and Walling, 2017" rid="ref-du2017" ref-type="bibr">Du
  and Walling, 2017</xref>;
  <xref alt="Luna Miño et al., 2024" rid="ref-lunamiño2024" ref-type="bibr">Luna
  Miño et al., 2024</xref>;
  <xref alt="Pulley et al., 2018" rid="ref-pulley2018" ref-type="bibr">Pulley
  et al., 2018</xref>) and remains a research priority
  (<xref alt="Collins et al., 2020" rid="ref-collins2020" ref-type="bibr">Collins
  et al., 2020</xref>).</p>
  <p>There are three main, interconnected, ways that spatial variability
  in fingerprint properties are an important aspect of sediment
  fingerprinting. First is to adequately quantify the fingerprint
  properties such that it is representative of that source. For some
  fingerprints the variability is not random but rather varies in a more
  systematic way. For example, the pattern of fallout radionuclides will
  reflect the patterns of soil erosion and deposition
  (<xref alt="Wilkinson et al., 2015" rid="ref-wilkinson2015" ref-type="bibr">Wilkinson
  et al., 2015</xref>). Designing and implementing source sampling plans
  need to take this into consideration as the sampling designed used has
  been shown to influence the characterization of wide range of commonly
  used fingerprints
  (<xref alt="Luna Miño et al., 2024" rid="ref-lunamiño2024" ref-type="bibr">Luna
  Miño et al., 2024</xref>).</p>
  <p>Secondly, the issue of spatial variability of fingerprint
  properties is further complicated by overlying spatial variability in
  the rates of erosion and sediment delivery. Incorporation of both
  types of variability into the mixing model will provide a more
  reliable estimate of the proportion of sediment derived from each
  source. Many mixing models have well defined inputs (sources) and
  outputs (sediment) that are characterized by their mean and standard
  deviation and the spatial distribution or pattern of fingerprints are
  not considered. This is not ideal as the values of samples that are
  collected closer, and more hydrologically connected, to the stream
  network may in fact a better representation of that source despite
  potentially deviating from the mean value. This issue can be addressed
  by strategic sampling where the more likely to erode areas are
  targeted for sampling. However, a considerable amount of information
  and insight is lost through that approach. There has been some
  progress using information on erosion rates to calculate a erosion
  rate-weighted mean
  (<xref alt="Du and Walling, 2017" rid="ref-du2017" ref-type="bibr">Du
  and Walling, 2017</xref>;
  <xref alt="Wilkinson et al., 2015" rid="ref-wilkinson2015" ref-type="bibr">Wilkinson
  et al., 2015</xref>) and using spatially interpolated maps of
  fingerprint values to provided a finer resolution of the fingerprint
  variability within each source
  (<xref alt="Haddadchi et al., 2019" rid="ref-haddadchi2019" ref-type="bibr">Haddadchi
  et al., 2019</xref>).</p>
  <p>Secondly, understanding the geomorphic, hydrologic, and biochemical
  processes that have led to the observed patterns in spatial
  variability helps in the selection of robust and reliable fingerprints
  and/or guide the sampling design for source characterization. In
  selecting fingerprints that provide good discrimination between
  sources many studies typically used a statistical-based approach
  (<xref alt="Collins et al., 1997" rid="ref-collins1997" ref-type="bibr">Collins
  et al., 1997</xref>). However, there are concerns that this approach
  may result in the inclusion of false positives (i.e., type I error) or
  non-conservative fingerprints
  (<xref alt="Koiter et al., 2013" rid="ref-koiter2013" ref-type="bibr">Koiter
  et al., 2013</xref>). Consequently, there has been a call for the
  inclusion of a process-based (e.g., weathering, erosion) or
  geologic/lithologic-based explanation of the fingerprints selected to
  address these concerns
  (<xref alt="Collins et al., 2020" rid="ref-collins2020" ref-type="bibr">Collins
  et al., 2020</xref>). Furthermore, there is also a lack of
  standardization in how sediment source areas are sampled (e.g.,
  judgement, random, transect, grid, stratified) and it can be difficult
  to have an efficient sampling design without prior knowledge of why
  and how soil properties vary across the landscape
  (<xref alt="Luna Miño et al., 2024" rid="ref-lunamiño2024" ref-type="bibr">Luna
  Miño et al., 2024</xref>). Prior knowledge of the spatial variability
  of soil fingerprint properties would be beneficial; however, in
  practice this can be difficult, particularly with geochemical
  properties as routine lab analysis often return information on more
  than 50 elements. The spatial patterns of some soil properties are
  well studied because of their agronomic importance or ability to infer
  other important soil properties and processes and can include fallout
  radionuclides [e.g., <sup>137</sup>Cs, <sup>7</sup>Be; Ritchie et al.
  (<xref alt="1970" rid="ref-ritchie1970" ref-type="bibr">1970</xref>)],
  plant nutrients [e.g., N, P; Vasu et al.
  (<xref alt="2017" rid="ref-vasu2017" ref-type="bibr">2017</xref>)],
  soil colour [e.g., hue, value; Viscarra Rossel et al.
  (<xref alt="2006" rid="ref-viscarrarossel2006" ref-type="bibr">2006</xref>)],
  major non-acid forming cations [e.g., Ca, Na; Sun et al.
  (<xref alt="2021" rid="ref-sun2021" ref-type="bibr">2021</xref>)]. In
  contrast, other soil properties including rare Earth elements and
  trace metals the processes leading to their distribution across the
  landscape is less studied or it is difficult to make generalizations
  (i.e., site specific).</p>
  <p>Terrain attributes such as elevation, slope curvature, slope
  position, and soil wetness have been shown to be useful information in
  the understanding and modelling of a range of soil properties
  including soil moisture
  (<xref alt="Beaudette et al., 2013" rid="ref-beaudette2013" ref-type="bibr">Beaudette
  et al., 2013</xref>), texture
  (<xref alt="Kokulan et al., 2018" rid="ref-kokulan2018" ref-type="bibr">Kokulan
  et al., 2018</xref>), colour
  (<xref alt="Brown et al., 2004" rid="ref-brown2004" ref-type="bibr">Brown
  et al., 2004</xref>), organic matter
  (<xref alt="Zhang et al., 2012" rid="ref-zhang2012" ref-type="bibr">Zhang
  et al., 2012</xref>), conductivity
  (<xref alt="Umali et al., 2012" rid="ref-umali2012" ref-type="bibr">Umali
  et al., 2012</xref>), and geochemistry
  (<xref alt="Lima et al., 2023" rid="ref-lima2023" ref-type="bibr">Lima
  et al., 2023</xref>). Similar techniques may provide additional
  insight into the pedologic and geomorphic processes that drive the
  observed patterns of fingerprint properties within a given source.
  This information can be used to guide sampling design and interpret
  the data it provides.</p>
  <p>This study builds on the previous work of Luna Miño
  (<xref alt="2024" rid="ref-lunamiño2024" ref-type="bibr">2024</xref>)
  where the impact of three different sampling designs on the
  characterization of source materials, within the framework of the
  sediment fingerprinting approach, was assessed. This study expands
  that study by using the data from grid sampling approach to assess the
  spatial autocorrelation, create iso-fingerprint maps, and identify
  important terrain attributes driving the observed patterns. The
  objectives of this study were (1) to investigate the spatial
  variability of a range of soil colour and geochemical properties in an
  agricultural and forested site; and (2) to assess the relative
  importance and correlation of terrain attributes with the spatial
  distribution of these soil properties.</p>
</sec>
<sec id="methods">
  <title>2 Methods</title>
  <sec id="site-description">
    <title>2.1 Site description</title>
    <p>Two sites of contrasting land uses located in the Wilson Creek
    Watershed (WCW), near McCreary, Manitoba, Canada were selected to
    investigate the spatial variability in fingerprint properties. The
    headwaters of the WCW are located on top of the Manitoba Escarpment
    within the boundary of Riding Mountain National Park. There is a
    ~300m drop in elevation crosses the escarpment where the streams
    become deeply incised. At the base of the escarpment is a large
    alluvial fan situated in the lacustrine deposits of glacial lake
    Aggasiz where the main stem has a meandering form. However, beyond
    the national park boundary the stream flows straight through an
    engineered drain until it reaches the Turtle river
    (<xref alt="Figure 1" rid="fig-location_map">Figure 1</xref>). Both
    sites are both hydrologicaly connected to the mainstem of the Wilson
    Creek</p>
    <p>The first site was a mixedwood forest including white and black
    spruce (Picea glauca, Picea mariana), balsam fir (Abies balsamea),
    larch (Larix laricina) and young stands of deciduous trees including
    trembling aspen (Populus tremuloides). The forested site is located
    within the boundaries of the national park where there is little
    disturbance beyond recreational hiking trails. The soil within the
    park are not well mapped but likely are part of the Grey Wooded soil
    association (Luvisol) consisting of fine sandy loam to clay loam
    soils developed on boulder till of mostly shale with some limestone,
    and granitic rocks
    (<xref alt="Ehrlich et al., 1958" rid="ref-ehrlich1958" ref-type="bibr">Ehrlich
    et al., 1958</xref>). The second site is under agricultural
    production and includes rotations of grain crops and forage. The
    site is mapped to the Edwards Soil Series (Cumulic Regosol)
    consisting of silty clay loam to silty clay soil developed on recent
    alluvial deposits
    (<xref alt="Ehrlich et al., 1958" rid="ref-ehrlich1958" ref-type="bibr">Ehrlich
    et al., 1958</xref>).</p>
    <p>The Köppen-Geiger climate classification of the WCW is cold,
    without dry season, and with warm summer (Dfb)
    (<xref alt="Beck et al., 2018" rid="ref-beck2018" ref-type="bibr">Beck
    et al., 2018</xref>). The average annual precipitation is ~539 mm,
    with approximately 27% falling as snow with a mean annual
    temperature is 3.0°C
    (<xref alt="Environment and Climate Change Canada, 2024" rid="ref-environmentandclimatechangecanada2024" ref-type="bibr">Environment
    and Climate Change Canada, 2024</xref>). The hydrology of the
    watershed is snowmelt dominated with ~ 80% of the cumulative runoff
    occurring during the spring season (May and June)
    (<xref alt="MacKay, 1970" rid="ref-mackay1970" ref-type="bibr">MacKay,
    1970</xref>).</p>
    <fig id="fig-location_map">
      <caption><p>Figure 1: Map showing the location of the study sites
      within Canada, and the regional land use and
      topography.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/notebooks-location_map-fig-location_map-output-2.png" />
    </fig>
  </sec>
  <sec id="soil-sampling-and-analysis">
    <title>2.2 Soil sampling and analysis</title>
    <p>This study uses samples and data collected as part of the grid
    sampling design outlined in Luna Miño
    (<xref alt="2024" rid="ref-lunamiño2024" ref-type="bibr">2024</xref>).
    Briefly, at each site 49 samples were collected using a soil auger
    on a 7x7 grid at a 100m spacing. Within the forested surface soil
    samples were collected below the LFH layer to a depth of 5cm, and
    the agricultural site was sampled to a depth of 15cm to account for
    the regular mixing of the soil due to tillage and other field
    operations.</p>
    <p>Samples were dried, homogenized with a motar and pestle, and
    sieved through a 63 𝜇m sieve to remove the sand fraction. The sand
    fraction was removed in an effort to reduce the differences in grain
    size and organic matter content between the two sites
    (<xref alt="Laceby et al., 2017" rid="ref-laceby2017" ref-type="bibr">Laceby
    et al., 2017</xref>). Samples were analyzed for a broad suite
    geochemical element using inductively coupled plasma mass
    spectrometry (ICP-MS) following a microwave-assisted digestion with
    aqua-regia (ALS Mineral Division, North Vancouver, BC, Canada).
    Spectral measurements were made with a spectroradiometer (ASD
    FieldSpecPro Malvern Panalytical Inc Westborough MA 01581, United
    States). Spectral reflectance measurements were taken in 1 nm
    increments over the 0.4-2.5 μm wavelength range. Both samples and
    Spectralon standard (white reference) were illuminated with a white
    light source using a halogen-based lamp (12 VDC, 20 Watt). Following
    the method outlined in Boudreault et al.
    (<xref alt="2018" rid="ref-boudreault2018" ref-type="bibr">2018</xref>),
    fifteen colour coefficients (R, G, B, x, y, Y, X, Z, L, a*, b*, u*,
    v*, c*, h*) were calculated for each sample
    (<xref alt="Koiter, 2021" rid="ref-koiter2021" ref-type="bibr">Koiter,
    2021</xref>). Based on the results of Luna Miño
    (<xref alt="2024" rid="ref-lunamiño2024" ref-type="bibr">2024</xref>),
    a composite fingerprint consisting of 10 geochemical elements (Ca,
    Co, Cs, Fe, Li, La, Nb, Ni, Rb, and Sr) and five colour coefficients
    (a, b, c, h, and x) were identifying as providing a strong
    discrimination between the agricultural and forested surface soils.
    These fifteen soil properties are the focus of the detailed spatial
    analysis detailed in this study.</p>
  </sec>
  <sec id="geospatial-and-terrain-analysis">
    <title>2.3 Geospatial and terrain analysis</title>
    <p>All geostatistics were performed with ArcGIS Pro (v 3.3.0
    <xref alt="Esri, 2024" rid="ref-esri2024" ref-type="bibr">Esri,
    2024</xref>). Semivariograms were used to quantify spatial
    correlation for each of the 15 soil properties. The optimization
    tool, based on minimizing the mean square error, was used to
    parameterize the semivariogram model. Kriging was used to
    interpolate and generate maps of each soil property. The exploratory
    interpolation tool (Geostatistical Analyst extension) was used to
    select the kriging type with the highest ranked prediction
    accuracy.</p>
    <p>A Digital Elevation Model (DEM) for the forested site was
    acquired from publicly available data
    (<xref alt="Natural Resources Canada, 2024" rid="ref-naturalresourcescanada2024" ref-type="bibr">Natural
    Resources Canada, 2024</xref>). A DEM for the agricultural site was
    generated by photogrammetry using UAV imagery, including the use of
    ground control and check points, with Agisoft Metashape Professional
    (v1.8.2
    <xref alt="Agisoft, 2021" rid="ref-agisoft2021" ref-type="bibr">Agisoft,
    2021</xref>). Ordinary kriging was used to calculate a 1 m gridded
    digital elevation model for each site. Geographic information
    software (SAGA v2.1.4
    <xref alt="Conrad et al., 2015" rid="ref-conrad2015" ref-type="bibr">Conrad
    et al., 2015</xref>) was used to calculate six additional terrain
    attributes and included plan and profile curvatures, saga wetness
    index, catchment area, relative slope position, vertical channel
    network distance.</p>
  </sec>
  <sec id="data-analysis">
    <title>2.4 Data analysis</title>
    <p>All subsequent statistical analysis was undertaken using R
    statistical Software v4.4.0
    (<xref alt="R Core Team, 2024" rid="ref-rcoreteam2024" ref-type="bibr">R
    Core Team, 2024</xref>) through RStudio Integrated Development
    Environment v2024.04.2
    (<xref alt="RStudio, 2024" rid="ref-rstudio2024" ref-type="bibr">RStudio,
    2024</xref>). Plots and maps were created using the R package
    <monospace>ggplot2</monospace> v
    <monospace>r packageVersion(&quot;ggplot2&quot;)</monospace>
    (<xref alt="Wickham, 2016" rid="ref-wickham2016" ref-type="bibr">Wickham,
    2016</xref>). Skewness was categorized as values between -0.5 and
    0.5 considered approximately symmetric, -1.0 to -0.5 or 0.5 to 1 as
    moderately skewed, and &lt; -1.0 or &gt; 1.0 as highly skewed.
    Coefficient of variation (CV) thresholds were categorized as low
    (&lt;15%), moderate (15–35%), high (35–75%), and very high (&gt;75%)
    .Interpolated soil property and terrain attribute data were
    resampled to a 10 m resolution prior to analysis
    (<monospace>terra</monospace>
    v<monospace>r packageVersion(&quot;terra&quot;)</monospace>
    <xref alt="Hijmans, 2024" rid="ref-hijmans2024" ref-type="bibr">Hijmans,
    2024</xref>). Random Forest Regression
    (<monospace>randomForest</monospace>
    v<monospace>r packageVersion(&quot;randomForest&quot;)</monospace>
    <xref alt="Liaw and Wiener, 2002" rid="ref-liaw2002" ref-type="bibr">Liaw
    and Wiener, 2002</xref>) was used to assess the relative importance
    of the terrain attributes on the spatial distribution of soil
    properties. The dataset was randomly split into training,
    validation, and testing datasets. Multicollinearity among the
    terrain attributed was assessed using the Variance Inflation Factor
    with a threshold of eight and correlated terrain attributes were
    removed (<monospace>usdm</monospace>
    v<monospace>r packageVersion(&quot;usdm&quot;)</monospace>
    <xref alt="Naimi et al., 2014" rid="ref-Naimi2014" ref-type="bibr">Naimi
    et al., 2014</xref>). The number of variables randomly sampled as
    candidates at each split within the random forest model was tuned
    using the training and validation data sets
    (<monospace>caret</monospace>
    v<monospace>r packageVersion(&quot;caret&quot;)</monospace>
    <xref alt="Kuhn and Max, 2008" rid="ref-kuhn2008" ref-type="bibr">Kuhn
    and Max, 2008</xref>). The number of trees to grow was set to 500
    and assessed using the Root Mean Square Error for both the Out of
    Bag Error and the validation data sets. To test the model, actual
    and predicted values were plotted and the R<sup><sub>2</sub></sup>
    was calculated.</p>
  </sec>
</sec>
<sec id="results">
  <title>3 Results</title>
  <sec id="univariate-summary">
    <title>3.1 Univariate summary</title>
    <p>Overall, the agricultural site had soil colour and geochemical
    properties that exhibited lower variability and more symmetrical
    data distributions as compared to the forested site. Considering all
    15 colour properties measured it was observed that all the colour
    properties for both sites exhibit an approximate symmetric
    distribution. All 15 colour properties for the agriculture site had
    a low CV and the forested site had slightly greater variability with
    10 colour properties the a low CV and five with a moderate CV.
    Overall, the agricultural site had lower variability and the
    distribution of data for each element were generally more
    symmetrical as compared to the forest site. Of the 44 geochemical
    concentrations measured at the agricultural site, nine elements
    exhibited moderately skewed distributions, while five displayed
    highly skewed distributions. Additionally, 12 elements had moderate
    coefficients of variation (CV), and five had high CV. At the
    forested site, seven elements showed moderately skewed distributions
    and 14 exhibited highly skewed distributions. Furthermore, 28
    elements had moderate CV, six had high CV, and two had very high
    CV.</p>
    <fig id="tbl-univariate-summary">
      <caption><p>Table 1: Summary univariate statistics of selected
      geochemical and colour soil properties for each site (n =
      49).</p></caption>
      <table-wrap>
        <table>
          <thead>
            <tr>
              <th align="center" id="Property" scope="col">Property</th>
              <th align="center" id="Mean" scope="col">Mean</th>
              <th align="center" id="SD" scope="col">SD</th>
              <th align="center" id="Max" scope="col">Max</th>
              <th align="center" id="Min" scope="col">Min</th>
              <th align="center" id="Skewness" scope="col">Skewness</th>
              <th align="center" id="CV" scope="col">CV</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" colspan="7" id="Agriculture" style="font-weight: bold" scope="colgroup">Agriculture</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ca</td>
              <td align="center" headers="Agriculture  Mean">4.00</td>
              <td align="center" headers="Agriculture  SD">2.19</td>
              <td align="center" headers="Agriculture  Max">8.78</td>
              <td align="center" headers="Agriculture  Min">0.95</td>
              <td align="center" headers="Agriculture  Skewness">0.28</td>
              <td align="center" headers="Agriculture  CV">54.66</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Co</td>
              <td align="center" headers="Agriculture  Mean">8.76</td>
              <td align="center" headers="Agriculture  SD">0.83</td>
              <td align="center" headers="Agriculture  Max">10.60</td>
              <td align="center" headers="Agriculture  Min">7.50</td>
              <td align="center" headers="Agriculture  Skewness">0.52</td>
              <td align="center" headers="Agriculture  CV">9.48</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Cs</td>
              <td align="center" headers="Agriculture  Mean">0.75</td>
              <td align="center" headers="Agriculture  SD">0.15</td>
              <td align="center" headers="Agriculture  Max">1.07</td>
              <td align="center" headers="Agriculture  Min">0.47</td>
              <td align="center" headers="Agriculture  Skewness">0.18</td>
              <td align="center" headers="Agriculture  CV">19.93</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Fe</td>
              <td align="center" headers="Agriculture  Mean">1.92</td>
              <td align="center" headers="Agriculture  SD">0.09</td>
              <td align="center" headers="Agriculture  Max">2.11</td>
              <td align="center" headers="Agriculture  Min">1.71</td>
              <td align="center" headers="Agriculture  Skewness">−0.25</td>
              <td align="center" headers="Agriculture  CV">4.70</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Li</td>
              <td align="center" headers="Agriculture  Mean">15.62</td>
              <td align="center" headers="Agriculture  SD">1.42</td>
              <td align="center" headers="Agriculture  Max">19.80</td>
              <td align="center" headers="Agriculture  Min">12.80</td>
              <td align="center" headers="Agriculture  Skewness">0.62</td>
              <td align="center" headers="Agriculture  CV">9.11</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">La</td>
              <td align="center" headers="Agriculture  Mean">18.23</td>
              <td align="center" headers="Agriculture  SD">1.22</td>
              <td align="center" headers="Agriculture  Max">20.20</td>
              <td align="center" headers="Agriculture  Min">15.50</td>
              <td align="center" headers="Agriculture  Skewness">−0.29</td>
              <td align="center" headers="Agriculture  CV">6.71</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Nb</td>
              <td align="center" headers="Agriculture  Mean">0.59</td>
              <td align="center" headers="Agriculture  SD">0.06</td>
              <td align="center" headers="Agriculture  Max">0.73</td>
              <td align="center" headers="Agriculture  Min">0.46</td>
              <td align="center" headers="Agriculture  Skewness">0.45</td>
              <td align="center" headers="Agriculture  CV">9.67</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ni</td>
              <td align="center" headers="Agriculture  Mean">29.63</td>
              <td align="center" headers="Agriculture  SD">2.72</td>
              <td align="center" headers="Agriculture  Max">35.70</td>
              <td align="center" headers="Agriculture  Min">25.00</td>
              <td align="center" headers="Agriculture  Skewness">0.36</td>
              <td align="center" headers="Agriculture  CV">9.17</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Rb</td>
              <td align="center" headers="Agriculture  Mean">18.43</td>
              <td align="center" headers="Agriculture  SD">4.33</td>
              <td align="center" headers="Agriculture  Max">26.70</td>
              <td align="center" headers="Agriculture  Min">10.20</td>
              <td align="center" headers="Agriculture  Skewness">0.24</td>
              <td align="center" headers="Agriculture  CV">23.48</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Sr</td>
              <td align="center" headers="Agriculture  Mean">91.31</td>
              <td align="center" headers="Agriculture  SD">38.98</td>
              <td align="center" headers="Agriculture  Max">163.50</td>
              <td align="center" headers="Agriculture  Min">38.60</td>
              <td align="center" headers="Agriculture  Skewness">0.09</td>
              <td align="center" headers="Agriculture  CV">42.69</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">a*</td>
              <td align="center" headers="Agriculture  Mean">3.38</td>
              <td align="center" headers="Agriculture  SD">0.32</td>
              <td align="center" headers="Agriculture  Max">4.15</td>
              <td align="center" headers="Agriculture  Min">2.59</td>
              <td align="center" headers="Agriculture  Skewness">−0.03</td>
              <td align="center" headers="Agriculture  CV">9.53</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">b*</td>
              <td align="center" headers="Agriculture  Mean">8.84</td>
              <td align="center" headers="Agriculture  SD">0.97</td>
              <td align="center" headers="Agriculture  Max">10.59</td>
              <td align="center" headers="Agriculture  Min">6.69</td>
              <td align="center" headers="Agriculture  Skewness">−0.18</td>
              <td align="center" headers="Agriculture  CV">11.00</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">c*</td>
              <td align="center" headers="Agriculture  Mean">9.47</td>
              <td align="center" headers="Agriculture  SD">1.02</td>
              <td align="center" headers="Agriculture  Max">11.32</td>
              <td align="center" headers="Agriculture  Min">7.17</td>
              <td align="center" headers="Agriculture  Skewness">−0.19</td>
              <td align="center" headers="Agriculture  CV">10.74</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">h*</td>
              <td align="center" headers="Agriculture  Mean">1.20</td>
              <td align="center" headers="Agriculture  SD">0.01</td>
              <td align="center" headers="Agriculture  Max">1.23</td>
              <td align="center" headers="Agriculture  Min">1.18</td>
              <td align="center" headers="Agriculture  Skewness">0.19</td>
              <td align="center" headers="Agriculture  CV">1.12</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">x</td>
              <td align="center" headers="Agriculture  Mean">0.47</td>
              <td align="center" headers="Agriculture  SD">0.00</td>
              <td align="center" headers="Agriculture  Max">0.48</td>
              <td align="center" headers="Agriculture  Min">0.47</td>
              <td align="center" headers="Agriculture  Skewness">0.06</td>
              <td align="center" headers="Agriculture  CV">0.46</td>
            </tr>
            <tr>
              <td align="center" colspan="7" id="Forest" style="font-weight: bold" scope="colgroup">Forest</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ca</td>
              <td align="center" headers="Forest  Mean">1.89</td>
              <td align="center" headers="Forest  SD">1.53</td>
              <td align="center" headers="Forest  Max">5.46</td>
              <td align="center" headers="Forest  Min">0.47</td>
              <td align="center" headers="Forest  Skewness">1.07</td>
              <td align="center" headers="Forest  CV">81.12</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Co</td>
              <td align="center" headers="Forest  Mean">6.76</td>
              <td align="center" headers="Forest  SD">1.39</td>
              <td align="center" headers="Forest  Max">9.60</td>
              <td align="center" headers="Forest  Min">4.00</td>
              <td align="center" headers="Forest  Skewness">0.03</td>
              <td align="center" headers="Forest  CV">20.62</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Cs</td>
              <td align="center" headers="Forest  Mean">0.55</td>
              <td align="center" headers="Forest  SD">0.12</td>
              <td align="center" headers="Forest  Max">0.78</td>
              <td align="center" headers="Forest  Min">0.34</td>
              <td align="center" headers="Forest  Skewness">0.25</td>
              <td align="center" headers="Forest  CV">21.73</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Fe</td>
              <td align="center" headers="Forest  Mean">1.18</td>
              <td align="center" headers="Forest  SD">0.13</td>
              <td align="center" headers="Forest  Max">1.46</td>
              <td align="center" headers="Forest  Min">0.83</td>
              <td align="center" headers="Forest  Skewness">−0.58</td>
              <td align="center" headers="Forest  CV">11.24</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Li</td>
              <td align="center" headers="Forest  Mean">6.47</td>
              <td align="center" headers="Forest  SD">0.90</td>
              <td align="center" headers="Forest  Max">8.60</td>
              <td align="center" headers="Forest  Min">4.30</td>
              <td align="center" headers="Forest  Skewness">−0.02</td>
              <td align="center" headers="Forest  CV">13.89</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">La</td>
              <td align="center" headers="Forest  Mean">15.00</td>
              <td align="center" headers="Forest  SD">2.60</td>
              <td align="center" headers="Forest  Max">21.80</td>
              <td align="center" headers="Forest  Min">10.30</td>
              <td align="center" headers="Forest  Skewness">0.33</td>
              <td align="center" headers="Forest  CV">17.31</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Nb</td>
              <td align="center" headers="Forest  Mean">0.37</td>
              <td align="center" headers="Forest  SD">0.06</td>
              <td align="center" headers="Forest  Max">0.56</td>
              <td align="center" headers="Forest  Min">0.17</td>
              <td align="center" headers="Forest  Skewness">−0.68</td>
              <td align="center" headers="Forest  CV">17.10</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ni</td>
              <td align="center" headers="Forest  Mean">18.09</td>
              <td align="center" headers="Forest  SD">3.90</td>
              <td align="center" headers="Forest  Max">28.00</td>
              <td align="center" headers="Forest  Min">11.00</td>
              <td align="center" headers="Forest  Skewness">0.33</td>
              <td align="center" headers="Forest  CV">21.55</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Rb</td>
              <td align="center" headers="Forest  Mean">13.83</td>
              <td align="center" headers="Forest  SD">1.85</td>
              <td align="center" headers="Forest  Max">18.10</td>
              <td align="center" headers="Forest  Min">9.90</td>
              <td align="center" headers="Forest  Skewness">0.27</td>
              <td align="center" headers="Forest  CV">13.40</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Sr</td>
              <td align="center" headers="Forest  Mean">32.43</td>
              <td align="center" headers="Forest  SD">12.60</td>
              <td align="center" headers="Forest  Max">64.20</td>
              <td align="center" headers="Forest  Min">15.30</td>
              <td align="center" headers="Forest  Skewness">0.98</td>
              <td align="center" headers="Forest  CV">38.87</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">a*</td>
              <td align="center" headers="Forest  Mean">5.73</td>
              <td align="center" headers="Forest  SD">0.41</td>
              <td align="center" headers="Forest  Max">6.56</td>
              <td align="center" headers="Forest  Min">4.41</td>
              <td align="center" headers="Forest  Skewness">−0.38</td>
              <td align="center" headers="Forest  CV">7.10</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">b*</td>
              <td align="center" headers="Forest  Mean">12.47</td>
              <td align="center" headers="Forest  SD">2.01</td>
              <td align="center" headers="Forest  Max">15.91</td>
              <td align="center" headers="Forest  Min">8.02</td>
              <td align="center" headers="Forest  Skewness">0.22</td>
              <td align="center" headers="Forest  CV">16.11</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">c*</td>
              <td align="center" headers="Forest  Mean">13.74</td>
              <td align="center" headers="Forest  SD">1.94</td>
              <td align="center" headers="Forest  Max">17.00</td>
              <td align="center" headers="Forest  Min">9.15</td>
              <td align="center" headers="Forest  Skewness">0.15</td>
              <td align="center" headers="Forest  CV">14.15</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">h*</td>
              <td align="center" headers="Forest  Mean">1.13</td>
              <td align="center" headers="Forest  SD">0.05</td>
              <td align="center" headers="Forest  Max">1.23</td>
              <td align="center" headers="Forest  Min">1.06</td>
              <td align="center" headers="Forest  Skewness">0.34</td>
              <td align="center" headers="Forest  CV">4.13</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">x</td>
              <td align="center" headers="Forest  Mean">0.49</td>
              <td align="center" headers="Forest  SD">0.00</td>
              <td align="center" headers="Forest  Max">0.49</td>
              <td align="center" headers="Forest  Min">0.48</td>
              <td align="center" headers="Forest  Skewness">−0.21</td>
              <td align="center" headers="Forest  CV">0.47</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </fig>
    <fig id="tbl-univariate2-summary">
      <caption><p>Table 2: Summary statistics for the interpoloated
      values (10m resolution) for slected geochemical and colour soil
      properties and terrain attributes for each site.</p></caption>
      <table-wrap>
        <table>
          <thead>
            <tr>
              <th align="center" id="Property" scope="col">Property</th>
              <th align="center" id="Mean" scope="col">Mean</th>
              <th align="center" id="SD" scope="col">SD</th>
              <th align="center" id="Max" scope="col">Max</th>
              <th align="center" id="Min" scope="col">Min</th>
              <th align="center" id="Skewness" scope="col">Skewness</th>
              <th align="center" id="CV" scope="col">CV</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" colspan="7" id="Agriculture" style="font-weight: bold" scope="colgroup">Agriculture</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ca</td>
              <td align="center" headers="Agriculture  Mean">4.12</td>
              <td align="center" headers="Agriculture  SD">2.10</td>
              <td align="center" headers="Agriculture  Max">8.76</td>
              <td align="center" headers="Agriculture  Min">0.918</td>
              <td align="center" headers="Agriculture  Skewness">0.0727</td>
              <td align="center" headers="Agriculture  CV">51.0</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Co</td>
              <td align="center" headers="Agriculture  Mean">8.75</td>
              <td align="center" headers="Agriculture  SD">0.664</td>
              <td align="center" headers="Agriculture  Max">10.6</td>
              <td align="center" headers="Agriculture  Min">7.52</td>
              <td align="center" headers="Agriculture  Skewness">0.431</td>
              <td align="center" headers="Agriculture  CV">7.59</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Cs</td>
              <td align="center" headers="Agriculture  Mean">0.729</td>
              <td align="center" headers="Agriculture  SD">0.123</td>
              <td align="center" headers="Agriculture  Max">1.07</td>
              <td align="center" headers="Agriculture  Min">0.458</td>
              <td align="center" headers="Agriculture  Skewness">0.376</td>
              <td align="center" headers="Agriculture  CV">16.9</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Fe</td>
              <td align="center" headers="Agriculture  Mean">1.92</td>
              <td align="center" headers="Agriculture  SD">0.0644</td>
              <td align="center" headers="Agriculture  Max">2.10</td>
              <td align="center" headers="Agriculture  Min">1.73</td>
              <td align="center" headers="Agriculture  Skewness">−0.450</td>
              <td align="center" headers="Agriculture  CV">3.36</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Li</td>
              <td align="center" headers="Agriculture  Mean">15.7</td>
              <td align="center" headers="Agriculture  SD">1.16</td>
              <td align="center" headers="Agriculture  Max">19.3</td>
              <td align="center" headers="Agriculture  Min">13.2</td>
              <td align="center" headers="Agriculture  Skewness">0.551</td>
              <td align="center" headers="Agriculture  CV">7.38</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">La</td>
              <td align="center" headers="Agriculture  Mean">18.2</td>
              <td align="center" headers="Agriculture  SD">0.817</td>
              <td align="center" headers="Agriculture  Max">19.8</td>
              <td align="center" headers="Agriculture  Min">16.5</td>
              <td align="center" headers="Agriculture  Skewness">−0.268</td>
              <td align="center" headers="Agriculture  CV">4.49</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Nb</td>
              <td align="center" headers="Agriculture  Mean">0.593</td>
              <td align="center" headers="Agriculture  SD">0.0550</td>
              <td align="center" headers="Agriculture  Max">0.740</td>
              <td align="center" headers="Agriculture  Min">0.459</td>
              <td align="center" headers="Agriculture  Skewness">0.569</td>
              <td align="center" headers="Agriculture  CV">9.27</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ni</td>
              <td align="center" headers="Agriculture  Mean">29.9</td>
              <td align="center" headers="Agriculture  SD">2.23</td>
              <td align="center" headers="Agriculture  Max">34.5</td>
              <td align="center" headers="Agriculture  Min">26.3</td>
              <td align="center" headers="Agriculture  Skewness">−0.0100</td>
              <td align="center" headers="Agriculture  CV">7.46</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Rb</td>
              <td align="center" headers="Agriculture  Mean">18.0</td>
              <td align="center" headers="Agriculture  SD">3.94</td>
              <td align="center" headers="Agriculture  Max">26.1</td>
              <td align="center" headers="Agriculture  Min">11.5</td>
              <td align="center" headers="Agriculture  Skewness">0.498</td>
              <td align="center" headers="Agriculture  CV">21.8</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Sr</td>
              <td align="center" headers="Agriculture  Mean">93.4</td>
              <td align="center" headers="Agriculture  SD">38.6</td>
              <td align="center" headers="Agriculture  Max">167</td>
              <td align="center" headers="Agriculture  Min">36.3</td>
              <td align="center" headers="Agriculture  Skewness">0.00105</td>
              <td align="center" headers="Agriculture  CV">41.3</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">a*</td>
              <td align="center" headers="Agriculture  Mean">3.34</td>
              <td align="center" headers="Agriculture  SD">0.211</td>
              <td align="center" headers="Agriculture  Max">3.83</td>
              <td align="center" headers="Agriculture  Min">2.88</td>
              <td align="center" headers="Agriculture  Skewness">0.0621</td>
              <td align="center" headers="Agriculture  CV">6.33</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">b*</td>
              <td align="center" headers="Agriculture  Mean">8.73</td>
              <td align="center" headers="Agriculture  SD">0.707</td>
              <td align="center" headers="Agriculture  Max">10.2</td>
              <td align="center" headers="Agriculture  Min">6.98</td>
              <td align="center" headers="Agriculture  Skewness">−0.162</td>
              <td align="center" headers="Agriculture  CV">8.10</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">c*</td>
              <td align="center" headers="Agriculture  Mean">9.34</td>
              <td align="center" headers="Agriculture  SD">0.762</td>
              <td align="center" headers="Agriculture  Max">11.0</td>
              <td align="center" headers="Agriculture  Min">7.41</td>
              <td align="center" headers="Agriculture  Skewness">−0.158</td>
              <td align="center" headers="Agriculture  CV">8.15</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">h*</td>
              <td align="center" headers="Agriculture  Mean">1.20</td>
              <td align="center" headers="Agriculture  SD">0.00977</td>
              <td align="center" headers="Agriculture  Max">1.23</td>
              <td align="center" headers="Agriculture  Min">1.18</td>
              <td align="center" headers="Agriculture  Skewness">−0.0603</td>
              <td align="center" headers="Agriculture  CV">0.811</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property" style="font-style: italic">x</td>
              <td align="center" headers="Agriculture  Mean">23.1</td>
              <td align="center" headers="Agriculture  SD">1.31</td>
              <td align="center" headers="Agriculture  Max">26.6</td>
              <td align="center" headers="Agriculture  Min">18.6</td>
              <td align="center" headers="Agriculture  Skewness">−0.501</td>
              <td align="center" headers="Agriculture  CV">5.68</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Plan
              Curvature</td>
              <td align="center" headers="Agriculture  Mean">1.65 × 10<sup>−6</sup></td>
              <td align="center" headers="Agriculture  SD">1.36 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Max">6.57 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Min">−5.07 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Skewness">3.54 × 10<sup>−1</sup></td>
              <td align="center" headers="Agriculture  CV">8.24 × 10<sup>3</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Profile
              Curvature</td>
              <td align="center" headers="Agriculture  Mean">−7.64 × 10<sup>−6</sup></td>
              <td align="center" headers="Agriculture  SD">1.53 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Max">5.83 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Min">−6.47 × 10<sup>−4</sup></td>
              <td align="center" headers="Agriculture  Skewness">9.51 × 10<sup>−2</sup></td>
              <td align="center" headers="Agriculture  CV">−2.00 × 10<sup>3</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">SAGA
              Wetness Index</td>
              <td align="center" headers="Agriculture  Mean">9.64</td>
              <td align="center" headers="Agriculture  SD">0.704</td>
              <td align="center" headers="Agriculture  Max">11.2</td>
              <td align="center" headers="Agriculture  Min">7.77</td>
              <td align="center" headers="Agriculture  Skewness">−0.122</td>
              <td align="center" headers="Agriculture  CV">7.30</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Catchment
              Area</td>
              <td align="center" headers="Agriculture  Mean">475</td>
              <td align="center" headers="Agriculture  SD">1,010</td>
              <td align="center" headers="Agriculture  Max">10,100</td>
              <td align="center" headers="Agriculture  Min">4.35</td>
              <td align="center" headers="Agriculture  Skewness">4.76</td>
              <td align="center" headers="Agriculture  CV">213</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Rel.
              Slope Position</td>
              <td align="center" headers="Agriculture  Mean">0.718</td>
              <td align="center" headers="Agriculture  SD">0.288</td>
              <td align="center" headers="Agriculture  Max">1.20</td>
              <td align="center" headers="Agriculture  Min">0.0221</td>
              <td align="center" headers="Agriculture  Skewness">−0.946</td>
              <td align="center" headers="Agriculture  CV">40.1</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Vert.
              Dist. Channel</td>
              <td align="center" headers="Agriculture  Mean">5.98 × 10<sup>−2</sup></td>
              <td align="center" headers="Agriculture  SD">4.10 × 10<sup>−2</sup></td>
              <td align="center" headers="Agriculture  Max">2.92 × 10<sup>−1</sup></td>
              <td align="center" headers="Agriculture  Min">4.25 × 10<sup>−3</sup></td>
              <td align="center" headers="Agriculture  Skewness">1.21</td>
              <td align="center" headers="Agriculture  CV">6.85 × 10<sup>1</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Elevation</td>
              <td align="center" headers="Agriculture  Mean">310</td>
              <td align="center" headers="Agriculture  SD">0.593</td>
              <td align="center" headers="Agriculture  Max">312</td>
              <td align="center" headers="Agriculture  Min">309</td>
              <td align="center" headers="Agriculture  Skewness">0.615</td>
              <td align="center" headers="Agriculture  CV">0.191</td>
            </tr>
            <tr>
              <td align="center" colspan="7" id="Forest" style="font-weight: bold" scope="colgroup">Forest</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ca</td>
              <td align="center" headers="Forest  Mean">1.88</td>
              <td align="center" headers="Forest  SD">0.769</td>
              <td align="center" headers="Forest  Max">3.61</td>
              <td align="center" headers="Forest  Min">0.787</td>
              <td align="center" headers="Forest  Skewness">0.202</td>
              <td align="center" headers="Forest  CV">40.8</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Co</td>
              <td align="center" headers="Forest  Mean">6.80</td>
              <td align="center" headers="Forest  SD">0.632</td>
              <td align="center" headers="Forest  Max">8.66</td>
              <td align="center" headers="Forest  Min">4.93</td>
              <td align="center" headers="Forest  Skewness">−0.200</td>
              <td align="center" headers="Forest  CV">9.30</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Cs</td>
              <td align="center" headers="Forest  Mean">0.551</td>
              <td align="center" headers="Forest  SD">0.0737</td>
              <td align="center" headers="Forest  Max">0.714</td>
              <td align="center" headers="Forest  Min">0.423</td>
              <td align="center" headers="Forest  Skewness">0.297</td>
              <td align="center" headers="Forest  CV">13.4</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Li</td>
              <td align="center" headers="Forest  Mean">6.43</td>
              <td align="center" headers="Forest  SD">0.694</td>
              <td align="center" headers="Forest  Max">8.46</td>
              <td align="center" headers="Forest  Min">4.39</td>
              <td align="center" headers="Forest  Skewness">−0.136</td>
              <td align="center" headers="Forest  CV">10.8</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">La</td>
              <td align="center" headers="Forest  Mean">15.0</td>
              <td align="center" headers="Forest  SD">1.57</td>
              <td align="center" headers="Forest  Max">18.5</td>
              <td align="center" headers="Forest  Min">11.5</td>
              <td align="center" headers="Forest  Skewness">−0.0324</td>
              <td align="center" headers="Forest  CV">10.4</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Nb</td>
              <td align="center" headers="Forest  Mean">0.370</td>
              <td align="center" headers="Forest  SD">0.0356</td>
              <td align="center" headers="Forest  Max">0.440</td>
              <td align="center" headers="Forest  Min">0.278</td>
              <td align="center" headers="Forest  Skewness">−0.436</td>
              <td align="center" headers="Forest  CV">9.64</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ni</td>
              <td align="center" headers="Forest  Mean">18.2</td>
              <td align="center" headers="Forest  SD">2.49</td>
              <td align="center" headers="Forest  Max">24.9</td>
              <td align="center" headers="Forest  Min">14.3</td>
              <td align="center" headers="Forest  Skewness">0.314</td>
              <td align="center" headers="Forest  CV">13.7</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Sr</td>
              <td align="center" headers="Forest  Mean">31.6</td>
              <td align="center" headers="Forest  SD">8.50</td>
              <td align="center" headers="Forest  Max">53.1</td>
              <td align="center" headers="Forest  Min">18.1</td>
              <td align="center" headers="Forest  Skewness">0.716</td>
              <td align="center" headers="Forest  CV">26.9</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">h*</td>
              <td align="center" headers="Forest  Mean">1.13</td>
              <td align="center" headers="Forest  SD">0.0371</td>
              <td align="center" headers="Forest  Max">1.22</td>
              <td align="center" headers="Forest  Min">1.06</td>
              <td align="center" headers="Forest  Skewness">0.257</td>
              <td align="center" headers="Forest  CV">3.27</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property" style="font-style: italic">x</td>
              <td align="center" headers="Forest  Mean">19.7</td>
              <td align="center" headers="Forest  SD">3.92</td>
              <td align="center" headers="Forest  Max">30.5</td>
              <td align="center" headers="Forest  Min">10.8</td>
              <td align="center" headers="Forest  Skewness">0.362</td>
              <td align="center" headers="Forest  CV">19.9</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Plan
              Curvature</td>
              <td align="center" headers="Forest  Mean">3.97 × 10<sup>−4</sup></td>
              <td align="center" headers="Forest  SD">3.27 × 10<sup>−3</sup></td>
              <td align="center" headers="Forest  Max">2.89 × 10<sup>−2</sup></td>
              <td align="center" headers="Forest  Min">−2.62 × 10<sup>−2</sup></td>
              <td align="center" headers="Forest  Skewness">7.91 × 10<sup>−1</sup></td>
              <td align="center" headers="Forest  CV">8.22 × 10<sup>2</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Profile
              Curvature</td>
              <td align="center" headers="Forest  Mean">−1.83 × 10<sup>−4</sup></td>
              <td align="center" headers="Forest  SD">9.47 × 10<sup>−3</sup></td>
              <td align="center" headers="Forest  Max">6.37 × 10<sup>−2</sup></td>
              <td align="center" headers="Forest  Min">−7.37 × 10<sup>−2</sup></td>
              <td align="center" headers="Forest  Skewness">−5.31 × 10<sup>−1</sup></td>
              <td align="center" headers="Forest  CV">−5.18 × 10<sup>3</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">SAGA Wetness
              Index</td>
              <td align="center" headers="Forest  Mean">6.00</td>
              <td align="center" headers="Forest  SD">0.988</td>
              <td align="center" headers="Forest  Max">8.48</td>
              <td align="center" headers="Forest  Min">2.21</td>
              <td align="center" headers="Forest  Skewness">−0.430</td>
              <td align="center" headers="Forest  CV">16.5</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Catchment
              Area</td>
              <td align="center" headers="Forest  Mean">571</td>
              <td align="center" headers="Forest  SD">1,940</td>
              <td align="center" headers="Forest  Max">25,400</td>
              <td align="center" headers="Forest  Min">3.44</td>
              <td align="center" headers="Forest  Skewness">6.60</td>
              <td align="center" headers="Forest  CV">339</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Rel. Slope
              Position</td>
              <td align="center" headers="Forest  Mean">0.222</td>
              <td align="center" headers="Forest  SD">0.232</td>
              <td align="center" headers="Forest  Max">0.993</td>
              <td align="center" headers="Forest  Min">0.00617</td>
              <td align="center" headers="Forest  Skewness">1.56</td>
              <td align="center" headers="Forest  CV">105</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Vert. Dist.
              Channel</td>
              <td align="center" headers="Forest  Mean">4.15 × 10<sup>−1</sup></td>
              <td align="center" headers="Forest  SD">4.43 × 10<sup>−1</sup></td>
              <td align="center" headers="Forest  Max">3.66</td>
              <td align="center" headers="Forest  Min">2.02 × 10<sup>−2</sup></td>
              <td align="center" headers="Forest  Skewness">2.96</td>
              <td align="center" headers="Forest  CV">1.07 × 10<sup>2</sup></td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Elevation</td>
              <td align="center" headers="Forest  Mean">369</td>
              <td align="center" headers="Forest  SD">3.34</td>
              <td align="center" headers="Forest  Max">377</td>
              <td align="center" headers="Forest  Min">359</td>
              <td align="center" headers="Forest  Skewness">−0.184</td>
              <td align="center" headers="Forest  CV">0.904</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </fig>
  </sec>
  <sec id="spatial-analysis">
    <title>3.2 Spatial analysis</title>
    <fig id="tbl-geocol-semivariogram">
      <caption><p>Table 3: Geostatistical parameters of the fitted
      semivariogram models of selected colour and geochemical properties
      within the agricultural and forested sites.</p></caption>
      <table-wrap>
        <table>
          <thead>
            <tr>
              <th align="center" id="Property" scope="col">Property</th>
              <th align="center" id="Kriging-Type" scope="col">Kriging
              Type<named-content content-type="gt_footnote_marks"><sup>1</sup></named-content></th>
              <th align="center" id="Nugget-U0028CoU0029" scope="col">Nugget
              (Co)</th>
              <th align="center" id="Sill-U0028Co-U002B-CU0029" scope="col">Sill
              (Co + C)</th>
              <th align="center" id="CU002FU0028C-U002B-CoU0029-U0028U0025U0029" scope="col">C/(C
              + Co) (%)</th>
              <th align="center" id="Range-U0028mU0029" scope="col">Range
              (m)</th>
              <th align="center" id="r2" scope="col">r<styled-content style="white-space:nowrap;"><sup>2</sup></styled-content></th>
              <th align="center" id="Spatial-Class" scope="col">Spatial
              Class<named-content content-type="gt_footnote_marks"><sup>2</sup></named-content></th>
            </tr>
          </thead>
          <tfoot>
            <tr>
              <td align="center" colspan="8"><named-content content-type="gt_footnote_marks"><sup>1</sup></named-content>
              Models are all isotropic.</td>
            </tr>
            <tr>
              <td align="center" colspan="8"><named-content content-type="gt_footnote_marks"><sup>2</sup></named-content>
              Strong spatial dependency (C/(C + Co) % &gt;75); Moderate
              spatial dependency (C/(C + Co) % between 75 and 25); Low
              spatial dependency (C/(C + Co) % &lt;25).</td>
            </tr>
          </tfoot>
          <tbody>
            <tr>
              <td align="center" colspan="8" id="Agriculture" style="font-weight: bold" scope="colgroup">Agriculture</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ca</td>
              <td align="center" headers="Agriculture  Kriging Type">Universal</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">7.2</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">580</td>
              <td align="center" headers="Agriculture  r2">0.9</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Co</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.7</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">208</td>
              <td align="center" headers="Agriculture  r2">0.4</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Cs</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">210</td>
              <td align="center" headers="Agriculture  r2">0.5</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Fe</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">185</td>
              <td align="center" headers="Agriculture  r2">0.2</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Li</td>
              <td align="center" headers="Agriculture  Kriging Type">Universal</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.3</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">1.5</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">81</td>
              <td align="center" headers="Agriculture  Range (m)">185</td>
              <td align="center" headers="Agriculture  r2">0.6</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">La</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.4</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">1.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">56</td>
              <td align="center" headers="Agriculture  Range (m)">308</td>
              <td align="center" headers="Agriculture  r2">0.5</td>
              <td align="center" headers="Agriculture  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Nb</td>
              <td align="center" headers="Agriculture  Kriging Type">Universal</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">91</td>
              <td align="center" headers="Agriculture  Range (m)">210</td>
              <td align="center" headers="Agriculture  r2">0.7</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Ni</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">1.4</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">8.9</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">84</td>
              <td align="center" headers="Agriculture  Range (m)">352</td>
              <td align="center" headers="Agriculture  r2">0.6</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Rb</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">1.4</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">27.6</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">95</td>
              <td align="center" headers="Agriculture  Range (m)">551</td>
              <td align="center" headers="Agriculture  r2">0.9</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">Sr</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.9</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">900.2</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">220</td>
              <td align="center" headers="Agriculture  r2">1.0</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">a*</td>
              <td align="center" headers="Agriculture  Kriging Type">Ordinary</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.4</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">1.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">59</td>
              <td align="center" headers="Agriculture  Range (m)">288</td>
              <td align="center" headers="Agriculture  r2">0.3</td>
              <td align="center" headers="Agriculture  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">b*</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.2</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.9</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">83</td>
              <td align="center" headers="Agriculture  Range (m)">199</td>
              <td align="center" headers="Agriculture  r2">0.3</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">c*</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.1</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">0.9</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">87</td>
              <td align="center" headers="Agriculture  Range (m)">199</td>
              <td align="center" headers="Agriculture  r2">0.3</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">h*</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.0</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">1.1</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">100</td>
              <td align="center" headers="Agriculture  Range (m)">185</td>
              <td align="center" headers="Agriculture  r2">0.2</td>
              <td align="center" headers="Agriculture  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Agriculture  Property">x</td>
              <td align="center" headers="Agriculture  Kriging Type">Simple</td>
              <td align="center" headers="Agriculture  Nugget (Co)">0.4</td>
              <td align="center" headers="Agriculture  Sill (Co + C)">1.0</td>
              <td align="center" headers="Agriculture  C/(C + Co) (%)">58</td>
              <td align="center" headers="Agriculture  Range (m)">220</td>
              <td align="center" headers="Agriculture  r2">0.1</td>
              <td align="center" headers="Agriculture  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" colspan="8" id="Forest" style="font-weight: bold" scope="colgroup">Forest</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ca</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">1.6</td>
              <td align="center" headers="Forest  Sill (Co + C)">2.7</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">41</td>
              <td align="center" headers="Forest  Range (m)">269</td>
              <td align="center" headers="Forest  r2">0.2</td>
              <td align="center" headers="Forest  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Co</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">2.1</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">100</td>
              <td align="center" headers="Forest  Range (m)">298</td>
              <td align="center" headers="Forest  r2">0.1</td>
              <td align="center" headers="Forest  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Cs</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">0.0</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">83</td>
              <td align="center" headers="Forest  Range (m)">237</td>
              <td align="center" headers="Forest  r2">0.2</td>
              <td align="center" headers="Forest  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Li</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">0.8</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">100</td>
              <td align="center" headers="Forest  Range (m)">222</td>
              <td align="center" headers="Forest  r2">0.3</td>
              <td align="center" headers="Forest  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">La</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">3.1</td>
              <td align="center" headers="Forest  Sill (Co + C)">7.4</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">59</td>
              <td align="center" headers="Forest  Range (m)">176</td>
              <td align="center" headers="Forest  r2">0.1</td>
              <td align="center" headers="Forest  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Nb</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">0.0</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">51</td>
              <td align="center" headers="Forest  Range (m)">224</td>
              <td align="center" headers="Forest  r2">0.2</td>
              <td align="center" headers="Forest  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Ni</td>
              <td align="center" headers="Forest  Kriging Type">Universal</td>
              <td align="center" headers="Forest  Nugget (Co)">6.7</td>
              <td align="center" headers="Forest  Sill (Co + C)">15.8</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">57</td>
              <td align="center" headers="Forest  Range (m)">187</td>
              <td align="center" headers="Forest  r2">0.2</td>
              <td align="center" headers="Forest  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">Sr</td>
              <td align="center" headers="Forest  Kriging Type">Simple</td>
              <td align="center" headers="Forest  Nugget (Co)">0.4</td>
              <td align="center" headers="Forest  Sill (Co + C)">1.0</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">65</td>
              <td align="center" headers="Forest  Range (m)">229</td>
              <td align="center" headers="Forest  r2">0.4</td>
              <td align="center" headers="Forest  Spatial Class">Moderate</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">h*</td>
              <td align="center" headers="Forest  Kriging Type">Universal</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">0.0</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">100</td>
              <td align="center" headers="Forest  Range (m)">230</td>
              <td align="center" headers="Forest  r2">0.3</td>
              <td align="center" headers="Forest  Spatial Class">Strong</td>
            </tr>
            <tr>
              <td align="center" headers="Forest  Property">x</td>
              <td align="center" headers="Forest  Kriging Type">Ordinary</td>
              <td align="center" headers="Forest  Nugget (Co)">0.0</td>
              <td align="center" headers="Forest  Sill (Co + C)">39.2</td>
              <td align="center" headers="Forest  C/(C + Co) (%)">100</td>
              <td align="center" headers="Forest  Range (m)">312</td>
              <td align="center" headers="Forest  r2">0.2</td>
              <td align="center" headers="Forest  Spatial Class">Strong</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </fig>
    <fig id="fig-ag_map">
      <caption><p>Figure 2: Kriged maps of select colour and geochemical
      properties and elevtion across the agricultural
      site.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/notebooks-property_maps-fig-ag_map-output-1.png" />
    </fig>
    <fig id="fig-forest_map">
      <caption><p>Figure 3: Kriged map of select colour and geochemical
      properties and elevation across the forested site.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/notebooks-property_maps-fig-forest_map-output-1.png" />
    </fig>
    <fig id="fig-rf-results">
      <caption><p>Figure 4: Heat map of the Random Forest regresssion
      results showing the ranking of the importance of terrain
      attributes (based on % increase in Mean Squared Error) in
      explaining the spatial variabilty of selected colour and
      geochemical properties within the agricultural and forested sites.
      Top panel shows an average ranking for each site and across both
      sites.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="index_files/figure-jats/notebooks-RF_summary-fig-rf-results-output-1.png" />
    </fig>
    <fig id="tbl-rf-summary">
      <caption><p>Table 4: Model summary and performance statistics for
      the random forest regression using the training, validation, and
      test data sets.</p></caption>
      <table-wrap>
        <table>
          <colgroup>
            <col width="17%" />
            <col width="17%" />
            <col width="17%" />
            <col width="17%" />
            <col width="17%" />
            <col width="17%" />
          </colgroup>
          <thead>
            <tr>
              <th align="left" id="property" style="font-weight: bold" scope="col">Property</th>
              <th align="left" id="MSE" style="font-weight: bold" scope="col">MSETraining<named-content content-type="gt_footnote_marks"><sup>1</sup></named-content></th>
              <th align="left" id="Var_exp" style="font-weight: bold" scope="col"><named-content content-type="gt_footnote_marks"><sup>2</sup></named-content></th>
              <th align="left" id="MSE_test" style="font-weight: bold" scope="col">MSETesting<named-content content-type="gt_footnote_marks"><sup>1</sup></named-content></th>
              <th align="left" id="Var_exp_test" style="font-weight: bold" scope="col"><named-content content-type="gt_footnote_marks"><sup>2</sup></named-content></th>
              <th align="left" id="R2" style="font-weight: bold" scope="col">{{R^2}}Testing</th>
            </tr>
          </thead>
          <tfoot>
            <tr>
              <td align="center" colspan="6"><named-content content-type="gt_footnote_marks"><sup>1</sup></named-content>
              Mean square error</td>
            </tr>
            <tr>
              <td align="center" colspan="6"><named-content content-type="gt_footnote_marks"><sup>2</sup></named-content>
              Percent variance explained</td>
            </tr>
          </tfoot>
          <tbody>
            <tr>
              <td align="center" colspan="6" id="Agriculture" style="font-weight: bold" scope="colgroup">Agriculture</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Ca</td>
              <td align="left" headers="Agriculture  MSE">0.374</td>
              <td align="left" headers="Agriculture  Var_exp">91.6</td>
              <td align="left" headers="Agriculture  MSE_test">0.359</td>
              <td align="left" headers="Agriculture  Var_exp_test">91.8</td>
              <td align="left" headers="Agriculture  R2">0.91</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Co</td>
              <td align="left" headers="Agriculture  MSE">0.089</td>
              <td align="left" headers="Agriculture  Var_exp">79.8</td>
              <td align="left" headers="Agriculture  MSE_test">0.080</td>
              <td align="left" headers="Agriculture  Var_exp_test">82.5</td>
              <td align="left" headers="Agriculture  R2">0.80</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Cs</td>
              <td align="left" headers="Agriculture  MSE">0.002</td>
              <td align="left" headers="Agriculture  Var_exp">85.7</td>
              <td align="left" headers="Agriculture  MSE_test">0.002</td>
              <td align="left" headers="Agriculture  Var_exp_test">86.4</td>
              <td align="left" headers="Agriculture  R2">0.85</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Fe</td>
              <td align="left" headers="Agriculture  MSE">0.001</td>
              <td align="left" headers="Agriculture  Var_exp">69.6</td>
              <td align="left" headers="Agriculture  MSE_test">0.001</td>
              <td align="left" headers="Agriculture  Var_exp_test">70.9</td>
              <td align="left" headers="Agriculture  R2">0.69</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Li</td>
              <td align="left" headers="Agriculture  MSE">0.538</td>
              <td align="left" headers="Agriculture  Var_exp">59.3</td>
              <td align="left" headers="Agriculture  MSE_test">0.533</td>
              <td align="left" headers="Agriculture  Var_exp_test">59.8</td>
              <td align="left" headers="Agriculture  R2">0.64</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">La</td>
              <td align="left" headers="Agriculture  MSE">0.048</td>
              <td align="left" headers="Agriculture  Var_exp">93.0</td>
              <td align="left" headers="Agriculture  MSE_test">0.044</td>
              <td align="left" headers="Agriculture  Var_exp_test">93.1</td>
              <td align="left" headers="Agriculture  R2">0.93</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Nb</td>
              <td align="left" headers="Agriculture  MSE">0.001</td>
              <td align="left" headers="Agriculture  Var_exp">57.3</td>
              <td align="left" headers="Agriculture  MSE_test">0.001</td>
              <td align="left" headers="Agriculture  Var_exp_test">59.1</td>
              <td align="left" headers="Agriculture  R2">0.55</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Ni</td>
              <td align="left" headers="Agriculture  MSE">0.338</td>
              <td align="left" headers="Agriculture  Var_exp">93.1</td>
              <td align="left" headers="Agriculture  MSE_test">0.335</td>
              <td align="left" headers="Agriculture  Var_exp_test">93.7</td>
              <td align="left" headers="Agriculture  R2">0.93</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Rb</td>
              <td align="left" headers="Agriculture  MSE">0.733</td>
              <td align="left" headers="Agriculture  Var_exp">95.3</td>
              <td align="left" headers="Agriculture  MSE_test">0.643</td>
              <td align="left" headers="Agriculture  Var_exp_test">96.1</td>
              <td align="left" headers="Agriculture  R2">0.95</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property">Sr</td>
              <td align="left" headers="Agriculture  MSE">97.221</td>
              <td align="left" headers="Agriculture  Var_exp">93.5</td>
              <td align="left" headers="Agriculture  MSE_test">93.970</td>
              <td align="left" headers="Agriculture  Var_exp_test">93.6</td>
              <td align="left" headers="Agriculture  R2">0.93</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property" style="font-style: italic">a*</td>
              <td align="left" headers="Agriculture  MSE">0.007</td>
              <td align="left" headers="Agriculture  Var_exp">85.0</td>
              <td align="left" headers="Agriculture  MSE_test">0.006</td>
              <td align="left" headers="Agriculture  Var_exp_test">86.9</td>
              <td align="left" headers="Agriculture  R2">0.85</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property" style="font-style: italic">b*</td>
              <td align="left" headers="Agriculture  MSE">0.136</td>
              <td align="left" headers="Agriculture  Var_exp">72.5</td>
              <td align="left" headers="Agriculture  MSE_test">0.120</td>
              <td align="left" headers="Agriculture  Var_exp_test">75.3</td>
              <td align="left" headers="Agriculture  R2">0.72</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property" style="font-style: italic">c*</td>
              <td align="left" headers="Agriculture  MSE">0.155</td>
              <td align="left" headers="Agriculture  Var_exp">73.2</td>
              <td align="left" headers="Agriculture  MSE_test">0.136</td>
              <td align="left" headers="Agriculture  Var_exp_test">75.9</td>
              <td align="left" headers="Agriculture  R2">0.73</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property" style="font-style: italic">h*</td>
              <td align="left" headers="Agriculture  MSE">0.000</td>
              <td align="left" headers="Agriculture  Var_exp">58.3</td>
              <td align="left" headers="Agriculture  MSE_test">0.000</td>
              <td align="left" headers="Agriculture  Var_exp_test">58.6</td>
              <td align="left" headers="Agriculture  R2">0.56</td>
            </tr>
            <tr>
              <td align="left" headers="Agriculture  property" style="font-style: italic">x</td>
              <td align="left" headers="Agriculture  MSE">0.628</td>
              <td align="left" headers="Agriculture  Var_exp">61.9</td>
              <td align="left" headers="Agriculture  MSE_test">0.701</td>
              <td align="left" headers="Agriculture  Var_exp_test">61.8</td>
              <td align="left" headers="Agriculture  R2">0.59</td>
            </tr>
            <tr>
              <td align="center" colspan="6" id="Forest" style="font-weight: bold" scope="colgroup">Forest</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Ca</td>
              <td align="left" headers="Forest  MSE">0.231</td>
              <td align="left" headers="Forest  Var_exp">61.1</td>
              <td align="left" headers="Forest  MSE_test">0.231</td>
              <td align="left" headers="Forest  Var_exp_test">60.7</td>
              <td align="left" headers="Forest  R2">0.63</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Co</td>
              <td align="left" headers="Forest  MSE">0.244</td>
              <td align="left" headers="Forest  Var_exp">39.1</td>
              <td align="left" headers="Forest  MSE_test">0.234</td>
              <td align="left" headers="Forest  Var_exp_test">42.9</td>
              <td align="left" headers="Forest  R2">0.48</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Cs</td>
              <td align="left" headers="Forest  MSE">0.002</td>
              <td align="left" headers="Forest  Var_exp">64.1</td>
              <td align="left" headers="Forest  MSE_test">0.002</td>
              <td align="left" headers="Forest  Var_exp_test">67.1</td>
              <td align="left" headers="Forest  R2">0.66</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Li</td>
              <td align="left" headers="Forest  MSE">0.278</td>
              <td align="left" headers="Forest  Var_exp">41.3</td>
              <td align="left" headers="Forest  MSE_test">0.282</td>
              <td align="left" headers="Forest  Var_exp_test">42.0</td>
              <td align="left" headers="Forest  R2">0.46</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">La</td>
              <td align="left" headers="Forest  MSE">1.401</td>
              <td align="left" headers="Forest  Var_exp">43.3</td>
              <td align="left" headers="Forest  MSE_test">1.323</td>
              <td align="left" headers="Forest  Var_exp_test">47.5</td>
              <td align="left" headers="Forest  R2">0.48</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Nb</td>
              <td align="left" headers="Forest  MSE">0.001</td>
              <td align="left" headers="Forest  Var_exp">55.0</td>
              <td align="left" headers="Forest  MSE_test">0.001</td>
              <td align="left" headers="Forest  Var_exp_test">55.9</td>
              <td align="left" headers="Forest  R2">0.58</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Ni</td>
              <td align="left" headers="Forest  MSE">2.819</td>
              <td align="left" headers="Forest  Var_exp">55.2</td>
              <td align="left" headers="Forest  MSE_test">2.806</td>
              <td align="left" headers="Forest  Var_exp_test">56.0</td>
              <td align="left" headers="Forest  R2">0.55</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property">Sr</td>
              <td align="left" headers="Forest  MSE">29.427</td>
              <td align="left" headers="Forest  Var_exp">59.4</td>
              <td align="left" headers="Forest  MSE_test">29.663</td>
              <td align="left" headers="Forest  Var_exp_test">59.1</td>
              <td align="left" headers="Forest  R2">0.59</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property" style="font-style: italic">h*</td>
              <td align="left" headers="Forest  MSE">0.001</td>
              <td align="left" headers="Forest  Var_exp">58.8</td>
              <td align="left" headers="Forest  MSE_test">0.001</td>
              <td align="left" headers="Forest  Var_exp_test">60.3</td>
              <td align="left" headers="Forest  R2">0.62</td>
            </tr>
            <tr>
              <td align="left" headers="Forest  property" style="font-style: italic">x</td>
              <td align="left" headers="Forest  MSE">5.646</td>
              <td align="left" headers="Forest  Var_exp">62.6</td>
              <td align="left" headers="Forest  MSE_test">5.810</td>
              <td align="left" headers="Forest  Var_exp_test">63.4</td>
              <td align="left" headers="Forest  R2">0.64</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </fig>
  </sec>
</sec>
</body>

<back>
<ref-list>
  <title>References</title>
  <ref id="ref-kariuki2009">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kariuki</surname><given-names>S. K.</given-names></name>
        <name><surname>Zhang</surname><given-names>H.</given-names></name>
        <name><surname>Schroder</surname><given-names>J. L.</given-names></name>
        <name><surname>Hanks</surname><given-names>T.</given-names></name>
        <name><surname>Payton</surname><given-names>M.</given-names></name>
        <name><surname>Morris</surname><given-names>T.</given-names></name>
      </person-group>
      <article-title>Spatial variability and soil sampling in a grazed pasture</article-title>
      <source>Communications in Soil Science and Plant Analysis</source>
      <year iso-8601-date="2009">2009</year>
      <volume>40</volume>
      <issue>9-10</issue>
      <uri>http://www.tandfonline.com/doi/abs/10.1080/00103620902832089</uri>
      <fpage>16741687</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-starr1995">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Starr</surname><given-names>J. L.</given-names></name>
        <name><surname>Meisinger</surname><given-names>J. J.</given-names></name>
        <name><surname>Parkin</surname><given-names>T. B.</given-names></name>
      </person-group>
      <article-title>Influence of sample size on chemical and physical soil measurements</article-title>
      <source>Soil Science Society of America Journal</source>
      <year iso-8601-date="1995">1995</year>
      <volume>59</volume>
      <issue>3</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.2136/sssaj1995.03615995005900030012x</uri>
      <pub-id pub-id-type="doi">10.2136/sssaj1995.03615995005900030012x</pub-id>
      <fpage>713</fpage>
      <lpage>719</lpage>
    </element-citation>
  </ref>
  <ref id="ref-du2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Du</surname><given-names>Pengfei</given-names></name>
        <name><surname>Walling</surname><given-names>Des E.</given-names></name>
      </person-group>
      <article-title>Fingerprinting surficial sediment sources: Exploring some potential problems associated with the spatial variability of source material properties</article-title>
      <source>Journal of Environmental Management</source>
      <year iso-8601-date="2017">2017</year>
      <volume>194</volume>
      <issue>1</issue>
      <uri>http://www.sciencedirect.com/science/article/pii/S0301479716303218</uri>
      <pub-id pub-id-type="doi">https://doi.org/10.1016/j.jenvman.2016.05.066</pub-id>
      <fpage>4</fpage>
      <lpage>15</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pulley2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pulley</surname><given-names>Simon</given-names></name>
        <name><surname>Foster</surname><given-names>Ian</given-names></name>
        <name><surname>Collins</surname><given-names>Adrian L.</given-names></name>
      </person-group>
      <article-title>The impact of catchment source group classification on the accuracy of sediment fingerprinting outputs</article-title>
      <source>Journal of Environmental Management</source>
      <year iso-8601-date="2017">2017</year>
      <volume>194</volume>
      <uri>http://www.sciencedirect.com/science/article/pii/S0301479716302195</uri>
      <fpage>16</fpage>
      <lpage>26</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lunamiño2024">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Luna Miño</surname><given-names>Maria Alejandra</given-names></name>
        <name><surname>Koiter</surname><given-names>Alexander J.</given-names></name>
        <name><surname>Lobb</surname><given-names>David A.</given-names></name>
      </person-group>
      <article-title>Effect of sampling design on characterizing surface soil fingerprinting properties</article-title>
      <source>Journal of Soils and Sediments</source>
      <year iso-8601-date="2024-05-01">2024</year><month>05</month><day>01</day>
      <volume>24</volume>
      <issue>5</issue>
      <uri>https://doi.org/10.1007/s11368-024-03805-x</uri>
      <pub-id pub-id-type="doi">10.1007/s11368-024-03805-x</pub-id>
      <fpage>2180</fpage>
      <lpage>2198</lpage>
    </element-citation>
  </ref>
  <ref id="ref-wilkinson2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Wilkinson</surname><given-names>Scott N.</given-names></name>
        <name><surname>Olley</surname><given-names>Jon M.</given-names></name>
        <name><surname>Furuichi</surname><given-names>Takahisa</given-names></name>
        <name><surname>Burton</surname><given-names>Joanne</given-names></name>
        <name><surname>Kinsey-Henderson</surname><given-names>Anne E.</given-names></name>
      </person-group>
      <article-title>Sediment source tracing with stratified sampling and weightings based on spatial gradients in soil erosion</article-title>
      <source>Journal of Soils and Sediments</source>
      <year iso-8601-date="2015-04-24">2015</year><month>04</month><day>24</day>
      <volume>15</volume>
      <issue>10</issue>
      <uri>http://proxy.library.unbc.ca:2118/article/10.1007/s11368-015-1134-2</uri>
      <pub-id pub-id-type="doi">10.1007/s11368-015-1134-2</pub-id>
      <fpage>2038</fpage>
      <lpage>2051</lpage>
    </element-citation>
  </ref>
  <ref id="ref-collins2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Collins</surname><given-names>Adrian L.</given-names></name>
        <name><surname>Burak</surname><given-names>Emma</given-names></name>
        <name><surname>Harris</surname><given-names>Paul</given-names></name>
        <name><surname>Pulley</surname><given-names>Simon</given-names></name>
        <name><surname>Cardenas</surname><given-names>Laura</given-names></name>
        <name><surname>Tang</surname><given-names>Qiang</given-names></name>
      </person-group>
      <article-title>Field scale temporal and spatial variability of δ13C, δ15N, TC and TN soil properties: Implications for sediment source tracing</article-title>
      <source>Geoderma</source>
      <year iso-8601-date="2019-01-01">2019</year><month>01</month><day>01</day>
      <volume>333</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S0016706118303185</uri>
      <pub-id pub-id-type="doi">10.1016/j.geoderma.2018.07.019</pub-id>
      <fpage>108</fpage>
      <lpage>122</lpage>
    </element-citation>
  </ref>
  <ref id="ref-collins2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Collins</surname><given-names>Adrian L.</given-names></name>
        <name><surname>Blackwell</surname><given-names>Martin</given-names></name>
        <name><surname>Boeckx</surname><given-names>Pascal</given-names></name>
        <name><surname>Chivers</surname><given-names>Charlotte-Anne</given-names></name>
        <name><surname>Emelko</surname><given-names>Monica</given-names></name>
        <name><surname>Evrard</surname><given-names>Olivier</given-names></name>
        <name><surname>Foster</surname><given-names>Ian</given-names></name>
        <name><surname>Gellis</surname><given-names>Allen</given-names></name>
        <name><surname>Gholami</surname><given-names>Hamid</given-names></name>
        <name><surname>Granger</surname><given-names>Steve</given-names></name>
        <name><surname>Harris</surname><given-names>Paul</given-names></name>
        <name><surname>Horowitz</surname><given-names>Arthur J.</given-names></name>
        <name><surname>Laceby</surname><given-names>J. Patrick</given-names></name>
        <name><surname>Martinez-Carreras</surname><given-names>Nuria</given-names></name>
        <name><surname>Minella</surname><given-names>Jean</given-names></name>
        <name><surname>Mol</surname><given-names>Lisa</given-names></name>
        <name><surname>Nosrati</surname><given-names>Kazem</given-names></name>
        <name><surname>Pulley</surname><given-names>Simon</given-names></name>
        <name><surname>Silins</surname><given-names>Uldis</given-names></name>
        <name><surname>Silva</surname><given-names>Yuri Jacques da</given-names></name>
        <name><surname>Stone</surname><given-names>Micheal</given-names></name>
        <name><surname>Tiecher</surname><given-names>Tales</given-names></name>
        <name><surname>Upadhayay</surname><given-names>Hari Ram</given-names></name>
        <name><surname>Zhang</surname><given-names>Yusheng</given-names></name>
      </person-group>
      <article-title>Sediment source fingerprinting: benchmarking recent outputs, remaining challenges and emerging themes</article-title>
      <source>Journal of Soils and Sediments</source>
      <year iso-8601-date="2020-12-01">2020</year><month>12</month><day>01</day>
      <volume>20</volume>
      <issue>12</issue>
      <uri>https://doi.org/10.1007/s11368-020-02755-4</uri>
      <pub-id pub-id-type="doi">10.1007/s11368-020-02755-4</pub-id>
      <fpage>4160</fpage>
      <lpage>4193</lpage>
    </element-citation>
  </ref>
  <ref id="ref-pulley2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Pulley</surname><given-names>S.</given-names></name>
        <name><surname>Collins</surname><given-names>A. L.</given-names></name>
        <name><surname>Van der Waal</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Variability in the mineral magnetic properties of soils and sediments within a single field in the cape fold mountains, south africa: Implications for sediment source tracing</article-title>
      <source>CATENA</source>
      <year iso-8601-date="2018-04-01">2018</year><month>04</month><day>01</day>
      <volume>163</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S0341816217304216</uri>
      <pub-id pub-id-type="doi">10.1016/j.catena.2017.12.019</pub-id>
      <fpage>172</fpage>
      <lpage>183</lpage>
    </element-citation>
  </ref>
  <ref id="ref-haddadchi2019">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Haddadchi</surname><given-names>Arman</given-names></name>
        <name><surname>Hicks</surname><given-names>Murray</given-names></name>
        <name><surname>Olley</surname><given-names>Jon M.</given-names></name>
        <name><surname>Singh</surname><given-names>Shailesh</given-names></name>
        <name><surname>Srinivasan</surname><given-names>M.s.</given-names></name>
      </person-group>
      <article-title>Grid-based sediment tracing approach to determine sediment sources</article-title>
      <source>Land Degradation and Development</source>
      <year iso-8601-date="2019">2019</year>
      <volume>30</volume>
      <issue>17</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.1002/ldr.3407</uri>
      <pub-id pub-id-type="doi">10.1002/ldr.3407</pub-id>
      <fpage>2088</fpage>
      <lpage>2106</lpage>
    </element-citation>
  </ref>
  <ref id="ref-lima2023">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Lima</surname><given-names>Francielle R. D.</given-names></name>
        <name><surname>Pereira</surname><given-names>Polyana</given-names></name>
        <name><surname>Vasques</surname><given-names>Isabela C. F.</given-names></name>
        <name><surname>Silva Junior</surname><given-names>Ediu C.</given-names></name>
        <name><surname>Mancini</surname><given-names>Marcelo</given-names></name>
        <name><surname>Oliveira</surname><given-names>Jakeline R.</given-names></name>
        <name><surname>Prianti</surname><given-names>Marcelo T. A.</given-names></name>
        <name><surname>Windmöller</surname><given-names>Cláudia C.</given-names></name>
        <name><surname>Weindorf</surname><given-names>David C.</given-names></name>
        <name><surname>Curi</surname><given-names>Nilton</given-names></name>
        <name><surname>Ribeiro</surname><given-names>Bruno T.</given-names></name>
        <name><surname>Richardson</surname><given-names>Jacob</given-names></name>
        <name><surname>Marques</surname><given-names>João José</given-names></name>
        <name><surname>Guilherme</surname><given-names>Luiz Roberto G.</given-names></name>
      </person-group>
      <article-title>Predictive modeling of total hg background concentration in soils of the amazon rainforest biome with support of proximal sensors and auxiliary variables</article-title>
      <source>Journal of South American Earth Sciences</source>
      <year iso-8601-date="2023-09-01">2023</year><month>09</month><day>01</day>
      <volume>129</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S0895981123003218</uri>
      <pub-id pub-id-type="doi">10.1016/j.jsames.2023.104510</pub-id>
      <fpage>104510</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-umali2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Umali</surname><given-names>Beng P.</given-names></name>
        <name><surname>Oliver</surname><given-names>Danielle P.</given-names></name>
        <name><surname>Forrester</surname><given-names>Sean</given-names></name>
        <name><surname>Chittleborough</surname><given-names>David J.</given-names></name>
        <name><surname>Hutson</surname><given-names>John L.</given-names></name>
        <name><surname>Kookana</surname><given-names>Rai S.</given-names></name>
        <name><surname>Ostendorf</surname><given-names>Bertram</given-names></name>
      </person-group>
      <article-title>The effect of terrain and management on the spatial variability of soil properties in an apple orchard</article-title>
      <source>CATENA</source>
      <year iso-8601-date="2012-06-01">2012</year><month>06</month><day>01</day>
      <volume>93</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S0341816212000136</uri>
      <pub-id pub-id-type="doi">10.1016/j.catena.2012.01.010</pub-id>
      <fpage>38</fpage>
      <lpage>48</lpage>
    </element-citation>
  </ref>
  <ref id="ref-beaudette2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Beaudette</surname><given-names>Dylan E.</given-names></name>
        <name><surname>Dahlgren</surname><given-names>Randy A.</given-names></name>
        <name><surname>O’Geen</surname><given-names>Anthony T.</given-names></name>
      </person-group>
      <article-title>Terrain-Shape Indices for Modeling Soil Moisture Dynamics</article-title>
      <source>Soil Science Society of America Journal</source>
      <year iso-8601-date="2013">2013</year>
      <volume>77</volume>
      <issue>5</issue>
      <uri>https://onlinelibrary.wiley.com/doi/abs/10.2136/sssaj2013.02.0048</uri>
      <pub-id pub-id-type="doi">10.2136/sssaj2013.02.0048</pub-id>
      <fpage>1696</fpage>
      <lpage>1710</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kokulan2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Kokulan</surname><given-names>Vivekananthan</given-names></name>
        <name><surname>Akinremi</surname><given-names>Olalekan</given-names></name>
        <name><surname>Moulin</surname><given-names>Alan Pierre</given-names></name>
        <name><surname>Kumaragamage</surname><given-names>Darshani</given-names></name>
      </person-group>
      <article-title>Importance of terrain attributes in relation to the spatial distribution of soil properties at the micro scale: A case study</article-title>
      <source>Canadian Journal of Soil Science</source>
      <year iso-8601-date="2018-06">2018</year><month>06</month>
      <volume>98</volume>
      <issue>2</issue>
      <uri>https://cdnsciencepub.com/doi/10.1139/cjss-2017-0128</uri>
      <pub-id pub-id-type="doi">10.1139/cjss-2017-0128</pub-id>
      <fpage>292</fpage>
      <lpage>305</lpage>
    </element-citation>
  </ref>
  <ref id="ref-brown2004">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Brown</surname><given-names>David J.</given-names></name>
        <name><surname>Clayton</surname><given-names>Murray K.</given-names></name>
        <name><surname>McSweeney</surname><given-names>Kevin</given-names></name>
      </person-group>
      <article-title>Potential terrain controls on soil color, texture contrast and grain-size deposition for the original catena landscape in uganda</article-title>
      <source>Geoderma</source>
      <year iso-8601-date="2004-09-01">2004</year><month>09</month><day>01</day>
      <volume>122</volume>
      <issue>1</issue>
      <uri>https://www.sciencedirect.com/science/article/pii/S0016706104000035</uri>
      <pub-id pub-id-type="doi">10.1016/j.geoderma.2003.12.004</pub-id>
      <fpage>51</fpage>
      <lpage>72</lpage>
    </element-citation>
  </ref>
  <ref id="ref-zhang2012">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Zhang</surname><given-names>Shiwen</given-names></name>
        <name><surname>Huang</surname><given-names>Yuanfang</given-names></name>
        <name><surname>Shen</surname><given-names>Chongyang</given-names></name>
        <name><surname>Ye</surname><given-names>Huichun</given-names></name>
        <name><surname>Du</surname><given-names>Yichun</given-names></name>
      </person-group>
      <article-title>Spatial prediction of soil organic matter using terrain indices and categorical variables as auxiliary information</article-title>
      <source>Geoderma</source>
      <year iso-8601-date="2012-02-01">2012</year><month>02</month><day>01</day>
      <volume>171-172</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S001670611100214X</uri>
      <pub-id pub-id-type="doi">10.1016/j.geoderma.2011.07.012</pub-id>
      <fpage>35</fpage>
      <lpage>43</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ritchie1970">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Ritchie</surname><given-names>J. C.</given-names></name>
        <name><surname>Clebsch</surname><given-names>E. E. C.</given-names></name>
        <name><surname>Rudolph</surname><given-names>W. K.</given-names></name>
      </person-group>
      <article-title>Distribution of fallout and natural gamma radionuclides in litter, humus and surface mineral soil layers under natural vegetation in the great smoky mountains, north carolina-tennessee</article-title>
      <source>Health Physics</source>
      <year iso-8601-date="1970-05">1970</year><month>05</month>
      <volume>18</volume>
      <issue>5</issue>
      <uri>https://journals.lww.com/health-physics/Abstract/1970/05000/Distribution_of_Fallout_and_Natural_Gamma.3.aspx</uri>
      <fpage>479</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-vasu2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Vasu</surname><given-names>Duraisamy</given-names></name>
        <name><surname>Singh</surname><given-names>S. K.</given-names></name>
        <name><surname>Sahu</surname><given-names>Nisha</given-names></name>
        <name><surname>Tiwary</surname><given-names>Pramod</given-names></name>
        <name><surname>Chandran</surname><given-names>P.</given-names></name>
        <name><surname>Duraisami</surname><given-names>V. P.</given-names></name>
        <name><surname>Ramamurthy</surname><given-names>V.</given-names></name>
        <name><surname>Lalitha</surname><given-names>M.</given-names></name>
        <name><surname>Kalaiselvi</surname><given-names>B.</given-names></name>
      </person-group>
      <article-title>Assessment of spatial variability of soil properties using geospatial techniques for farm level nutrient management</article-title>
      <source>Soil and Tillage Research</source>
      <year iso-8601-date="2017-06-01">2017</year><month>06</month><day>01</day>
      <volume>169</volume>
      <uri>https://www.sciencedirect.com/science/article/pii/S0167198717300065</uri>
      <pub-id pub-id-type="doi">10.1016/j.still.2017.01.006</pub-id>
      <fpage>25</fpage>
      <lpage>34</lpage>
    </element-citation>
  </ref>
  <ref id="ref-viscarrarossel2006">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Viscarra Rossel</surname><given-names>R. A.</given-names></name>
        <name><surname>Minasny</surname><given-names>B.</given-names></name>
        <name><surname>Roudier</surname><given-names>P.</given-names></name>
        <name><surname>McBratney</surname><given-names>A. B.</given-names></name>
      </person-group>
      <article-title>Colour space models for soil science</article-title>
      <source>Geoderma</source>
      <year iso-8601-date="2006">2006</year>
      <volume>133</volume>
      <issue>3</issue>
      <fpage>320337</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-sun2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Sun</surname><given-names>Yazhou</given-names></name>
        <name><surname>Guo</surname><given-names>Wenxuan</given-names></name>
        <name><surname>Weindorf</surname><given-names>David C.</given-names></name>
        <name><surname>Sun</surname><given-names>Fujun</given-names></name>
        <name><surname>Deb</surname><given-names>Sanjit</given-names></name>
        <name><surname>Cao</surname><given-names>Guofeng</given-names></name>
        <name><surname>Neupane</surname><given-names>Jasmine</given-names></name>
        <name><surname>Lin</surname><given-names>Zhe</given-names></name>
        <name><surname>Raihan</surname><given-names>Abir</given-names></name>
      </person-group>
      <article-title>Field-scale spatial variability of soil calcium in a semi-arid region: Implications for soil erosion and site-specific management</article-title>
      <source>PEDOSPHERE</source>
      <year iso-8601-date="2021-10">2021</year><month>10</month>
      <volume>31</volume>
      <issue>5</issue>
      <uri>https://www.webofscience.com/wos/woscc/summary/a5c79ace-f964-4a0b-90b2-d726580a394c-fae59ae2/relevance/1</uri>
      <pub-id pub-id-type="doi">10.1016/S1002-0160(21)60019-X</pub-id>
      <fpage>705</fpage>
      <lpage>714</lpage>
    </element-citation>
  </ref>
  <ref id="ref-koiter2013">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Koiter</surname><given-names>A. J.</given-names></name>
        <name><surname>Owens</surname><given-names>P. N.</given-names></name>
        <name><surname>Petticrew</surname><given-names>E. L.</given-names></name>
        <name><surname>Lobb</surname><given-names>D. A.</given-names></name>
      </person-group>
      <article-title>The behavioural characteristics of sediment properties and their implications for sediment fingerprinting as an approach for identifying sediment sources in river basins</article-title>
      <source>Earth-Science Reviews</source>
      <year iso-8601-date="2013-10">2013</year><month>10</month>
      <volume>125</volume>
      <uri>http://www.sciencedirect.com/science/article/pii/S0012825213001074</uri>
      <pub-id pub-id-type="doi">https://doi.org/10.1016/j.earscirev.2013.05.009</pub-id>
      <fpage>24</fpage>
      <lpage>42</lpage>
    </element-citation>
  </ref>
  <ref id="ref-collins1997">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Collins</surname><given-names>A. L.</given-names></name>
        <name><surname>Walling</surname><given-names>D. E.</given-names></name>
        <name><surname>Leeks</surname><given-names>G. J. L.</given-names></name>
      </person-group>
      <article-title>Source type ascription for fluvial suspended sediment based on a quantitative composite fingerprinting technique</article-title>
      <source>Catena</source>
      <year iso-8601-date="1997-03">1997</year><month>03</month>
      <volume>29</volume>
      <issue>1</issue>
      <uri>http://www.sciencedirect.com/science/article/B6VCG-3SVY7CV-1/2/17d8e824e1b6c26e15fcd31608eb6d05</uri>
      <pub-id pub-id-type="doi">https://doi.org/10.1016/S0341-8162(96)00064-1</pub-id>
      <fpage>1</fpage>
      <lpage>27</lpage>
    </element-citation>
  </ref>
  <ref id="ref-ehrlich1958">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Ehrlich</surname><given-names>W. A</given-names></name>
        <name><surname>Pratt</surname><given-names>L. E.</given-names></name>
        <name><surname>Leclaire</surname><given-names>F. P.</given-names></name>
      </person-group>
      <article-title>Reconnaissance soil survey of west-lake map sheet area</article-title>
      <year iso-8601-date="1958">1958</year>
    </element-citation>
  </ref>
  <ref id="ref-beck2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Beck</surname><given-names>Hylke E.</given-names></name>
        <name><surname>Zimmermann</surname><given-names>Niklaus E.</given-names></name>
        <name><surname>McVicar</surname><given-names>Tim R.</given-names></name>
        <name><surname>Vergopolan</surname><given-names>Noemi</given-names></name>
        <name><surname>Berg</surname><given-names>Alexis</given-names></name>
        <name><surname>Wood</surname><given-names>Eric F.</given-names></name>
      </person-group>
      <article-title>Present and future Köppen-Geiger climate classification maps at 1-km resolution</article-title>
      <source>Scientific Data</source>
      <year iso-8601-date="2018-10-30">2018</year><month>10</month><day>30</day>
      <volume>5</volume>
      <issue>1</issue>
      <uri>https://www.nature.com/articles/sdata2018214</uri>
      <pub-id pub-id-type="doi">10.1038/sdata.2018.214</pub-id>
      <fpage>180214</fpage>
      <lpage></lpage>
    </element-citation>
  </ref>
  <ref id="ref-environmentandclimatechangecanada2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Environment</surname></name>
        <name><surname>Climate Change Canada</surname></name>
      </person-group>
      <article-title>Canadian Climate Normals</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://climate.weather.gc.ca/climate_normals/index_e.html</uri>
    </element-citation>
  </ref>
  <ref id="ref-mackay1970">
    <element-citation publication-type="thesis">
      <person-group person-group-type="author">
        <name><surname>MacKay</surname><given-names>G. H</given-names></name>
      </person-group>
      <article-title>A quantitative study of geomorphology of the wilson creek watershed, manitoba</article-title>
      <publisher-loc>Winnipeg, MB</publisher-loc>
      <year iso-8601-date="1970">1970</year>
    </element-citation>
  </ref>
  <ref id="ref-laceby2017">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Laceby</surname><given-names>J. Patrick</given-names></name>
        <name><surname>Evrard</surname><given-names>Olivier</given-names></name>
        <name><surname>Smith</surname><given-names>H. G</given-names></name>
        <name><surname>Blake</surname><given-names>W. H.</given-names></name>
        <name><surname>Olley</surname><given-names>J. M.</given-names></name>
        <name><surname>Minella</surname><given-names>Jean P. G.</given-names></name>
        <name><surname>Owens</surname><given-names>P N</given-names></name>
      </person-group>
      <article-title>The challenges and opportunities of addressing particle size effects in sediment source fingerprinting: A review</article-title>
      <source>Earth-Science Reviews</source>
      <year iso-8601-date="2017">2017</year>
      <volume>169</volume>
      <uri>http://proxy.library.unbc.ca:2111/science/article/pii/S0012825216304548</uri>
      <pub-id pub-id-type="doi">https://doi.org/10.1016/j.earscirev.2017.04.009</pub-id>
      <fpage>85</fpage>
      <lpage>103</lpage>
    </element-citation>
  </ref>
  <ref id="ref-boudreault2018">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Boudreault</surname><given-names>Monica</given-names></name>
        <name><surname>Koiter</surname><given-names>A J</given-names></name>
        <name><surname>Lobb</surname><given-names>D A</given-names></name>
        <name><surname>Owens</surname><given-names>P N</given-names></name>
        <name><surname>Liu</surname><given-names>K</given-names></name>
        <name><surname>Benoy</surname><given-names>Glenn</given-names></name>
        <name><surname>Danielescu</surname><given-names>S</given-names></name>
        <name><surname>Li</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>Using colour, shape and radionuclide sediment fingerprints to identify sources of sediment in an agricultural watershed in atlantic canada</article-title>
      <source>Canadian Water Resources Journal</source>
      <year iso-8601-date="2018">2018</year>
      <volume>43</volume>
      <issue>3</issue>
      <pub-id pub-id-type="doi">https://doi.org/10.1080/07011784.2018.1451781</pub-id>
      <fpage>347</fpage>
      <lpage>365</lpage>
    </element-citation>
  </ref>
  <ref id="ref-koiter2021">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Koiter</surname><given-names>Alex</given-names></name>
      </person-group>
      <article-title>Colour analysis scripts</article-title>
      <year iso-8601-date="2021-07-22">2021</year><month>07</month><day>22</day>
      <uri>https://github.com/alex-koiter/Colour-analysis</uri>
      <pub-id pub-id-type="doi">10.5281/zenodo.5123327</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-naturalresourcescanada2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Natural Resources Canada</surname></name>
      </person-group>
      <article-title>High Resolution Digital Elevation Model Mosaic (HRDEM Mosaic) - CanElevation Series</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://open.canada.ca/data/en/dataset/0fe65119-e96e-4a57-8bfe-9d9245fba06b</uri>
    </element-citation>
  </ref>
  <ref id="ref-agisoft2021">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>Agisoft</surname></name>
      </person-group>
      <article-title>Agisoft metashape: installer</article-title>
      <year iso-8601-date="2021">2021</year>
      <uri>https://www.agisoft.com/downloads/installer/</uri>
    </element-citation>
  </ref>
  <ref id="ref-conrad2015">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Conrad</surname><given-names>O.</given-names></name>
        <name><surname>Bechtel</surname><given-names>B.</given-names></name>
        <name><surname>Bock</surname><given-names>M.</given-names></name>
        <name><surname>Dietrich</surname><given-names>H.</given-names></name>
        <name><surname>Fischer</surname><given-names>E.</given-names></name>
        <name><surname>Gerlitz</surname><given-names>L.</given-names></name>
        <name><surname>Wehberg</surname><given-names>J.</given-names></name>
        <name><surname>Wichmann</surname><given-names>V.</given-names></name>
        <name><surname>Böhner</surname><given-names>J.</given-names></name>
      </person-group>
      <article-title>System for automated geoscientific analyses (SAGA) v. 2.1.4</article-title>
      <source>Geoscientific Model Development</source>
      <year iso-8601-date="2015-07-07">2015</year><month>07</month><day>07</day>
      <volume>8</volume>
      <issue>7</issue>
      <uri>https://gmd.copernicus.org/articles/8/1991/2015/</uri>
      <pub-id pub-id-type="doi">10.5194/gmd-8-1991-2015</pub-id>
      <fpage>1991</fpage>
      <lpage>2007</lpage>
    </element-citation>
  </ref>
  <ref id="ref-esri2024">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Esri</surname></name>
      </person-group>
      <source>ArcGIS pro</source>
      <publisher-name>Esri</publisher-name>
      <year iso-8601-date="2024">2024</year>
      <uri>https://www.esri.ca/</uri>
    </element-citation>
  </ref>
  <ref id="ref-rcoreteam2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>R Core Team</surname></name>
      </person-group>
      <article-title>R: A language and environment for statistical computing</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>http://www.R-project.org</uri>
    </element-citation>
  </ref>
  <ref id="ref-rstudio2024">
    <element-citation>
      <person-group person-group-type="author">
        <name><surname>RStudio</surname></name>
      </person-group>
      <article-title>RStudio: Integrated development environment for r</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>http://www.rstudio.org/</uri>
    </element-citation>
  </ref>
  <ref id="ref-wickham2016">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Wickham</surname><given-names>H</given-names></name>
      </person-group>
      <source>ggplot2: Elegant graphics for data analysis</source>
      <publisher-name>Springer-Verlag</publisher-name>
      <publisher-loc>New York NY U.S.A</publisher-loc>
      <year iso-8601-date="2016">2016</year>
    </element-citation>
  </ref>
  <ref id="ref-hijmans2024">
    <element-citation publication-type="book">
      <person-group person-group-type="author">
        <name><surname>Hijmans</surname><given-names>Robert J.</given-names></name>
      </person-group>
      <source>Terra: Spatial data analysis</source>
      <year iso-8601-date="2024">2024</year>
      <uri>https://CRAN.R-project.org/package=terra</uri>
    </element-citation>
  </ref>
  <ref id="ref-liaw2002">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Liaw</surname><given-names>Andy</given-names></name>
        <name><surname>Wiener</surname><given-names>Matthew</given-names></name>
      </person-group>
      <article-title>Classification and regression by randomForest</article-title>
      <source>R News</source>
      <year iso-8601-date="2002">2002</year>
      <volume>2</volume>
      <issue>3</issue>
      <uri>https://CRAN.R-project.org/doc/Rnews/</uri>
      <fpage>18</fpage>
      <lpage>22</lpage>
    </element-citation>
  </ref>
  <ref id="ref-Naimi2014">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Naimi</surname><given-names>Babak</given-names></name>
        <name><surname>Hamm</surname><given-names>Nicholas a.s.</given-names></name>
        <name><surname>Groen</surname><given-names>Thomas A.</given-names></name>
        <name><surname>Skidmore</surname><given-names>Andrew K.</given-names></name>
        <name><surname>Toxopeus</surname><given-names>Albertus G.</given-names></name>
      </person-group>
      <article-title>Where is positional uncertainty a problem for species distribution modelling</article-title>
      <source>Ecography</source>
      <year iso-8601-date="2014">2014</year>
      <volume>37</volume>
      <pub-id pub-id-type="doi">10.1111/j.1600-0587.2013.00205.x</pub-id>
      <fpage>191</fpage>
      <lpage>203</lpage>
    </element-citation>
  </ref>
  <ref id="ref-kuhn2008">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <string-name>Kuhn</string-name>
        <string-name>Max</string-name>
      </person-group>
      <article-title>Building predictive models in r using the caret package</article-title>
      <source>Journal of Statistical Software</source>
      <year iso-8601-date="2008">2008</year>
      <volume>28</volume>
      <issue>5</issue>
      <uri>https://www.jstatsoft.org/index.php/jss/article/view/v028i05</uri>
      <pub-id pub-id-type="doi">10.18637/jss.v028.i05</pub-id>
      <fpage>1</fpage>
      <lpage>26</lpage>
    </element-citation>
  </ref>
</ref-list>
</back>

<sub-article article-type="notebook" id="nb-1-nb-1">
<front-stub>
<title-group>
<article-title>CIE chroma (h*) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-1">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-1">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;h_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-1">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = h_c)) +
  scale_fill_viridis_c(name = &quot;h*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_col_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-1">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-1">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -h_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-1">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-1">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(h_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_col_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-1">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(h_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$h_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -h_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = h_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$h_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -h_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 3.833919e-05
                    % Var explained: 58.31
                       Test set MSE: 0
                    % Var explained: 58.65</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_col_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-1">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$h_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0189354 -0.0027100  0.0004847  0.0029041  0.0140500 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.60579    0.01892   32.02   &lt;2e-16 ***
obs          0.49707    0.01572   31.63   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.004364 on 771 degrees of freedom
Multiple R-squared:  0.5647,    Adjusted R-squared:  0.5641 
F-statistic:  1000 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_col_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-1">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-1">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
3  96.11723    0.06059838       saga_wetness_index
7 101.21894    0.04926193                elevation
5  62.18459    0.02598799  relative_slope_position
6  69.44128    0.02420393 channel_network_distance
4  61.86519    0.02382375           catchment_area
2  44.95797    0.01556544        profile_curvature
1  26.06190    0.01134070           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-1">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 101.21894    0.04926193                elevation
3  96.11723    0.06059838       saga_wetness_index
6  69.44128    0.02420393 channel_network_distance
5  62.18459    0.02598799  relative_slope_position
4  61.86519    0.02382375           catchment_area
2  44.95797    0.01556544        profile_curvature
1  26.06190    0.01134070           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-1">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="h_col_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-1">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;h_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;h_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-2-nb-2">
<front-stub>
<title-group>
<article-title>Calcium (Ca) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-2">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-2">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;ca&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-2">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = ca)) +
  scale_fill_viridis_c(name = &quot;Ca&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-2">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-2">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -ca)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-2">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-2">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(ca ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-2">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(ca ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$ca,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -ca))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = ca ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$ca, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -ca)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.2310837
                    % Var explained: 61.05
                       Test set MSE: 0.23
                    % Var explained: 60.7</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-2">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$ca)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.34799 -0.20590  0.00445  0.21274  1.24230 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.75884    0.03118   24.34   &lt;2e-16 ***
obs          0.59918    0.01540   38.90   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.3507 on 882 degrees of freedom
Multiple R-squared:  0.6318,    Adjusted R-squared:  0.6313 
F-statistic:  1513 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-2">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-2">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 174.85584     406.34168                elevation
6  73.02606     367.89559 channel_network_distance
3  60.85516     249.98245       saga_wetness_index
2  52.37745     192.90552        profile_curvature
5  88.41915     156.69616  relative_slope_position
4  35.59396     110.19317           catchment_area
1  18.15861      81.34798           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-2">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 174.85584     406.34168                elevation
5  88.41915     156.69616  relative_slope_position
6  73.02606     367.89559 channel_network_distance
3  60.85516     249.98245       saga_wetness_index
2  52.37745     192.90552        profile_curvature
4  35.59396     110.19317           catchment_area
1  18.15861      81.34798           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-2">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-2">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">#| 
importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Ca&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data

write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Ca&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance


write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-3-nb-3">
<front-stub>
<title-group>
<article-title>Cobalt (Co) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-3">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-3">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;co&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-3">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = co)) +
  scale_fill_viridis_c(name = &quot;Co&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-3">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-3">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -co)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-3">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-3">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(co ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-3">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(co ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$co,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -co))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = co ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$co, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -co)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.08889758
                    % Var explained: 79.78
                       Test set MSE: 0.08
                    % Var explained: 82.48</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-3">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$co)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.92361 -0.15355 -0.02739  0.13181  1.00677 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  1.87975    0.12222   15.38   &lt;2e-16 ***
obs          0.78751    0.01397   56.36   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2543 on 771 degrees of freedom
Multiple R-squared:  0.8047,    Adjusted R-squared:  0.8045 
F-statistic:  3177 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-3">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-3">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 194.34205     688.63333                elevation
3  88.92150     112.86342       saga_wetness_index
5  77.20157      69.78182  relative_slope_position
6  54.41998      51.55393 channel_network_distance
4  29.46001      37.39522           catchment_area
2  20.36049      32.40214        profile_curvature
1  15.21067      25.89047           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-3">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 194.34205     688.63333                elevation
3  88.92150     112.86342       saga_wetness_index
5  77.20157      69.78182  relative_slope_position
6  54.41998      51.55393 channel_network_distance
4  29.46001      37.39522           catchment_area
2  20.36049      32.40214        profile_curvature
1  15.21067      25.89047           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-3">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Co_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-3">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Co&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Co&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-4-nb-4">
<front-stub>
<title-group>
<article-title>Chromatic coordinate opponent red–green scales (a*)
Agriculture site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-4">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-4">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;a_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-4">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = a_c)) +
  scale_fill_viridis_c(name = &quot;a*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="a_col_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-4">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-4">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -a_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-4">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-4">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(a_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="a_col_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-4">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(a_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$a_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -a_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = a_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$a_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -a_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.006589425
                    % Var explained: 85.05
                       Test set MSE: 0.01
                    % Var explained: 86.85</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="a_col_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-4">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$a_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.33586 -0.02717  0.00204  0.04188  0.30980 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.73403    0.03899   18.83   &lt;2e-16 ***
obs          0.78120    0.01166   66.97   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.06938 on 771 degrees of freedom
Multiple R-squared:  0.8533,    Adjusted R-squared:  0.8531 
F-statistic:  4485 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="a_col_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-4">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-4">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 140.78247     50.076968                elevation
3  58.04786     20.497472       saga_wetness_index
5  71.37708     10.854536  relative_slope_position
2  37.72429      7.004321        profile_curvature
6  50.42615      6.973789 channel_network_distance
4  31.22332      3.900696           catchment_area
1  20.67240      2.801546           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-4">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 140.78247     50.076968                elevation
5  71.37708     10.854536  relative_slope_position
3  58.04786     20.497472       saga_wetness_index
6  50.42615      6.973789 channel_network_distance
2  37.72429      7.004321        profile_curvature
4  31.22332      3.900696           catchment_area
1  20.67240      2.801546           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-4">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="a_col_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-4">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;a_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;a_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-5-nb-5">
<front-stub>
<title-group>
<article-title>Strontium (Sr) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-5">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-5">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;sr&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-5">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = sr)) +
  scale_fill_viridis_c(name = &quot;Sr&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-5">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-5">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -sr)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-5">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-5">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(sr ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-5">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(sr ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$sr,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -sr))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = sr ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$sr, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -sr)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 29.42667
                    % Var explained: 59.43
                       Test set MSE: 29.66
                    % Var explained: 59.07</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-5">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$sr)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-16.9626  -2.5629  -0.4458   2.3612  13.9902 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 13.98234    0.51556   27.12   &lt;2e-16 ***
obs          0.56519    0.01589   35.56   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.974 on 882 degrees of freedom
Multiple R-squared:  0.5891,    Adjusted R-squared:  0.5887 
F-statistic:  1265 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-5">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-5">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 121.58775     62236.276                elevation
3  66.83590     34014.535       saga_wetness_index
6  52.93723     23664.373 channel_network_distance
2  50.55438     21855.325        profile_curvature
5  68.89686     21718.741  relative_slope_position
4  42.86707     16993.017           catchment_area
1  18.03296      9837.416           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-5">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 121.58775     62236.276                elevation
5  68.89686     21718.741  relative_slope_position
3  66.83590     34014.535       saga_wetness_index
6  52.93723     23664.373 channel_network_distance
2  50.55438     21855.325        profile_curvature
4  42.86707     16993.017           catchment_area
1  18.03296      9837.416           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-5">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-5">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Sr&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Sr&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-6-nb-6">
<front-stub>
<title-group>
<article-title>Chromatic coordinate x (x*) Forest site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-6">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-6">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;x_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-6">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = x_c)) +
  scale_fill_viridis_c(name = &quot;x*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-6">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-6">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -x_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-6">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-6">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(x_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-6">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(x_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$x_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -x_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = x_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$x_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -x_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 5.646336
                    % Var explained: 62.61
                       Test set MSE: 5.81
                    % Var explained: 63.41</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-6">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$x_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
    Min      1Q  Median      3Q     Max 
-7.4070 -1.1565 -0.0935  1.1671  5.7971 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  8.08323    0.29513   27.39   &lt;2e-16 ***
obs          0.58606    0.01467   39.95   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.725 on 882 degrees of freedom
Multiple R-squared:  0.6441,    Adjusted R-squared:  0.6437 
F-statistic:  1596 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-6">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-6">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 215.20883     13210.542                elevation
6  84.62738      9837.644 channel_network_distance
5  99.86195      4915.404  relative_slope_position
2  54.58344      3699.485        profile_curvature
4  47.82688      3231.919           catchment_area
3  50.93764      2902.040       saga_wetness_index
1  26.10448      2120.043           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-6">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 215.20883     13210.542                elevation
5  99.86195      4915.404  relative_slope_position
6  84.62738      9837.644 channel_network_distance
2  54.58344      3699.485        profile_curvature
3  50.93764      2902.040       saga_wetness_index
4  47.82688      3231.919           catchment_area
1  26.10448      2120.043           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-6">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-6">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;x_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;x_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-7-nb-7">
<front-stub>
<title-group>
<article-title>Lanthanum (La) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-7">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-7">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;la&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-7">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = la)) +
  scale_fill_viridis_c(name = &quot;La&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-7">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-7">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -la)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-7">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-7">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(la ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-7">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(la ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$la,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -la))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = la ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$la, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -la)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.0479388
                    % Var explained: 92.99
                       Test set MSE: 0.04
                    % Var explained: 93.1</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-7">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$la)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.68641 -0.11921  0.00678  0.10464  0.98327 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 1.647512   0.164296   10.03   &lt;2e-16 ***
obs         0.910084   0.009015  100.95   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.201 on 771 degrees of freedom
Multiple R-squared:  0.9297,    Adjusted R-squared:  0.9296 
F-statistic: 1.019e+04 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-7">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-7">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 237.66900    1070.44634                elevation
3  54.69043     357.27842       saga_wetness_index
5  41.27613      52.49504  relative_slope_position
4  51.19008      36.40707           catchment_area
6  38.66554      35.98858 channel_network_distance
2  21.72242      23.87588        profile_curvature
1  11.16949      17.16886           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-7">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 237.66900    1070.44634                elevation
3  54.69043     357.27842       saga_wetness_index
4  51.19008      36.40707           catchment_area
5  41.27613      52.49504  relative_slope_position
6  38.66554      35.98858 channel_network_distance
2  21.72242      23.87588        profile_curvature
1  11.16949      17.16886           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-7">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="La_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-7">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;La&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;La&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-8-nb-8">
<front-stub>
<title-group>
<article-title>Cobalt (Co) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-8">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-8">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;co&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-8">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = co)) +
  scale_fill_viridis_c(name = &quot;Co&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-8">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-8">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -co)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-8">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-8">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(co ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-8">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(co ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$co,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -co))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = co ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$co, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -co)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.243505
                    % Var explained: 39.08
                       Test set MSE: 0.23
                    % Var explained: 42.95</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-8">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$co)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.81866 -0.17931 -0.02522  0.19747  1.05073 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  3.98297    0.09969   39.95   &lt;2e-16 ***
obs          0.41348    0.01462   28.29   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2709 on 882 degrees of freedom
Multiple R-squared:  0.4757,    Adjusted R-squared:  0.4751 
F-statistic: 800.4 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Co_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-8">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-8">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>   %IncMSE IncNodePurity                Var.Names
7 95.25744     225.27687                elevation
6 65.19866     201.41022 channel_network_distance
3 47.42234     153.08096       saga_wetness_index
5 63.39600     135.38169  relative_slope_position
2 37.57685     127.10202        profile_curvature
4 38.23692     107.14486           catchment_area
1 11.90845      87.87421           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-8">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>   %IncMSE IncNodePurity                Var.Names
7 95.25744     225.27687                elevation
6 65.19866     201.41022 channel_network_distance
5 63.39600     135.38169  relative_slope_position
3 47.42234     153.08096       saga_wetness_index
4 38.23692     107.14486           catchment_area
2 37.57685     127.10202        profile_curvature
1 11.90845      87.87421           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-8">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Co_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-8">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Co&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Co&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-9-nb-9">
<front-stub>
<title-group>
<article-title>Cesium (Cs) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-9">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-9">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;cs&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-9">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = cs)) +
  scale_fill_viridis_c(name = &quot;Cs&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Fo_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-9">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-9">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -cs)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-9">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-9">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(cs ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Fo_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-9">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(cs ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$cs,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -cs))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = cs ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$cs, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -cs)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.001950379
                    % Var explained: 64.13
                       Test set MSE: 0
                    % Var explained: 67.13</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Fo_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-9">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$cs)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.101176 -0.020157 -0.000677  0.021084  0.102103 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 0.214722   0.008124   26.43   &lt;2e-16 ***
obs         0.608355   0.014657   41.51   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.03185 on 882 degrees of freedom
Multiple R-squared:  0.6614,    Adjusted R-squared:  0.661 
F-statistic:  1723 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Fo_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-9">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-9">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 229.05634     4.9146153                elevation
6  92.42287     3.3300237 channel_network_distance
5 122.31522     1.9587296  relative_slope_position
2  48.54108     1.3863028        profile_curvature
3  49.80884     1.0765078       saga_wetness_index
4  36.06087     0.9872667           catchment_area
1  21.64386     0.7503188           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-9">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 229.05634     4.9146153                elevation
5 122.31522     1.9587296  relative_slope_position
6  92.42287     3.3300237 channel_network_distance
3  49.80884     1.0765078       saga_wetness_index
2  48.54108     1.3863028        profile_curvature
4  36.06087     0.9872667           catchment_area
1  21.64386     0.7503188           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-9">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Fo_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-9">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Cs&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Cs&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-10-nb-10">
<front-stub>
<title-group>
<article-title>CIE hue (c*) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-10">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-10">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;c_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-10">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = c_c)) +
  scale_fill_viridis_c(name = &quot;c*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="c_col_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-10">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-10">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -c_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-10">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-10">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(c_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="c_col_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-10">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(c_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$c_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -c_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = c_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$c_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -c_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.1547711
                    % Var explained: 73.2
                       Test set MSE: 0.14
                    % Var explained: 75.94</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="c_col_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-10">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$c_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.37299 -0.18401  0.03951  0.20829  1.10615 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  3.24290    0.13420   24.16   &lt;2e-16 ***
obs          0.65378    0.01436   45.52   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.3097 on 771 degrees of freedom
Multiple R-squared:  0.7288,    Adjusted R-squared:  0.7285 
F-statistic:  2072 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="c_col_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-10">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-10">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 156.36264     574.07715                elevation
3  96.13196     213.55238       saga_wetness_index
5  75.96200     168.64492  relative_slope_position
2  66.00746     141.70972        profile_curvature
6  57.90074     113.87637 channel_network_distance
4  41.47229      73.15726           catchment_area
1  17.68001      47.62041           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-10">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 156.36264     574.07715                elevation
3  96.13196     213.55238       saga_wetness_index
5  75.96200     168.64492  relative_slope_position
2  66.00746     141.70972        profile_curvature
6  57.90074     113.87637 channel_network_distance
4  41.47229      73.15726           catchment_area
1  17.68001      47.62041           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-10">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="c_col_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-10">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;c_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;c_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-11-nb-11">
<front-stub>
<title-group>
<article-title>Niobium (Nb) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-11">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-11">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;nb&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-11">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = nb)) +
  scale_fill_viridis_c(name = &quot;Nb&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-11">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-11">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -nb)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-11">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-11">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(nb ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-11">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(nb ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$nb,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -nb))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = nb ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$nb, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -nb)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.001253595
                    % Var explained: 57.29
                       Test set MSE: 0
                    % Var explained: 59.06</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-11">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$nb)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.070473 -0.021681 -0.001409  0.019469  0.087489 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 0.288343   0.009975   28.91   &lt;2e-16 ***
obs         0.512618   0.016667   30.76   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02609 on 771 degrees of freedom
Multiple R-squared:  0.5509,    Adjusted R-squared:  0.5504 
F-statistic: 945.9 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-11">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-11">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>   %IncMSE IncNodePurity                Var.Names
7 57.69491     2.4455709                elevation
3 38.75658     1.3888724       saga_wetness_index
5 58.47556     0.7697147  relative_slope_position
4 49.22555     0.6179390           catchment_area
6 53.64691     0.5707847 channel_network_distance
2 31.29495     0.5052064        profile_curvature
1 18.40355     0.3908077           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-11">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>   %IncMSE IncNodePurity                Var.Names
5 58.47556     0.7697147  relative_slope_position
7 57.69491     2.4455709                elevation
6 53.64691     0.5707847 channel_network_distance
4 49.22555     0.6179390           catchment_area
3 38.75658     1.3888724       saga_wetness_index
2 31.29495     0.5052064        profile_curvature
1 18.40355     0.3908077           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-11">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-11">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Nb&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Nb&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
       rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-12-nb-12">
<front-stub>
<title-group>
<article-title>Univariate summary</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-12">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">library(tidyverse)
  </code>
  <boxed-text>
    <preformat>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</preformat>
  </boxed-text>
  <code language="r script">library(gt)
library(sf)
  </code>
  <boxed-text>
    <preformat>Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE</preformat>
  </boxed-text>
  <code language="r script">library(terra)
  </code>
  <boxed-text>
    <preformat>terra 1.8.29

Attaching package: 'terra'

The following object is masked from 'package:tidyr':

    extract</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="load-in-data-nb-12">
  <title>load in data</title>
  <sec specific-use="notebook-content">
  <code language="r script">data &lt;- read_csv(here::here(&quot;./notebooks/soil_data.csv&quot;))
  </code>
  <boxed-text>
    <preformat>Rows: 6076 Columns: 5
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): site, element, group
dbl (2): sample_number, value

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
  </boxed-text>
  </sec>
  <sec id="summarize-nb-12">
    <title>Summarize</title>
    <sec specific-use="notebook-content">
    <code language="r script">data_summary &lt;- data %&gt;%
  group_by(element) %&gt;%
  group_by(element, site, group) %&gt;%
  summarise(mean = mean(value, na.rm = T),
            sd = sd(value, na.rm = T),
            max = max(value, na.rm = T),
            min = min(value, na.rm = T),
            se = sd(value)/ sqrt(length(value)),
            skewness = moments::skewness(value),
            cv = sd(value, na.rm = TRUE) / mean(value, na.rm = TRUE) * 100, .groups = &quot;drop&quot;) 
    </code>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">data_summary |&gt;
  filter(group %in% c(&quot;geochem&quot;, &quot;colour&quot;))|&gt;
  group_by(site) |&gt;
  summarise(skew_small = sum(skewness &lt;=0.5 &amp; skewness &gt;=-0.5),
            skew_moderate = sum(skewness &gt; 0.5 &amp; skewness &lt;1| skewness &lt; -0.5 &amp; skewness &gt; -1),
            skew_large = sum(skewness &gt;= 1 | skewness &lt;= -1),
            pos_skew = sum(skewness &gt; 0),
            neg_skew = sum(skewness &lt; 0),
            CV_low = sum(cv &lt;15),
            CV_mod = sum(cv &gt;= 15 &amp; cv &lt; 35),
            CV_high = sum(cv &gt;= 35 &amp; cv &lt;= 75),
            CV_v_high = sum(cv &gt; 75),
            n = n())
    </code>
    <boxed-text>
      <preformat># A tibble: 2 × 11
  site       skew_small skew_moderate skew_large pos_skew neg_skew CV_low CV_mod
  &lt;chr&gt;           &lt;int&gt;         &lt;int&gt;      &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt;  &lt;int&gt;
1 Agricultu…         45             9          5       34       25     42     12
2 Forest             38             7         14       44       15     18     33
# ℹ 3 more variables: CV_high &lt;int&gt;, CV_v_high &lt;int&gt;, n &lt;int&gt;</preformat>
    </boxed-text>
    <code language="r script">data_summary |&gt;
  filter(group %in% c(&quot;geochem&quot;, &quot;colour&quot;)) |&gt;
  group_by(site, group) |&gt;
  summarise(skew_small = sum(skewness &lt;=0.5 &amp; skewness &gt;=-0.5),
            skew_moderate = sum(skewness &gt; 0.5 &amp; skewness &lt;1| skewness &lt; -0.5 &amp; skewness &gt; -1),
            skew_large = sum(skewness &gt;= 1 | skewness &lt;= -1),
            pos_skew = sum(skewness &gt; 0),
            neg_skew = sum(skewness &lt; 0),
            CV_low = sum(cv &lt;15),
            CV_mod = sum(cv &gt;= 15 &amp; cv &lt; 35),
            CV_high = sum(cv &gt;= 35 &amp; cv &lt;= 75),
            CV_v_high = sum(cv &gt; 75),
            n = n())
    </code>
    <boxed-text>
      <preformat>`summarise()` has grouped output by 'site'. You can override using the
`.groups` argument.</preformat>
    </boxed-text>
    <boxed-text>
      <preformat># A tibble: 4 × 12
# Groups:   site [2]
  site        group skew_small skew_moderate skew_large pos_skew neg_skew CV_low
  &lt;chr&gt;       &lt;chr&gt;      &lt;int&gt;         &lt;int&gt;      &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt;
1 Agriculture colo…         15             0          0        8        7     15
2 Agriculture geoc…         30             9          5       26       18     27
3 Forest      colo…         15             0          0        9        6     10
4 Forest      geoc…         23             7         14       35        9      8
# ℹ 4 more variables: CV_mod &lt;int&gt;, CV_high &lt;int&gt;, CV_v_high &lt;int&gt;, n &lt;int&gt;</preformat>
    </boxed-text>
    <code language="r script">data_summary |&gt;
  filter(skewness &gt;= 1 | skewness &lt;= -1) |&gt;
  filter(group %in% c(&quot;geochem&quot;, &quot;colour&quot;)) |&gt;
  group_by(site, group) |&gt;
  summarise(pos_skew = sum(skewness &gt; 0),
            neg_skew = sum(skewness &lt; 0),
            CV_low = sum(cv &lt;15),
            CV_mod = sum(cv &gt;= 15 &amp; cv &lt; 35),
            CV_high = sum(cv &gt;= 35 &amp; cv &lt;= 75),
            CV_v_high = sum(cv &gt; 75),
            n = n())
    </code>
    <boxed-text>
      <preformat>`summarise()` has grouped output by 'site'. You can override using the
`.groups` argument.</preformat>
    </boxed-text>
    <boxed-text>
      <preformat># A tibble: 2 × 9
# Groups:   site [2]
  site        group   pos_skew neg_skew CV_low CV_mod CV_high CV_v_high     n
  &lt;chr&gt;       &lt;chr&gt;      &lt;int&gt;    &lt;int&gt;  &lt;int&gt;  &lt;int&gt;   &lt;int&gt;     &lt;int&gt; &lt;int&gt;
1 Agriculture geochem        5        0      2      2       1         0     5
2 Forest      geochem       14        0      0      7       5         2    14</preformat>
    </boxed-text>
    </sec>
    <sec id="max-min-scaling-nb-12">
      <title>Max-min scaling</title>
      <sec specific-use="notebook-content">
      <code language="r script">data2 &lt;- data %&gt;%
  group_by(element) %&gt;%
  mutate(value2 = (value - min(value, na.rm = T)) / (max(value, na.rm = T) - min(value, na.rm = T))) %&gt;%
  group_by(element, site, group) %&gt;%
  summarise(mean = mean(value2, na.rm = T),
            sd = sd(value2, na.rm = T),
            max = max(value2, na.rm = T),
            min = min(value2, na.rm = T),
            se = sd(value2)/ sqrt(length(value2)),
            skewness = moments::skewness(value2),
            cv = sd(value, na.rm = TRUE) / mean(value, na.rm = TRUE) * 100, .groups = &quot;drop&quot;) %&gt;%
  mutate(spacer = case_when(site == &quot;Forest&quot; ~ 1.1,
                            site == &quot;Agriculture&quot;~ 1.2))
      </code>
      </sec>
    </sec>
  </sec>
  <sec id="geochemistry-nb-12">
    <title>Geochemistry</title>
    <sec id="plot-prep-nb-12">
      <title>plot prep</title>
      <sec specific-use="notebook-content">
      <code language="r script">geo &lt;- data2 %&gt;%
  filter(group == &quot;geochem&quot;) %&gt;%
  mutate(facet = case_when(element %in% c(&quot;Ag&quot;, &quot;Al&quot;, &quot;As&quot;,&quot;B&quot;,&quot;Ba&quot;,&quot;Be&quot;,&quot;Bi&quot;,&quot;Ca&quot;,&quot;Cd&quot;,&quot;Ce&quot;,&quot;Co&quot;, &quot;Cr&quot;, &quot;Cs&quot;, &quot;Cu&quot;, &quot;Fe&quot;, &quot;Ga&quot;, &quot;Hf&quot;, &quot;Hg&quot;, &quot;In&quot;, &quot;K&quot;, &quot;La&quot;, &quot;Li&quot;) ~ &quot;Geomchemistry A-L&quot;,
                          element %in% c(&quot;Mg&quot;, &quot;Mn&quot;, &quot;Mo&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;P&quot;, &quot;Pb&quot;, &quot;Rb&quot;, &quot;S&quot;, &quot;Sb&quot;, &quot;Sc&quot;, &quot;Se&quot;, &quot;Sn&quot;, &quot;Sr&quot;, &quot;Te&quot;, &quot;Th&quot;, &quot;Tl&quot;, &quot;U&quot;, &quot;V&quot;, &quot;Y&quot;, &quot;Zn&quot;, &quot;Zr&quot;) ~ &quot;Geomchemistry M-Z&quot;,
                          TRUE~ NA)) %&gt;%
  mutate(bar = rep(c(rep(Inf, 2), rep(0, 2)), n()/4)) %&gt;%
  pivot_longer(cols = c(mean, max, min), names_to = &quot;variable&quot;) 

geo2 &lt;- data2 %&gt;%
  filter(group == &quot;geochem&quot;) %&gt;%
    mutate(facet = case_when(element %in% c(&quot;Ag&quot;, &quot;Al&quot;, &quot;As&quot;,&quot;B&quot;,&quot;Ba&quot;,&quot;Be&quot;,&quot;Bi&quot;,&quot;Ca&quot;,&quot;Cd&quot;,&quot;Ce&quot;,&quot;Co&quot;, &quot;Cr&quot;, &quot;Cs&quot;, &quot;Cu&quot;, &quot;Fe&quot;, &quot;Ga&quot;, &quot;Hf&quot;, &quot;Hg&quot;, &quot;In&quot;, &quot;K&quot;, &quot;La&quot;, &quot;Li&quot;) ~ &quot;Geomchemistry A-L&quot;,
                          element %in% c(&quot;Mg&quot;, &quot;Mn&quot;, &quot;Mo&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;P&quot;, &quot;Pb&quot;, &quot;Rb&quot;, &quot;S&quot;, &quot;Sb&quot;, &quot;Sc&quot;, &quot;Se&quot;, &quot;Sn&quot;, &quot;Sr&quot;, &quot;Te&quot;, &quot;Th&quot;, &quot;Tl&quot;, &quot;U&quot;, &quot;V&quot;, &quot;Y&quot;, &quot;Zn&quot;, &quot;Zr&quot;) ~ &quot;Geomchemistry M-Z&quot;,
                          TRUE~ NA)) %&gt;%
  mutate(bar = rep(c(rep(Inf, 2), rep(0, 2)), n()/4))

geo3 &lt;- data2 %&gt;%
  filter(group == &quot;geochem&quot;) %&gt;%
    mutate(facet = case_when(element %in% c(&quot;Ag&quot;, &quot;Al&quot;, &quot;As&quot;,&quot;B&quot;,&quot;Ba&quot;,&quot;Be&quot;,&quot;Bi&quot;,&quot;Ca&quot;,&quot;Cd&quot;,&quot;Ce&quot;,&quot;Co&quot;, &quot;Cr&quot;, &quot;Cs&quot;, &quot;Cu&quot;, &quot;Fe&quot;, &quot;Ga&quot;, &quot;Hf&quot;, &quot;Hg&quot;, &quot;In&quot;, &quot;K&quot;, &quot;La&quot;, &quot;Li&quot;) ~ &quot;Geomchemistry A-L&quot;,
                          element %in% c(&quot;Mg&quot;, &quot;Mn&quot;, &quot;Mo&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;P&quot;, &quot;Pb&quot;, &quot;Rb&quot;, &quot;S&quot;, &quot;Sb&quot;, &quot;Sc&quot;, &quot;Se&quot;, &quot;Sn&quot;, &quot;Sr&quot;, &quot;Te&quot;, &quot;Th&quot;, &quot;Tl&quot;, &quot;U&quot;, &quot;V&quot;, &quot;Y&quot;, &quot;Zn&quot;, &quot;Zr&quot;) ~ &quot;Geomchemistry M-Z&quot;,
                          TRUE~ NA)) %&gt;%
  mutate(bar = rep(c(rep(-Inf, 2), rep(0, 2)), n()/4))
      </code>
      </sec>
    </sec>
    <sec id="plot-nb-12">
      <title>plot</title>
      <sec specific-use="notebook-content">
      <code language="r script">
p1 &lt;- ggplot() +
  theme_bw(base_size = 12) +
  geom_bar(data = geo2, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_bar(data = geo3, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_errorbar(data = geo2, aes(x = element, ymin = mean - sd, ymax = mean + sd, colour = site), width = .1, position = position_dodge(width = 0.5)) +
  geom_point(data = filter(geo, variable == &quot;mean&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 1.5) +
  geom_point(data = filter(geo, variable == &quot;max&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 1.5) +
  geom_point(data = filter(geo, variable == &quot;min&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 1.5) +
  geom_text(data = geo3, aes(x = element, y = spacer, colour = site, label = formatC(cv, digits = 1, format = &quot;f&quot;)), show.legend = FALSE, size = 3) +
  guides(color=guide_legend(override.aes=list(shape=NA))) +
  scale_shape_manual(values=c(3, 19, 4)) +
  scale_color_viridis_d(begin = 0.2, end = 0.7) +
  scale_y_continuous(breaks = seq(0, 1, 0.2)) +
  theme(legend.position = &quot;bottom&quot;,
        legend.title = element_blank()) +
  labs(y = &quot;Scaled Concentration&quot;, x = &quot;Element&quot;) +
  facet_wrap(~facet, ncol = 1, scales = &quot;free_x&quot;)
p1
      </code>
      <fig>
        <caption><p>Summary statistics of all measured geochemical soil
        properties at both sites. Error bars represent 1SD and the
        numeric values inidicate the CV.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/suppfig-geo_summary-1.png" />
      </fig>
      <code language="r script">
#ggsave(plot = p1, filename = here::here(&quot;./images/geo_summary.png&quot;))
      </code>
      </sec>
    </sec>
  </sec>
  <sec id="plot2-nb-12">
    <title>Plot2</title>
    <sec specific-use="notebook-content">
    <code language="r script">ggplot(data = filter(data, group == &quot;geochem&quot;), aes(x = site, y = value, fill = site))+
  geom_boxplot() +
  theme_bw(base_size = 12) +
  scale_fill_viridis_d(begin = 0.2, end = 0.7) +
  theme(legend.position = &quot;none&quot;,
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  labs(x = &quot;Site&quot;, y = &quot;Concentration&quot;) +
  facet_wrap(~element, scales = &quot;free_y&quot;, ncol = 4)
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/unnamed-chunk-8-1.png" />
    </sec>
    <sec id="table-nb-12">
      <title>Table</title>
      <sec specific-use="notebook-content">
      <code language="r script">geo_tab &lt;- data_summary %&gt;%
  filter(group == &quot;geochem&quot;) %&gt;%
  select(-group) 

knitr::kable(geo_tab, digits = 3)
      </code>
      <table-wrap>
        <table>
          <colgroup>
            <col width="11%" />
            <col width="16%" />
            <col width="11%" />
            <col width="11%" />
            <col width="12%" />
            <col width="11%" />
            <col width="9%" />
            <col width="12%" />
            <col width="9%" />
          </colgroup>
          <thead>
            <tr>
              <th align="left">element</th>
              <th align="left">site</th>
              <th align="right">mean</th>
              <th align="right">sd</th>
              <th align="right">max</th>
              <th align="right">min</th>
              <th align="right">se</th>
              <th align="right">skewness</th>
              <th align="right">cv</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Ag</td>
              <td align="left">Agriculture</td>
              <td align="right">0.106</td>
              <td align="right">0.021</td>
              <td align="right">0.220</td>
              <td align="right">0.080</td>
              <td align="right">0.003</td>
              <td align="right">3.302</td>
              <td align="right">19.927</td>
            </tr>
            <tr>
              <td align="left">Ag</td>
              <td align="left">Forest</td>
              <td align="right">0.072</td>
              <td align="right">0.015</td>
              <td align="right">0.130</td>
              <td align="right">0.040</td>
              <td align="right">0.002</td>
              <td align="right">1.109</td>
              <td align="right">20.428</td>
            </tr>
            <tr>
              <td align="left">Al</td>
              <td align="left">Agriculture</td>
              <td align="right">1.274</td>
              <td align="right">0.090</td>
              <td align="right">1.430</td>
              <td align="right">0.970</td>
              <td align="right">0.013</td>
              <td align="right">-0.607</td>
              <td align="right">7.099</td>
            </tr>
            <tr>
              <td align="left">Al</td>
              <td align="left">Forest</td>
              <td align="right">0.668</td>
              <td align="right">0.109</td>
              <td align="right">0.890</td>
              <td align="right">0.440</td>
              <td align="right">0.016</td>
              <td align="right">0.229</td>
              <td align="right">16.391</td>
            </tr>
            <tr>
              <td align="left">As</td>
              <td align="left">Agriculture</td>
              <td align="right">9.351</td>
              <td align="right">2.067</td>
              <td align="right">14.200</td>
              <td align="right">6.900</td>
              <td align="right">0.295</td>
              <td align="right">1.008</td>
              <td align="right">22.101</td>
            </tr>
            <tr>
              <td align="left">As</td>
              <td align="left">Forest</td>
              <td align="right">4.845</td>
              <td align="right">1.436</td>
              <td align="right">8.100</td>
              <td align="right">1.700</td>
              <td align="right">0.205</td>
              <td align="right">0.270</td>
              <td align="right">29.640</td>
            </tr>
            <tr>
              <td align="left">B</td>
              <td align="left">Agriculture</td>
              <td align="right">31.633</td>
              <td align="right">3.734</td>
              <td align="right">40.000</td>
              <td align="right">30.000</td>
              <td align="right">0.533</td>
              <td align="right">1.822</td>
              <td align="right">11.805</td>
            </tr>
            <tr>
              <td align="left">B</td>
              <td align="left">Forest</td>
              <td align="right">15.918</td>
              <td align="right">4.966</td>
              <td align="right">20.000</td>
              <td align="right">10.000</td>
              <td align="right">0.709</td>
              <td align="right">-0.374</td>
              <td align="right">31.196</td>
            </tr>
            <tr>
              <td align="left">Ba</td>
              <td align="left">Agriculture</td>
              <td align="right">154.898</td>
              <td align="right">19.378</td>
              <td align="right">190.000</td>
              <td align="right">130.000</td>
              <td align="right">2.768</td>
              <td align="right">0.328</td>
              <td align="right">12.510</td>
            </tr>
            <tr>
              <td align="left">Ba</td>
              <td align="left">Forest</td>
              <td align="right">173.878</td>
              <td align="right">54.575</td>
              <td align="right">390.000</td>
              <td align="right">60.000</td>
              <td align="right">7.796</td>
              <td align="right">1.854</td>
              <td align="right">31.387</td>
            </tr>
            <tr>
              <td align="left">Be</td>
              <td align="left">Agriculture</td>
              <td align="right">0.959</td>
              <td align="right">0.081</td>
              <td align="right">1.130</td>
              <td align="right">0.750</td>
              <td align="right">0.012</td>
              <td align="right">0.009</td>
              <td align="right">8.423</td>
            </tr>
            <tr>
              <td align="left">Be</td>
              <td align="left">Forest</td>
              <td align="right">0.462</td>
              <td align="right">0.067</td>
              <td align="right">0.670</td>
              <td align="right">0.350</td>
              <td align="right">0.010</td>
              <td align="right">0.451</td>
              <td align="right">14.536</td>
            </tr>
            <tr>
              <td align="left">Bi</td>
              <td align="left">Agriculture</td>
              <td align="right">0.250</td>
              <td align="right">0.032</td>
              <td align="right">0.380</td>
              <td align="right">0.200</td>
              <td align="right">0.005</td>
              <td align="right">1.764</td>
              <td align="right">12.774</td>
            </tr>
            <tr>
              <td align="left">Bi</td>
              <td align="left">Forest</td>
              <td align="right">0.178</td>
              <td align="right">0.031</td>
              <td align="right">0.230</td>
              <td align="right">0.110</td>
              <td align="right">0.004</td>
              <td align="right">-0.484</td>
              <td align="right">17.444</td>
            </tr>
            <tr>
              <td align="left">Ca</td>
              <td align="left">Agriculture</td>
              <td align="right">4.001</td>
              <td align="right">2.187</td>
              <td align="right">8.780</td>
              <td align="right">0.950</td>
              <td align="right">0.312</td>
              <td align="right">0.277</td>
              <td align="right">54.664</td>
            </tr>
            <tr>
              <td align="left">Ca</td>
              <td align="left">Forest</td>
              <td align="right">1.887</td>
              <td align="right">1.530</td>
              <td align="right">5.460</td>
              <td align="right">0.470</td>
              <td align="right">0.219</td>
              <td align="right">1.067</td>
              <td align="right">81.120</td>
            </tr>
            <tr>
              <td align="left">Cd</td>
              <td align="left">Agriculture</td>
              <td align="right">0.592</td>
              <td align="right">0.057</td>
              <td align="right">0.720</td>
              <td align="right">0.480</td>
              <td align="right">0.008</td>
              <td align="right">-0.008</td>
              <td align="right">9.604</td>
            </tr>
            <tr>
              <td align="left">Cd</td>
              <td align="left">Forest</td>
              <td align="right">0.518</td>
              <td align="right">0.284</td>
              <td align="right">1.760</td>
              <td align="right">0.210</td>
              <td align="right">0.041</td>
              <td align="right">2.875</td>
              <td align="right">54.782</td>
            </tr>
            <tr>
              <td align="left">Ce</td>
              <td align="left">Agriculture</td>
              <td align="right">36.800</td>
              <td align="right">2.359</td>
              <td align="right">41.000</td>
              <td align="right">31.800</td>
              <td align="right">0.337</td>
              <td align="right">-0.244</td>
              <td align="right">6.411</td>
            </tr>
            <tr>
              <td align="left">Ce</td>
              <td align="left">Forest</td>
              <td align="right">31.190</td>
              <td align="right">5.532</td>
              <td align="right">46.800</td>
              <td align="right">21.400</td>
              <td align="right">0.790</td>
              <td align="right">0.524</td>
              <td align="right">17.736</td>
            </tr>
            <tr>
              <td align="left">Co</td>
              <td align="left">Agriculture</td>
              <td align="right">8.755</td>
              <td align="right">0.830</td>
              <td align="right">10.600</td>
              <td align="right">7.500</td>
              <td align="right">0.119</td>
              <td align="right">0.521</td>
              <td align="right">9.479</td>
            </tr>
            <tr>
              <td align="left">Co</td>
              <td align="left">Forest</td>
              <td align="right">6.757</td>
              <td align="right">1.393</td>
              <td align="right">9.600</td>
              <td align="right">4.000</td>
              <td align="right">0.199</td>
              <td align="right">0.030</td>
              <td align="right">20.622</td>
            </tr>
            <tr>
              <td align="left">Cr</td>
              <td align="left">Agriculture</td>
              <td align="right">23.388</td>
              <td align="right">1.935</td>
              <td align="right">26.000</td>
              <td align="right">17.000</td>
              <td align="right">0.276</td>
              <td align="right">-0.630</td>
              <td align="right">8.271</td>
            </tr>
            <tr>
              <td align="left">Cr</td>
              <td align="left">Forest</td>
              <td align="right">13.408</td>
              <td align="right">1.567</td>
              <td align="right">17.000</td>
              <td align="right">10.000</td>
              <td align="right">0.224</td>
              <td align="right">0.090</td>
              <td align="right">11.686</td>
            </tr>
            <tr>
              <td align="left">Cs</td>
              <td align="left">Agriculture</td>
              <td align="right">0.745</td>
              <td align="right">0.148</td>
              <td align="right">1.070</td>
              <td align="right">0.470</td>
              <td align="right">0.021</td>
              <td align="right">0.182</td>
              <td align="right">19.926</td>
            </tr>
            <tr>
              <td align="left">Cs</td>
              <td align="left">Forest</td>
              <td align="right">0.553</td>
              <td align="right">0.120</td>
              <td align="right">0.780</td>
              <td align="right">0.340</td>
              <td align="right">0.017</td>
              <td align="right">0.249</td>
              <td align="right">21.734</td>
            </tr>
            <tr>
              <td align="left">Cu</td>
              <td align="left">Agriculture</td>
              <td align="right">25.169</td>
              <td align="right">2.264</td>
              <td align="right">30.400</td>
              <td align="right">20.100</td>
              <td align="right">0.323</td>
              <td align="right">0.104</td>
              <td align="right">8.997</td>
            </tr>
            <tr>
              <td align="left">Cu</td>
              <td align="left">Forest</td>
              <td align="right">13.145</td>
              <td align="right">2.816</td>
              <td align="right">23.100</td>
              <td align="right">10.100</td>
              <td align="right">0.402</td>
              <td align="right">1.786</td>
              <td align="right">21.425</td>
            </tr>
            <tr>
              <td align="left">Fe</td>
              <td align="left">Agriculture</td>
              <td align="right">1.918</td>
              <td align="right">0.090</td>
              <td align="right">2.110</td>
              <td align="right">1.710</td>
              <td align="right">0.013</td>
              <td align="right">-0.255</td>
              <td align="right">4.702</td>
            </tr>
            <tr>
              <td align="left">Fe</td>
              <td align="left">Forest</td>
              <td align="right">1.182</td>
              <td align="right">0.133</td>
              <td align="right">1.460</td>
              <td align="right">0.830</td>
              <td align="right">0.019</td>
              <td align="right">-0.584</td>
              <td align="right">11.239</td>
            </tr>
            <tr>
              <td align="left">Ga</td>
              <td align="left">Agriculture</td>
              <td align="right">4.202</td>
              <td align="right">0.341</td>
              <td align="right">4.830</td>
              <td align="right">3.140</td>
              <td align="right">0.049</td>
              <td align="right">-0.594</td>
              <td align="right">8.120</td>
            </tr>
            <tr>
              <td align="left">Ga</td>
              <td align="left">Forest</td>
              <td align="right">2.209</td>
              <td align="right">0.277</td>
              <td align="right">2.770</td>
              <td align="right">1.650</td>
              <td align="right">0.040</td>
              <td align="right">0.097</td>
              <td align="right">12.533</td>
            </tr>
            <tr>
              <td align="left">Hf</td>
              <td align="left">Agriculture</td>
              <td align="right">0.154</td>
              <td align="right">0.038</td>
              <td align="right">0.220</td>
              <td align="right">0.080</td>
              <td align="right">0.005</td>
              <td align="right">-0.086</td>
              <td align="right">24.639</td>
            </tr>
            <tr>
              <td align="left">Hf</td>
              <td align="left">Forest</td>
              <td align="right">0.116</td>
              <td align="right">0.028</td>
              <td align="right">0.170</td>
              <td align="right">0.060</td>
              <td align="right">0.004</td>
              <td align="right">0.104</td>
              <td align="right">23.798</td>
            </tr>
            <tr>
              <td align="left">Hg</td>
              <td align="left">Agriculture</td>
              <td align="right">0.043</td>
              <td align="right">0.007</td>
              <td align="right">0.050</td>
              <td align="right">0.030</td>
              <td align="right">0.001</td>
              <td align="right">-0.459</td>
              <td align="right">16.499</td>
            </tr>
            <tr>
              <td align="left">Hg</td>
              <td align="left">Forest</td>
              <td align="right">0.056</td>
              <td align="right">0.018</td>
              <td align="right">0.100</td>
              <td align="right">0.030</td>
              <td align="right">0.003</td>
              <td align="right">0.379</td>
              <td align="right">32.290</td>
            </tr>
            <tr>
              <td align="left">In</td>
              <td align="left">Agriculture</td>
              <td align="right">0.031</td>
              <td align="right">0.003</td>
              <td align="right">0.036</td>
              <td align="right">0.023</td>
              <td align="right">0.000</td>
              <td align="right">-0.351</td>
              <td align="right">8.553</td>
            </tr>
            <tr>
              <td align="left">In</td>
              <td align="left">Forest</td>
              <td align="right">0.018</td>
              <td align="right">0.003</td>
              <td align="right">0.027</td>
              <td align="right">0.011</td>
              <td align="right">0.000</td>
              <td align="right">0.236</td>
              <td align="right">17.736</td>
            </tr>
            <tr>
              <td align="left">K</td>
              <td align="left">Agriculture</td>
              <td align="right">0.222</td>
              <td align="right">0.045</td>
              <td align="right">0.310</td>
              <td align="right">0.140</td>
              <td align="right">0.006</td>
              <td align="right">0.436</td>
              <td align="right">20.440</td>
            </tr>
            <tr>
              <td align="left">K</td>
              <td align="left">Forest</td>
              <td align="right">0.187</td>
              <td align="right">0.033</td>
              <td align="right">0.240</td>
              <td align="right">0.100</td>
              <td align="right">0.005</td>
              <td align="right">-0.294</td>
              <td align="right">17.849</td>
            </tr>
            <tr>
              <td align="left">La</td>
              <td align="left">Agriculture</td>
              <td align="right">18.231</td>
              <td align="right">1.223</td>
              <td align="right">20.200</td>
              <td align="right">15.500</td>
              <td align="right">0.175</td>
              <td align="right">-0.293</td>
              <td align="right">6.708</td>
            </tr>
            <tr>
              <td align="left">La</td>
              <td align="left">Forest</td>
              <td align="right">15.000</td>
              <td align="right">2.596</td>
              <td align="right">21.800</td>
              <td align="right">10.300</td>
              <td align="right">0.371</td>
              <td align="right">0.330</td>
              <td align="right">17.308</td>
            </tr>
            <tr>
              <td align="left">Li</td>
              <td align="left">Agriculture</td>
              <td align="right">15.622</td>
              <td align="right">1.423</td>
              <td align="right">19.800</td>
              <td align="right">12.800</td>
              <td align="right">0.203</td>
              <td align="right">0.618</td>
              <td align="right">9.108</td>
            </tr>
            <tr>
              <td align="left">Li</td>
              <td align="left">Forest</td>
              <td align="right">6.465</td>
              <td align="right">0.898</td>
              <td align="right">8.600</td>
              <td align="right">4.300</td>
              <td align="right">0.128</td>
              <td align="right">-0.022</td>
              <td align="right">13.887</td>
            </tr>
            <tr>
              <td align="left">Mg</td>
              <td align="left">Agriculture</td>
              <td align="right">0.765</td>
              <td align="right">0.097</td>
              <td align="right">0.970</td>
              <td align="right">0.520</td>
              <td align="right">0.014</td>
              <td align="right">-0.511</td>
              <td align="right">12.617</td>
            </tr>
            <tr>
              <td align="left">Mg</td>
              <td align="left">Forest</td>
              <td align="right">0.615</td>
              <td align="right">0.559</td>
              <td align="right">1.770</td>
              <td align="right">0.200</td>
              <td align="right">0.080</td>
              <td align="right">1.023</td>
              <td align="right">90.906</td>
            </tr>
            <tr>
              <td align="left">Mn</td>
              <td align="left">Agriculture</td>
              <td align="right">865.143</td>
              <td align="right">318.206</td>
              <td align="right">1800.000</td>
              <td align="right">468.000</td>
              <td align="right">45.458</td>
              <td align="right">0.940</td>
              <td align="right">36.781</td>
            </tr>
            <tr>
              <td align="left">Mn</td>
              <td align="left">Forest</td>
              <td align="right">996.367</td>
              <td align="right">313.072</td>
              <td align="right">2050.000</td>
              <td align="right">277.000</td>
              <td align="right">44.725</td>
              <td align="right">1.014</td>
              <td align="right">31.421</td>
            </tr>
            <tr>
              <td align="left">Mo</td>
              <td align="left">Agriculture</td>
              <td align="right">0.932</td>
              <td align="right">0.410</td>
              <td align="right">2.350</td>
              <td align="right">0.470</td>
              <td align="right">0.059</td>
              <td align="right">1.182</td>
              <td align="right">43.951</td>
            </tr>
            <tr>
              <td align="left">Mo</td>
              <td align="left">Forest</td>
              <td align="right">0.757</td>
              <td align="right">0.193</td>
              <td align="right">1.190</td>
              <td align="right">0.390</td>
              <td align="right">0.028</td>
              <td align="right">0.570</td>
              <td align="right">25.552</td>
            </tr>
            <tr>
              <td align="left">Nb</td>
              <td align="left">Agriculture</td>
              <td align="right">0.589</td>
              <td align="right">0.057</td>
              <td align="right">0.730</td>
              <td align="right">0.460</td>
              <td align="right">0.008</td>
              <td align="right">0.452</td>
              <td align="right">9.669</td>
            </tr>
            <tr>
              <td align="left">Nb</td>
              <td align="left">Forest</td>
              <td align="right">0.372</td>
              <td align="right">0.064</td>
              <td align="right">0.560</td>
              <td align="right">0.170</td>
              <td align="right">0.009</td>
              <td align="right">-0.677</td>
              <td align="right">17.103</td>
            </tr>
            <tr>
              <td align="left">Ni</td>
              <td align="left">Agriculture</td>
              <td align="right">29.627</td>
              <td align="right">2.716</td>
              <td align="right">35.700</td>
              <td align="right">25.000</td>
              <td align="right">0.388</td>
              <td align="right">0.356</td>
              <td align="right">9.169</td>
            </tr>
            <tr>
              <td align="left">Ni</td>
              <td align="left">Forest</td>
              <td align="right">18.092</td>
              <td align="right">3.898</td>
              <td align="right">28.000</td>
              <td align="right">11.000</td>
              <td align="right">0.557</td>
              <td align="right">0.328</td>
              <td align="right">21.548</td>
            </tr>
            <tr>
              <td align="left">P</td>
              <td align="left">Agriculture</td>
              <td align="right">701.429</td>
              <td align="right">72.342</td>
              <td align="right">860.000</td>
              <td align="right">560.000</td>
              <td align="right">10.335</td>
              <td align="right">0.154</td>
              <td align="right">10.313</td>
            </tr>
            <tr>
              <td align="left">P</td>
              <td align="left">Forest</td>
              <td align="right">749.184</td>
              <td align="right">117.948</td>
              <td align="right">990.000</td>
              <td align="right">520.000</td>
              <td align="right">16.850</td>
              <td align="right">0.053</td>
              <td align="right">15.744</td>
            </tr>
            <tr>
              <td align="left">Pb</td>
              <td align="left">Agriculture</td>
              <td align="right">11.702</td>
              <td align="right">0.798</td>
              <td align="right">13.200</td>
              <td align="right">9.900</td>
              <td align="right">0.114</td>
              <td align="right">-0.198</td>
              <td align="right">6.815</td>
            </tr>
            <tr>
              <td align="left">Pb</td>
              <td align="left">Forest</td>
              <td align="right">11.941</td>
              <td align="right">8.419</td>
              <td align="right">68.000</td>
              <td align="right">7.100</td>
              <td align="right">1.203</td>
              <td align="right">6.192</td>
              <td align="right">70.507</td>
            </tr>
            <tr>
              <td align="left">Rb</td>
              <td align="left">Agriculture</td>
              <td align="right">18.429</td>
              <td align="right">4.326</td>
              <td align="right">26.700</td>
              <td align="right">10.200</td>
              <td align="right">0.618</td>
              <td align="right">0.244</td>
              <td align="right">23.477</td>
            </tr>
            <tr>
              <td align="left">Rb</td>
              <td align="left">Forest</td>
              <td align="right">13.831</td>
              <td align="right">1.853</td>
              <td align="right">18.100</td>
              <td align="right">9.900</td>
              <td align="right">0.265</td>
              <td align="right">0.273</td>
              <td align="right">13.397</td>
            </tr>
            <tr>
              <td align="left">S</td>
              <td align="left">Agriculture</td>
              <td align="right">0.120</td>
              <td align="right">0.071</td>
              <td align="right">0.270</td>
              <td align="right">0.040</td>
              <td align="right">0.010</td>
              <td align="right">0.770</td>
              <td align="right">59.479</td>
            </tr>
            <tr>
              <td align="left">S</td>
              <td align="left">Forest</td>
              <td align="right">0.060</td>
              <td align="right">0.019</td>
              <td align="right">0.110</td>
              <td align="right">0.030</td>
              <td align="right">0.003</td>
              <td align="right">0.506</td>
              <td align="right">31.894</td>
            </tr>
            <tr>
              <td align="left">Sb</td>
              <td align="left">Agriculture</td>
              <td align="right">0.446</td>
              <td align="right">0.049</td>
              <td align="right">0.560</td>
              <td align="right">0.350</td>
              <td align="right">0.007</td>
              <td align="right">0.230</td>
              <td align="right">11.078</td>
            </tr>
            <tr>
              <td align="left">Sb</td>
              <td align="left">Forest</td>
              <td align="right">0.270</td>
              <td align="right">0.090</td>
              <td align="right">0.650</td>
              <td align="right">0.120</td>
              <td align="right">0.013</td>
              <td align="right">1.301</td>
              <td align="right">33.332</td>
            </tr>
            <tr>
              <td align="left">Sc</td>
              <td align="left">Agriculture</td>
              <td align="right">3.149</td>
              <td align="right">0.338</td>
              <td align="right">3.800</td>
              <td align="right">2.300</td>
              <td align="right">0.048</td>
              <td align="right">-0.256</td>
              <td align="right">10.732</td>
            </tr>
            <tr>
              <td align="left">Sc</td>
              <td align="left">Forest</td>
              <td align="right">1.624</td>
              <td align="right">0.237</td>
              <td align="right">2.000</td>
              <td align="right">1.000</td>
              <td align="right">0.034</td>
              <td align="right">-0.572</td>
              <td align="right">14.574</td>
            </tr>
            <tr>
              <td align="left">Se</td>
              <td align="left">Agriculture</td>
              <td align="right">1.616</td>
              <td align="right">0.535</td>
              <td align="right">2.700</td>
              <td align="right">0.700</td>
              <td align="right">0.076</td>
              <td align="right">0.182</td>
              <td align="right">33.085</td>
            </tr>
            <tr>
              <td align="left">Se</td>
              <td align="left">Forest</td>
              <td align="right">0.896</td>
              <td align="right">0.371</td>
              <td align="right">2.600</td>
              <td align="right">0.400</td>
              <td align="right">0.053</td>
              <td align="right">2.522</td>
              <td align="right">41.386</td>
            </tr>
            <tr>
              <td align="left">Sn</td>
              <td align="left">Agriculture</td>
              <td align="right">0.647</td>
              <td align="right">0.058</td>
              <td align="right">0.800</td>
              <td align="right">0.500</td>
              <td align="right">0.008</td>
              <td align="right">0.120</td>
              <td align="right">8.981</td>
            </tr>
            <tr>
              <td align="left">Sn</td>
              <td align="left">Forest</td>
              <td align="right">0.398</td>
              <td align="right">0.090</td>
              <td align="right">0.900</td>
              <td align="right">0.300</td>
              <td align="right">0.013</td>
              <td align="right">3.492</td>
              <td align="right">22.644</td>
            </tr>
            <tr>
              <td align="left">Sr</td>
              <td align="left">Agriculture</td>
              <td align="right">91.314</td>
              <td align="right">38.981</td>
              <td align="right">163.500</td>
              <td align="right">38.600</td>
              <td align="right">5.569</td>
              <td align="right">0.093</td>
              <td align="right">42.689</td>
            </tr>
            <tr>
              <td align="left">Sr</td>
              <td align="left">Forest</td>
              <td align="right">32.427</td>
              <td align="right">12.605</td>
              <td align="right">64.200</td>
              <td align="right">15.300</td>
              <td align="right">1.801</td>
              <td align="right">0.983</td>
              <td align="right">38.872</td>
            </tr>
            <tr>
              <td align="left">Te</td>
              <td align="left">Agriculture</td>
              <td align="right">0.046</td>
              <td align="right">0.008</td>
              <td align="right">0.070</td>
              <td align="right">0.030</td>
              <td align="right">0.001</td>
              <td align="right">0.402</td>
              <td align="right">17.736</td>
            </tr>
            <tr>
              <td align="left">Te</td>
              <td align="left">Forest</td>
              <td align="right">0.034</td>
              <td align="right">0.007</td>
              <td align="right">0.050</td>
              <td align="right">0.020</td>
              <td align="right">0.001</td>
              <td align="right">-0.022</td>
              <td align="right">21.598</td>
            </tr>
            <tr>
              <td align="left">Th</td>
              <td align="left">Agriculture</td>
              <td align="right">2.565</td>
              <td align="right">0.504</td>
              <td align="right">3.600</td>
              <td align="right">1.600</td>
              <td align="right">0.072</td>
              <td align="right">-0.084</td>
              <td align="right">19.629</td>
            </tr>
            <tr>
              <td align="left">Th</td>
              <td align="left">Forest</td>
              <td align="right">2.173</td>
              <td align="right">1.216</td>
              <td align="right">7.300</td>
              <td align="right">1.000</td>
              <td align="right">0.174</td>
              <td align="right">2.185</td>
              <td align="right">55.932</td>
            </tr>
            <tr>
              <td align="left">Tl</td>
              <td align="left">Agriculture</td>
              <td align="right">0.169</td>
              <td align="right">0.035</td>
              <td align="right">0.240</td>
              <td align="right">0.110</td>
              <td align="right">0.005</td>
              <td align="right">0.365</td>
              <td align="right">20.763</td>
            </tr>
            <tr>
              <td align="left">Tl</td>
              <td align="left">Forest</td>
              <td align="right">0.153</td>
              <td align="right">0.034</td>
              <td align="right">0.230</td>
              <td align="right">0.090</td>
              <td align="right">0.005</td>
              <td align="right">0.325</td>
              <td align="right">22.199</td>
            </tr>
            <tr>
              <td align="left">U</td>
              <td align="left">Agriculture</td>
              <td align="right">1.475</td>
              <td align="right">0.186</td>
              <td align="right">1.940</td>
              <td align="right">1.200</td>
              <td align="right">0.027</td>
              <td align="right">0.591</td>
              <td align="right">12.638</td>
            </tr>
            <tr>
              <td align="left">U</td>
              <td align="left">Forest</td>
              <td align="right">1.026</td>
              <td align="right">0.254</td>
              <td align="right">1.740</td>
              <td align="right">0.630</td>
              <td align="right">0.036</td>
              <td align="right">0.359</td>
              <td align="right">24.792</td>
            </tr>
            <tr>
              <td align="left">V</td>
              <td align="left">Agriculture</td>
              <td align="right">67.857</td>
              <td align="right">4.198</td>
              <td align="right">77.000</td>
              <td align="right">55.000</td>
              <td align="right">0.600</td>
              <td align="right">-0.363</td>
              <td align="right">6.187</td>
            </tr>
            <tr>
              <td align="left">V</td>
              <td align="left">Forest</td>
              <td align="right">34.122</td>
              <td align="right">4.910</td>
              <td align="right">44.000</td>
              <td align="right">25.000</td>
              <td align="right">0.701</td>
              <td align="right">0.269</td>
              <td align="right">14.390</td>
            </tr>
            <tr>
              <td align="left">Y</td>
              <td align="left">Agriculture</td>
              <td align="right">11.291</td>
              <td align="right">0.726</td>
              <td align="right">12.600</td>
              <td align="right">9.750</td>
              <td align="right">0.104</td>
              <td align="right">-0.427</td>
              <td align="right">6.431</td>
            </tr>
            <tr>
              <td align="left">Y</td>
              <td align="left">Forest</td>
              <td align="right">8.435</td>
              <td align="right">2.005</td>
              <td align="right">12.200</td>
              <td align="right">4.370</td>
              <td align="right">0.286</td>
              <td align="right">-0.348</td>
              <td align="right">23.766</td>
            </tr>
            <tr>
              <td align="left">Zn</td>
              <td align="left">Agriculture</td>
              <td align="right">93.796</td>
              <td align="right">7.681</td>
              <td align="right">106.000</td>
              <td align="right">75.000</td>
              <td align="right">1.097</td>
              <td align="right">-0.222</td>
              <td align="right">8.189</td>
            </tr>
            <tr>
              <td align="left">Zn</td>
              <td align="left">Forest</td>
              <td align="right">109.551</td>
              <td align="right">53.267</td>
              <td align="right">318.000</td>
              <td align="right">42.000</td>
              <td align="right">7.610</td>
              <td align="right">1.425</td>
              <td align="right">48.623</td>
            </tr>
            <tr>
              <td align="left">Zr</td>
              <td align="left">Agriculture</td>
              <td align="right">6.063</td>
              <td align="right">1.321</td>
              <td align="right">8.600</td>
              <td align="right">3.500</td>
              <td align="right">0.189</td>
              <td align="right">-0.103</td>
              <td align="right">21.781</td>
            </tr>
            <tr>
              <td align="left">Zr</td>
              <td align="left">Forest</td>
              <td align="right">4.135</td>
              <td align="right">0.916</td>
              <td align="right">7.200</td>
              <td align="right">2.300</td>
              <td align="right">0.131</td>
              <td align="right">1.123</td>
              <td align="right">22.164</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      </sec>
    </sec>
  </sec>
  <sec id="colour-nb-12">
    <title>Colour</title>
    <sec id="plot-prep-1-nb-12">
      <title>plot prep</title>
      <sec specific-use="notebook-content">
      <code language="r script">colour &lt;- data2 %&gt;%
  filter(group == &quot;colour&quot;) %&gt;%
  mutate(element = str_extract(element, (&quot;[:alpha:](?=_)&quot;))) %&gt;% # remove _col
  mutate(bar = c(rep(c(rep(Inf, 2), rep(0, 2)), 7), Inf, Inf)) %&gt;%
  pivot_longer(cols = c(mean, max, min), names_to = &quot;variable&quot;) 

colour2 &lt;- data2 %&gt;%
  filter(group == &quot;colour&quot;) %&gt;%
  mutate(element = str_extract(element, (&quot;[:alpha:](?=_)&quot;))) %&gt;% # remove _col
  mutate(bar = c(rep(c(rep(Inf, 2), rep(0, 2)), 7), Inf, Inf))

colour3 &lt;- data2 %&gt;%
  filter(group == &quot;colour&quot;) %&gt;%
  mutate(element = str_extract(element, (&quot;[:alpha:](?=_)&quot;))) %&gt;% # remove _col
  mutate(bar = c(rep(c(rep(-Inf, 2), rep(0, 2)), 7), -Inf, -Inf))
      </code>
      </sec>
    </sec>
    <sec id="plot-1-nb-12">
      <title>plot</title>
      <sec specific-use="notebook-content">
      <code language="r script">
p2 &lt;- ggplot() +
  theme_bw(base_size = 12) +
  geom_bar(data = colour2, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_bar(data = colour3, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_errorbar(data = colour2, aes(x = element, ymin = mean - sd, ymax = mean + sd, colour = site), width = .1, position = position_dodge(width = 0.5)) +
  geom_point(data = filter(colour, variable == &quot;mean&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_point(data = filter(colour, variable == &quot;max&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_point(data = filter(colour, variable == &quot;min&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_text(data = colour3, aes(x = element, y = spacer, colour = site, label = formatC(cv, digits = 1, format = &quot;f&quot;)), show.legend = FALSE, size = 4) +
  guides(color=guide_legend(override.aes=list(shape=NA))) +
  scale_shape_manual(values=c(3, 19, 4)) +
  scale_color_viridis_d(begin = 0.2, end = 0.7) +
  scale_y_continuous(breaks = seq(0, 1, 0.2)) +
  theme(legend.position = &quot;bottom&quot;,
        legend.title = element_blank()) +
  labs(y = &quot;Scaled value&quot;, x = &quot;Colour coefficient&quot;) 
p2
      </code>
      <fig>
        <caption><p>Summary statistics of all measured geochemical soil
        properties at both sites. Error bars represent 1SD and the
        numeric values inidicate the CV.</p></caption>
        <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/suppfig-colour_summary-1.png" />
      </fig>
      <code language="r script">
#ggsave(plot = p2, filename = here::here(&quot;./images/colour_summary.png&quot;))
      </code>
      </sec>
    </sec>
    <sec id="plot2-1-nb-12">
      <title>Plot2</title>
      <sec specific-use="notebook-content">
      <code language="r script">ggplot(data = filter(data, group == &quot;colour&quot;), aes(x = site, y = value, fill = site))+
  geom_boxplot() +
  theme_bw(base_size = 12) +
  scale_fill_viridis_d(begin = 0.2, end = 0.7) +
  theme(legend.position = &quot;none&quot;,
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  labs(x = &quot;Site&quot;, y = &quot;Value&quot;) +
  facet_wrap(~element, scales = &quot;free_y&quot;)
      </code>
      <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/unnamed-chunk-12-1.png" />
      </sec>
    </sec>
    <sec id="table-1-nb-12">
      <title>Table</title>
      <sec specific-use="notebook-content">
      <code language="r script">colour_tab &lt;- data_summary %&gt;%
  filter(group == &quot;colour&quot;) %&gt;%
  mutate(element = str_extract(element, (&quot;[:alpha:](?=_)&quot;))) %&gt;% # remove _col
  select(-group) 

knitr::kable(colour_tab, digits = 3)
      </code>
      <table-wrap>
        <table>
          <colgroup>
            <col width="11%" />
            <col width="16%" />
            <col width="11%" />
            <col width="10%" />
            <col width="11%" />
            <col width="11%" />
            <col width="8%" />
            <col width="12%" />
            <col width="10%" />
          </colgroup>
          <thead>
            <tr>
              <th align="left">element</th>
              <th align="left">site</th>
              <th align="right">mean</th>
              <th align="right">sd</th>
              <th align="right">max</th>
              <th align="right">min</th>
              <th align="right">se</th>
              <th align="right">skewness</th>
              <th align="right">cv</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">B</td>
              <td align="left">Agriculture</td>
              <td align="right">108.713</td>
              <td align="right">7.138</td>
              <td align="right">124.075</td>
              <td align="right">90.820</td>
              <td align="right">1.020</td>
              <td align="right">-0.068</td>
              <td align="right">6.566</td>
            </tr>
            <tr>
              <td align="left">B</td>
              <td align="left">Forest</td>
              <td align="right">91.596</td>
              <td align="right">12.252</td>
              <td align="right">115.728</td>
              <td align="right">65.214</td>
              <td align="right">1.750</td>
              <td align="right">-0.026</td>
              <td align="right">13.376</td>
            </tr>
            <tr>
              <td align="left">G</td>
              <td align="left">Agriculture</td>
              <td align="right">121.574</td>
              <td align="right">7.814</td>
              <td align="right">138.629</td>
              <td align="right">101.553</td>
              <td align="right">1.116</td>
              <td align="right">0.085</td>
              <td align="right">6.427</td>
            </tr>
            <tr>
              <td align="left">G</td>
              <td align="left">Forest</td>
              <td align="right">108.599</td>
              <td align="right">15.617</td>
              <td align="right">139.062</td>
              <td align="right">76.917</td>
              <td align="right">2.231</td>
              <td align="right">0.043</td>
              <td align="right">14.380</td>
            </tr>
            <tr>
              <td align="left">L</td>
              <td align="left">Agriculture</td>
              <td align="right">51.993</td>
              <td align="right">3.097</td>
              <td align="right">58.684</td>
              <td align="right">43.914</td>
              <td align="right">0.442</td>
              <td align="right">0.066</td>
              <td align="right">5.956</td>
            </tr>
            <tr>
              <td align="left">L</td>
              <td align="left">Forest</td>
              <td align="right">47.451</td>
              <td align="right">6.346</td>
              <td align="right">59.480</td>
              <td align="right">34.342</td>
              <td align="right">0.907</td>
              <td align="right">-0.022</td>
              <td align="right">13.373</td>
            </tr>
            <tr>
              <td align="left">R</td>
              <td align="left">Agriculture</td>
              <td align="right">132.290</td>
              <td align="right">8.146</td>
              <td align="right">149.933</td>
              <td align="right">111.218</td>
              <td align="right">1.164</td>
              <td align="right">0.153</td>
              <td align="right">6.158</td>
            </tr>
            <tr>
              <td align="left">R</td>
              <td align="left">Forest</td>
              <td align="right">125.584</td>
              <td align="right">16.808</td>
              <td align="right">157.058</td>
              <td align="right">91.971</td>
              <td align="right">2.401</td>
              <td align="right">-0.014</td>
              <td align="right">13.384</td>
            </tr>
            <tr>
              <td align="left">X</td>
              <td align="left">Agriculture</td>
              <td align="right">23.306</td>
              <td align="right">3.162</td>
              <td align="right">30.618</td>
              <td align="right">15.890</td>
              <td align="right">0.452</td>
              <td align="right">0.357</td>
              <td align="right">13.567</td>
            </tr>
            <tr>
              <td align="left">X</td>
              <td align="left">Forest</td>
              <td align="right">19.909</td>
              <td align="right">5.772</td>
              <td align="right">32.219</td>
              <td align="right">9.801</td>
              <td align="right">0.825</td>
              <td align="right">0.295</td>
              <td align="right">28.993</td>
            </tr>
            <tr>
              <td align="left">Y</td>
              <td align="left">Agriculture</td>
              <td align="right">20.261</td>
              <td align="right">2.772</td>
              <td align="right">26.688</td>
              <td align="right">13.779</td>
              <td align="right">0.396</td>
              <td align="right">0.349</td>
              <td align="right">13.680</td>
            </tr>
            <tr>
              <td align="left">Y</td>
              <td align="left">Forest</td>
              <td align="right">16.846</td>
              <td align="right">4.963</td>
              <td align="right">27.550</td>
              <td align="right">8.173</td>
              <td align="right">0.709</td>
              <td align="right">0.315</td>
              <td align="right">29.458</td>
            </tr>
            <tr>
              <td align="left">Z</td>
              <td align="left">Agriculture</td>
              <td align="right">5.638</td>
              <td align="right">0.779</td>
              <td align="right">7.438</td>
              <td align="right">3.838</td>
              <td align="right">0.111</td>
              <td align="right">0.234</td>
              <td align="right">13.822</td>
            </tr>
            <tr>
              <td align="left">Z</td>
              <td align="left">Forest</td>
              <td align="right">4.113</td>
              <td align="right">1.148</td>
              <td align="right">6.640</td>
              <td align="right">2.007</td>
              <td align="right">0.164</td>
              <td align="right">0.284</td>
              <td align="right">27.910</td>
            </tr>
            <tr>
              <td align="left">a</td>
              <td align="left">Agriculture</td>
              <td align="right">3.383</td>
              <td align="right">0.322</td>
              <td align="right">4.152</td>
              <td align="right">2.586</td>
              <td align="right">0.046</td>
              <td align="right">-0.026</td>
              <td align="right">9.531</td>
            </tr>
            <tr>
              <td align="left">a</td>
              <td align="left">Forest</td>
              <td align="right">5.732</td>
              <td align="right">0.407</td>
              <td align="right">6.562</td>
              <td align="right">4.411</td>
              <td align="right">0.058</td>
              <td align="right">-0.378</td>
              <td align="right">7.095</td>
            </tr>
            <tr>
              <td align="left">b</td>
              <td align="left">Agriculture</td>
              <td align="right">8.842</td>
              <td align="right">0.973</td>
              <td align="right">10.587</td>
              <td align="right">6.689</td>
              <td align="right">0.139</td>
              <td align="right">-0.183</td>
              <td align="right">11.004</td>
            </tr>
            <tr>
              <td align="left">b</td>
              <td align="left">Forest</td>
              <td align="right">12.469</td>
              <td align="right">2.009</td>
              <td align="right">15.909</td>
              <td align="right">8.016</td>
              <td align="right">0.287</td>
              <td align="right">0.221</td>
              <td align="right">16.109</td>
            </tr>
            <tr>
              <td align="left">c</td>
              <td align="left">Agriculture</td>
              <td align="right">9.468</td>
              <td align="right">1.017</td>
              <td align="right">11.324</td>
              <td align="right">7.172</td>
              <td align="right">0.145</td>
              <td align="right">-0.189</td>
              <td align="right">10.741</td>
            </tr>
            <tr>
              <td align="left">c</td>
              <td align="left">Forest</td>
              <td align="right">13.739</td>
              <td align="right">1.943</td>
              <td align="right">16.998</td>
              <td align="right">9.149</td>
              <td align="right">0.278</td>
              <td align="right">0.149</td>
              <td align="right">14.145</td>
            </tr>
            <tr>
              <td align="left">h</td>
              <td align="left">Agriculture</td>
              <td align="right">1.205</td>
              <td align="right">0.013</td>
              <td align="right">1.234</td>
              <td align="right">1.180</td>
              <td align="right">0.002</td>
              <td align="right">0.185</td>
              <td align="right">1.116</td>
            </tr>
            <tr>
              <td align="left">h</td>
              <td align="left">Forest</td>
              <td align="right">1.134</td>
              <td align="right">0.047</td>
              <td align="right">1.225</td>
              <td align="right">1.056</td>
              <td align="right">0.007</td>
              <td align="right">0.342</td>
              <td align="right">4.130</td>
            </tr>
            <tr>
              <td align="left">u</td>
              <td align="left">Agriculture</td>
              <td align="right">8.075</td>
              <td align="right">0.816</td>
              <td align="right">9.774</td>
              <td align="right">6.202</td>
              <td align="right">0.117</td>
              <td align="right">-0.137</td>
              <td align="right">10.101</td>
            </tr>
            <tr>
              <td align="left">u</td>
              <td align="left">Forest</td>
              <td align="right">12.749</td>
              <td align="right">1.379</td>
              <td align="right">14.839</td>
              <td align="right">8.750</td>
              <td align="right">0.197</td>
              <td align="right">-0.298</td>
              <td align="right">10.812</td>
            </tr>
            <tr>
              <td align="left">v</td>
              <td align="left">Agriculture</td>
              <td align="right">3.803</td>
              <td align="right">0.438</td>
              <td align="right">4.659</td>
              <td align="right">2.956</td>
              <td align="right">0.063</td>
              <td align="right">-0.065</td>
              <td align="right">11.529</td>
            </tr>
            <tr>
              <td align="left">v</td>
              <td align="left">Forest</td>
              <td align="right">4.788</td>
              <td align="right">1.041</td>
              <td align="right">6.620</td>
              <td align="right">2.772</td>
              <td align="right">0.149</td>
              <td align="right">0.307</td>
              <td align="right">21.739</td>
            </tr>
            <tr>
              <td align="left">x</td>
              <td align="left">Agriculture</td>
              <td align="right">0.474</td>
              <td align="right">0.002</td>
              <td align="right">0.479</td>
              <td align="right">0.468</td>
              <td align="right">0.000</td>
              <td align="right">0.064</td>
              <td align="right">0.462</td>
            </tr>
            <tr>
              <td align="left">x</td>
              <td align="left">Forest</td>
              <td align="right">0.487</td>
              <td align="right">0.002</td>
              <td align="right">0.492</td>
              <td align="right">0.482</td>
              <td align="right">0.000</td>
              <td align="right">-0.208</td>
              <td align="right">0.466</td>
            </tr>
            <tr>
              <td align="left">y</td>
              <td align="left">Agriculture</td>
              <td align="right">0.412</td>
              <td align="right">0.001</td>
              <td align="right">0.413</td>
              <td align="right">0.410</td>
              <td align="right">0.000</td>
              <td align="right">-0.291</td>
              <td align="right">0.146</td>
            </tr>
            <tr>
              <td align="left">y</td>
              <td align="left">Forest</td>
              <td align="right">0.412</td>
              <td align="right">0.002</td>
              <td align="right">0.415</td>
              <td align="right">0.409</td>
              <td align="right">0.000</td>
              <td align="right">0.416</td>
              <td align="right">0.424</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      </sec>
    </sec>
  </sec>
  <sec id="psa-and-organic-matter-nb-12">
    <title>PSA and organic matter</title>
    <sec id="plot-prep-2-nb-12">
      <title>plot prep</title>
      <sec specific-use="notebook-content">
      <code language="r script">psa &lt;- data2 %&gt;%
  filter(group %in% c(&quot;psa&quot;, &quot;organic&quot;)) %&gt;%
  mutate(bar = c(rep(c(rep(Inf, 2), rep(0, 2)), 1), Inf, Inf)) %&gt;%
  pivot_longer(cols = c(mean, max, min), names_to = &quot;variable&quot;) 

psa2 &lt;- data2 %&gt;%
  filter(group %in% c(&quot;psa&quot;, &quot;organic&quot;)) %&gt;%
  mutate(bar = c(rep(c(rep(Inf, 2), rep(0, 2)), 1), Inf, Inf)) 

psa3 &lt;- data2 %&gt;%
  filter(group %in% c(&quot;psa&quot;, &quot;organic&quot;)) %&gt;%
  mutate(bar = c(rep(c(rep(-Inf, 2), rep(0, 2)), 1), -Inf, -Inf))
      </code>
      </sec>
    </sec>
    <sec id="plot-2-nb-12">
      <title>plot</title>
      <sec specific-use="notebook-content">
      <code language="r script">ggplot() +
  theme_bw(base_size = 12) +
  geom_bar(data = psa2, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_bar(data = psa3, aes(x=element, y = bar), fill =&quot;grey20&quot;, position=&quot;identity&quot;, stat = &quot;identity&quot;, alpha = 0.1) +
  geom_errorbar(data = psa2, aes(x = element, ymin = mean - sd, ymax = mean + sd, colour = site), width = .2, position = position_dodge(width = 0.5)) +
  geom_point(data = filter(psa, variable == &quot;mean&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_point(data = filter(psa, variable == &quot;max&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_point(data = filter(psa, variable == &quot;min&quot;), aes(x = element, y = value, colour = site, shape = variable), position = position_dodge(width = 0.5), show.legend = TRUE, size = 2) +
  geom_text(data = psa3, aes(x = element, y = spacer, colour = site, label = formatC(cv, digits = 1, format = &quot;f&quot;)), show.legend = FALSE, size = 5) +
  guides(color=guide_legend(override.aes=list(shape=NA))) +
  scale_shape_manual(values=c(3, 19, 4)) +
  scale_color_viridis_d(begin = 0.2, end = 0.7) +
  scale_y_continuous(breaks = seq(0, 1, 0.2)) +
  theme(legend.position = &quot;bottom&quot;,
        legend.title = element_blank()) +
  labs(y = &quot;Scaled value&quot;, x = &quot;Soil property&quot;) 
      </code>
      <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/unnamed-chunk-15-1.png" />
      </sec>
    </sec>
  </sec>
  <sec id="plot2-2-nb-12">
    <title>Plot2</title>
    <sec specific-use="notebook-content">
    <code language="r script">ggplot(data = filter(data, group %in% c(&quot;psa&quot;, &quot;organic&quot;)), aes(x = site, y = value, fill = site))+
  geom_boxplot() +
  theme_bw(base_size = 12) +
  scale_fill_viridis_d(begin = 0.2, end = 0.7) +
  theme(legend.position = &quot;none&quot;,
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  labs(x = &quot;Site&quot;, y = &quot;Value&quot;) +
  facet_wrap(~element, scales = &quot;free_y&quot;)
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="univariate_summary_files/figure-jats/unnamed-chunk-16-1.png" />
    </sec>
    <sec id="table-2-nb-12">
      <title>Table</title>
      <sec specific-use="notebook-content">
      <code language="r script">psa_tab &lt;- data_summary %&gt;%
  filter(group %in% c(&quot;psa&quot;, &quot;organic&quot;)) %&gt;%
  select(-group) 

knitr::kable(psa_tab, digits = 3)
      </code>
      <table-wrap>
        <table>
          <colgroup>
            <col width="10%" />
            <col width="15%" />
            <col width="12%" />
            <col width="10%" />
            <col width="12%" />
            <col width="12%" />
            <col width="9%" />
            <col width="12%" />
            <col width="9%" />
          </colgroup>
          <thead>
            <tr>
              <th align="left">element</th>
              <th align="left">site</th>
              <th align="right">mean</th>
              <th align="right">sd</th>
              <th align="right">max</th>
              <th align="right">min</th>
              <th align="right">se</th>
              <th align="right">skewness</th>
              <th align="right">cv</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">dx_50</td>
              <td align="left">Agriculture</td>
              <td align="right">5.437</td>
              <td align="right">0.484</td>
              <td align="right">7.305</td>
              <td align="right">4.638</td>
              <td align="right">0.069</td>
              <td align="right">1.177</td>
              <td align="right">8.908</td>
            </tr>
            <tr>
              <td align="left">dx_50</td>
              <td align="left">Forest</td>
              <td align="right">16.502</td>
              <td align="right">4.772</td>
              <td align="right">28.992</td>
              <td align="right">8.492</td>
              <td align="right">0.682</td>
              <td align="right">0.614</td>
              <td align="right">28.918</td>
            </tr>
            <tr>
              <td align="left">organic</td>
              <td align="left">Agriculture</td>
              <td align="right">8.508</td>
              <td align="right">1.373</td>
              <td align="right">11.363</td>
              <td align="right">5.863</td>
              <td align="right">0.196</td>
              <td align="right">0.068</td>
              <td align="right">16.132</td>
            </tr>
            <tr>
              <td align="left">organic</td>
              <td align="left">Forest</td>
              <td align="right">11.551</td>
              <td align="right">5.993</td>
              <td align="right">26.987</td>
              <td align="right">1.373</td>
              <td align="right">0.856</td>
              <td align="right">0.372</td>
              <td align="right">51.886</td>
            </tr>
            <tr>
              <td align="left">ssa</td>
              <td align="left">Agriculture</td>
              <td align="right">1853.021</td>
              <td align="right">187.324</td>
              <td align="right">2195.720</td>
              <td align="right">1458.533</td>
              <td align="right">26.761</td>
              <td align="right">0.000</td>
              <td align="right">10.109</td>
            </tr>
            <tr>
              <td align="left">ssa</td>
              <td align="left">Forest</td>
              <td align="right">768.919</td>
              <td align="right">129.139</td>
              <td align="right">1032.611</td>
              <td align="right">492.593</td>
              <td align="right">18.448</td>
              <td align="right">-0.037</td>
              <td align="right">16.795</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">summary_tab &lt;- data_summary %&gt;%
  filter(element %in% c(&quot;Li&quot;, &quot;a_col&quot;, &quot;Fe&quot;, &quot;Co&quot;, &quot;x_col&quot;, &quot;Cs&quot;, &quot;La&quot;, &quot;Ni&quot;, &quot;Nb&quot;, &quot;h_col&quot;, &quot;b_col&quot;, &quot;Rb&quot;, &quot;Ca&quot;, &quot;Sr&quot;, &quot;c_col&quot;)) %&gt;%
   mutate(element = as.character(fct_recode(element, &quot;a*&quot; = &quot;a_col&quot;, &quot;b*&quot; = &quot;b_col&quot;, &quot;c*&quot; = &quot;c_col&quot;, &quot;h*&quot; = &quot;h_col&quot;, &quot;x&quot; = &quot;x_col&quot;))) %&gt;%
  rename(&quot;Property&quot; = &quot;element&quot;, &quot;Mean&quot; = &quot;mean&quot;, &quot;SD&quot; = &quot;sd&quot;, &quot;Max&quot; = &quot;max&quot;, &quot;Min&quot; = &quot;min&quot;, &quot;Skewness&quot; = &quot;skewness&quot;, &quot;CV&quot; = &quot;cv&quot;) %&gt;%
   mutate(Property = fct_relevel(Property, &quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)) %&gt;%
  arrange(Property) |&gt;
  mutate(Property = as.character(Property))
      </code>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">
summary_tab |&gt;
  group_by(site) |&gt;
  select(-group, -se) |&gt;
  gt() |&gt;
  #fmt_markdown(columns = Element)|&gt;
  fmt_number(decimals = 2) |&gt;
  #cols_align(align = &quot;left&quot;) |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_options(column_labels.font.weight = &quot;bold&quot;) |&gt;
tab_style(
    style = list(cell_text(style = &quot;italic&quot;)),
    locations = cells_body(
      columns = Property,
      rows = Property %in% c(&quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)))
      </code>
      <fig id="tbl-univariate-summary-nb-12">
        <caption><p>Summary univariate statistics of selected
        geochemical and colour soil properties for each site (n =
        49).</p></caption>
      </fig>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">summary_tab |&gt;
  group_by(site) |&gt;
  summarise(skew_small = sum(Skewness &lt;=0.5 &amp; Skewness &gt;=-0.5),
            skew_large = sum(Skewness &gt; 0.5 | Skewness &lt; -0.5),
            pos_skew = sum(Skewness &gt; 0),
            neg_skew = sum(Skewness &lt; 0),
            CV_low = sum(CV &lt;15),
            CV_mod = sum(CV &gt;= 15 &amp; CV &lt; 35),
            CV_high = sum(CV &gt;= 35 &amp; CV &lt;= 75),
            CV_v_high = sum(CV &gt; 75))
      </code>
      <boxed-text>
        <preformat># A tibble: 2 × 9
  site   skew_small skew_large pos_skew neg_skew CV_low CV_mod CV_high CV_v_high
  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt;  &lt;int&gt;   &lt;int&gt;     &lt;int&gt;
1 Agric…         13          2       10        5     11      2       2         0
2 Forest         11          4       10        5      7      6       1         1</preformat>
      </boxed-text>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">forest_data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  pivot_longer(cols = li:elevation, names_to = &quot;property&quot;, values_to = &quot;value&quot;) %&gt;%
  group_by(property) %&gt;%
  summarise(Mean = mean(value, na.rm = T),
            SD = sd(value, na.rm = T),
            Max = max(value, na.rm = T),
            Min = min(value, na.rm = T),
            #Se = sd(value)/ sqrt(length(value)),
            Skewness = moments::skewness(value, na.rm = TRUE),
            CV = sd(value, na.rm = TRUE) / mean(value, na.rm = TRUE) * 100, .groups = &quot;drop&quot;) %&gt;%
  mutate(site = &quot;Forest&quot;)

ag_data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  pivot_longer(cols = li:elevation, names_to = &quot;property&quot;, values_to = &quot;value&quot;) %&gt;%
  group_by(property) %&gt;%
  summarise(Mean = mean(value, na.rm = T),
            SD = sd(value, na.rm = T),
            Max = max(value, na.rm = T),
            Min = min(value, na.rm = T),
            #Se = sd(value)/ sqrt(length(value)),
            Skewness = moments::skewness(value, na.rm = TRUE),
            CV = sd(value, na.rm = TRUE) / mean(value, na.rm = TRUE) * 100, .groups = &quot;drop&quot;) %&gt;%
  mutate(site = &quot;Agriculture&quot;)

terrain_summary &lt;- forest_data %&gt;%
  bind_rows(ag_data) %&gt;%
  mutate(property = fct_relevel(property, c(&quot;ca&quot;, &quot;co&quot;, &quot;cs&quot;, &quot;fe&quot;, &quot;li&quot;, &quot;la&quot;, &quot;nb&quot;, &quot;ni&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;a_c&quot;, &quot;b_c&quot;, &quot;c_c&quot;, &quot;h_c&quot;, &quot;x_c&quot;, &quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;))) %&gt;%
  arrange(property, site) %&gt;%
  mutate(property = as.character(fct_recode(property, &quot;h*&quot; = &quot;h_c&quot;, &quot;a*&quot; = &quot;a_c&quot;, &quot;c*&quot; = &quot;c_c&quot;, &quot;b*&quot; = &quot;b_c&quot;, &quot;x&quot; = &quot;x_c&quot;, &quot;Ca&quot; = &quot;ca&quot;, &quot;Co&quot; = &quot;co&quot;, &quot;Cs&quot; = &quot;cs&quot;, &quot;Fe&quot; = &quot;fe&quot;, &quot;Li&quot; = &quot;li&quot;, &quot;La&quot; = &quot;la&quot;, &quot;Nb&quot; = &quot;nb&quot;, &quot;Rb&quot; = &quot;rb&quot;, &quot;Ni&quot; = &quot;ni&quot;, &quot;Sr&quot; = &quot;sr&quot;, &quot;Elevation&quot; = &quot;elevation&quot;, &quot;Catchment Area&quot; = &quot;catchment_area&quot;, &quot;Plan Curvature&quot; = &quot;plan_curvature&quot;, &quot;Profile Curvature&quot; = &quot;profile_curvature&quot;, &quot;Rel. Slope Position&quot; = &quot;relative_slope_position&quot;, &quot;SAGA Wetness Index&quot; = &quot;saga_wetness_index&quot;, &quot;Vert. Dist. Channel&quot; = &quot;channel_network_distance&quot;)))
      </code>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">
terrain_summary |&gt;
  rename(&quot;Property&quot; = &quot;property&quot;) |&gt;
  group_by(site) |&gt;
  gt() |&gt;
  #fmt_markdown(columns = Property)|&gt;
  fmt_number(n_sigfig = 3) |&gt;
  fmt_scientific(rows = Property %in% c(&quot;Plan Curvature&quot;, &quot;Profile Curvature&quot;, &quot;Vert. Dist. Channel&quot;)) |&gt;
  #fmt_number(row = everything() &gt; 100, decimal = 0) |&gt;
  #cols_align(align = &quot;left&quot;) |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_options(column_labels.font.weight = &quot;bold&quot;) |&gt;
tab_style(
    style = list(cell_text(style = &quot;italic&quot;)),
    locations = cells_body(
      columns = Property,
      rows = Property %in% c(&quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)))
      </code>
      <fig id="tbl-univariate2-summary-nb-12">
        <caption><p>Summary statistics for the interpoloated values (10m
        resolution) for slected geochemical and colour soil properties
        and terrain attributes for each site.</p></caption>
      </fig>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">data_summary |&gt;
  filter(group %in% c(&quot;geochem&quot;, &quot;colour&quot;)) |&gt;
  rename(&quot;property&quot; = &quot;element&quot;) |&gt;
  filter(property %in% c(&quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;a_col&quot;, &quot;b_col&quot;, &quot;c_col&quot;, &quot;h_col&quot;, &quot;x_col&quot;))|&gt;
  mutate(property = as.character(fct_recode(property, &quot;h*&quot; = &quot;h_col&quot;, &quot;a*&quot; = &quot;a_col&quot;, &quot;c*&quot; = &quot;c_col&quot;, &quot;b*&quot; = &quot;b_col&quot;, &quot;x&quot; = &quot;x_col&quot;))) |&gt;
  left_join(terrain_summary, by = join_by(property, site)) |&gt;
  #drop_na() |&gt;
  mutate(Mean = paste0(sprintf(&quot;%.2f&quot;, mean), &quot; (&quot;, sprintf(&quot;%.2f&quot;, Mean), &quot;)&quot;),
         SD = paste0(sprintf(&quot;%.2f&quot;, sd), &quot; (&quot;, sprintf(&quot;%.2f&quot;, SD), &quot;)&quot;),
         Max = paste0(sprintf(&quot;%.2f&quot;, max), &quot; (&quot;, sprintf(&quot;%.2f&quot;, Max), &quot;)&quot;),
         Min = paste0(sprintf(&quot;%.2f&quot;, min), &quot; (&quot;, sprintf(&quot;%.2f&quot;, Min), &quot;)&quot;),
         Skewness = paste0(sprintf(&quot;%.2f&quot;, skewness), &quot; (&quot;, sprintf(&quot;%.2f&quot;, Skewness), &quot;)&quot;),
         CV = paste0(sprintf(&quot;%.2f&quot;, cv), &quot; (&quot;, sprintf(&quot;%.2f&quot;, CV), &quot;)&quot;)) |&gt;
  select(-group, -mean, -sd, -max, -min, -se, -skewness, -cv) |&gt;
  rename(&quot;Property&quot; = &quot;property&quot;)  |&gt;
  group_by(site) |&gt;
  gt()|&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_options(column_labels.font.weight = &quot;bold&quot;) |&gt;
tab_style(
    style = list(cell_text(style = &quot;italic&quot;)),
    locations = cells_body(
      columns = Property,
      rows = Property %in% c(&quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)))
      </code>
      </sec>
    </sec>
  </sec>
  <sec id="correlations-nb-12">
    <title>Correlations</title>
    <sec id="forest-nb-12">
      <title>Forest</title>
      <p>not used</p>
      <sec specific-use="notebook-content">
      <code language="r script">forest_corr_tab &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;% 
  select(-x, -y)

ag_corr_tab &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;% 
  select(-x, -y) 

forest_r &lt;- as.data.frame(Hmisc::rcorr(as.matrix(forest_corr_tab))$r) %&gt;%
  select(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;) %&gt;%
  rownames_to_column() %&gt;%
  filter(rowname %in% c(&quot;ca&quot;, &quot;co&quot;, &quot;cs&quot;, &quot;fe&quot;, &quot;li&quot;, &quot;la&quot;, &quot;nb&quot;, &quot;ni&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;a_c&quot;, &quot;b_c&quot;, &quot;c_c&quot;, &quot;h_c&quot;, &quot;x_c&quot;)) %&gt;%
  pivot_longer(cols = plan_curvature:elevation, names_to = &quot;Terrain&quot;, values_to = &quot;r&quot;)

forest_p &lt;- as.data.frame(Hmisc::rcorr(as.matrix(forest_corr_tab))$P) %&gt;%
  select(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;) %&gt;%
  rownames_to_column() %&gt;%
  filter(rowname %in% c(&quot;ca&quot;, &quot;co&quot;, &quot;cs&quot;, &quot;fe&quot;, &quot;li&quot;, &quot;la&quot;, &quot;nb&quot;, &quot;ni&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;a_c&quot;, &quot;b_c&quot;, &quot;c_c&quot;, &quot;h_c&quot;, &quot;x_c&quot;)) %&gt;%
  pivot_longer(cols = plan_curvature:elevation, names_to = &quot;Terrain&quot;, values_to = &quot;P&quot;)

temp3 &lt;- forest_r %&gt;%
  full_join(forest_p) %&gt;%
  mutate(label = case_when(P &lt; 0.05 &amp; P &gt;= 0.01 ~ paste0(round(r,2), &quot;*&quot;),
                           P &lt; 0.01 &amp; P &gt;= 0.001 ~ paste0(round(r,2), &quot;**&quot;),
                           P &lt; 0.001  ~ paste0(round(r,2), &quot;***&quot;),
                           P &gt;= 0.05 ~ &quot;NS&quot;)) %&gt;%
  mutate(site = &quot;Forest&quot;)
      </code>
      <boxed-text>
        <preformat>Joining with `by = join_by(rowname, Terrain)`</preformat>
      </boxed-text>
      <code language="r script">ag_r &lt;- as.data.frame(Hmisc::rcorr(as.matrix(ag_corr_tab))$r) %&gt;%
  select(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;) %&gt;%
  rownames_to_column() %&gt;%
  filter(rowname %in% c(&quot;ca&quot;, &quot;co&quot;, &quot;cs&quot;, &quot;fe&quot;, &quot;li&quot;, &quot;la&quot;, &quot;nb&quot;, &quot;ni&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;a_c&quot;, &quot;b_c&quot;, &quot;c_c&quot;, &quot;h_c&quot;, &quot;x_c&quot;)) %&gt;%
  pivot_longer(cols = plan_curvature:elevation, names_to = &quot;Terrain&quot;, values_to = &quot;r&quot;)

ag_p &lt;- as.data.frame(Hmisc::rcorr(as.matrix(ag_corr_tab))$P) %&gt;%
  select(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;) %&gt;%
  rownames_to_column() %&gt;%
  filter(rowname %in% c(&quot;ca&quot;, &quot;co&quot;, &quot;cs&quot;, &quot;fe&quot;, &quot;li&quot;, &quot;la&quot;, &quot;nb&quot;, &quot;ni&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;a_c&quot;, &quot;b_c&quot;, &quot;c_c&quot;, &quot;h_c&quot;, &quot;x_c&quot;)) %&gt;%
  pivot_longer(cols = plan_curvature:elevation, names_to = &quot;Terrain&quot;, values_to = &quot;P&quot;)

temp4 &lt;- ag_r %&gt;%
  full_join(ag_p) %&gt;%
  mutate(label = case_when(P &lt; 0.05 &amp; P &gt;= 0.01 ~ paste0(round(r,2), &quot;*&quot;),
                           P &lt; 0.01 &amp; P &gt;= 0.001 ~ paste0(round(r,2), &quot;**&quot;),
                           P &lt; 0.001  ~ paste0(round(r,2), &quot;***&quot;),
                           P &gt;= 0.05 ~ &quot;NS&quot;)) %&gt;%
  mutate(site = &quot;Agriculture&quot;)
      </code>
      <boxed-text>
        <preformat>Joining with `by = join_by(rowname, Terrain)`</preformat>
      </boxed-text>
      <code language="r script">corr_tab &lt;- temp3 %&gt;%
  bind_rows(temp4) %&gt;%
  pivot_wider(id_cols = c(rowname, site), names_from = &quot;Terrain&quot;, values_from = &quot;label&quot;) %&gt;%
  select(&quot;site&quot;, &quot;Property&quot; = &quot;rowname&quot;, &quot;Elevation&quot; = &quot;elevation&quot;, &quot;SAGA Wetness Index&quot; = &quot;saga_wetness_index&quot;, &quot;Rel. Slope Position&quot; = &quot;relative_slope_position&quot;, &quot;Vert. Dist. Channel&quot; = &quot;channel_network_distance&quot;, &quot;Catchment Area&quot; = &quot;catchment_area&quot;, &quot;Plan Curvature&quot; = &quot;plan_curvature&quot;, &quot;Profile Curvature&quot; = &quot;profile_curvature&quot;) %&gt;%
  mutate(Property = (fct_recode(Property, &quot;*h**&quot; = &quot;h_c&quot;, &quot;*a**&quot; = &quot;a_c&quot;, &quot;*c**&quot; = &quot;c_c&quot;, &quot;*b**&quot; = &quot;b_c&quot;, &quot;*x*&quot; = &quot;x_c&quot;, &quot;Ca&quot; = &quot;ca&quot;, &quot;Co&quot; = &quot;co&quot;, &quot;Cs&quot; = &quot;cs&quot;, &quot;Fe&quot; = &quot;fe&quot;, &quot;Li&quot; = &quot;li&quot;, &quot;La&quot; = &quot;la&quot;, &quot;Nb&quot; = &quot;nb&quot;, &quot;Rb&quot; = &quot;rb&quot;, &quot;Ni&quot; = &quot;ni&quot;, &quot;Sr&quot; = &quot;sr&quot;))) %&gt;%
  mutate(Property = fct_relevel(Property, c(&quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;*a**&quot;, &quot;*b**&quot;, &quot;*c**&quot;, &quot;*h**&quot;, &quot;*x*&quot;))) %&gt;%
    arrange(Property) %&gt;%
  mutate(Property = as.character(Property))
  
#write.csv(x = corr_tab, file = &quot;correlation.csv&quot;, row.names = FALSE)
      </code>
      </sec>
      <sec specific-use="notebook-content">
      <code language="r script">
correlation &lt;- corr_tab |&gt;
  group_by(site) |&gt;
  gt() |&gt;
  fmt_markdown(columns = Property) |&gt;
    tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_options(column_labels.font.weight = &quot;bold&quot;) |&gt;
    row_group_order(groups = c(&quot;Agriculture&quot;, &quot;Forest&quot;))|&gt;
  tab_footnote(
    footnote = &quot;*** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05; NS = non-significant at p = 0.05&quot;
  )

correlation
      </code>
      <code language="r script">
#saveRDS(correlation, file = here::here(&quot;./images/correlation.rds&quot;))
      </code>
      </sec>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-13-nb-13">
<front-stub>
<title-group>
<article-title>Lithium (Li) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-13">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-13">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;li&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-13">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = li)) +
  scale_fill_viridis_c(name = &quot;Li&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-13">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-13">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -li)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-13">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-13">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(li ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-13">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(li ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$li,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -li))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = li ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$li, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -li)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.2779292
                    % Var explained: 41.29
                       Test set MSE: 0.28
                    % Var explained: 41.95</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-13">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$li)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.08150 -0.17703 -0.00843  0.17810  1.13142 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  3.91290    0.09236   42.37   &lt;2e-16 ***
obs          0.38697    0.01422   27.21   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2999 on 882 degrees of freedom
Multiple R-squared:  0.4563,    Adjusted R-squared:  0.4557 
F-statistic: 740.3 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-13">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-13">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 135.21234      431.7042                elevation
5  89.85247      197.0463  relative_slope_position
6  51.76305      168.6657 channel_network_distance
3  45.28056      131.4342       saga_wetness_index
4  21.10736      107.2431           catchment_area
2  24.72114      102.5091        profile_curvature
1  16.04247      101.1574           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-13">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 135.21234      431.7042                elevation
5  89.85247      197.0463  relative_slope_position
6  51.76305      168.6657 channel_network_distance
3  45.28056      131.4342       saga_wetness_index
2  24.72114      102.5091        profile_curvature
4  21.10736      107.2431           catchment_area
1  16.04247      101.1574           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-13">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Li_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-13">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Li&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Li&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-14-nb-14">
<front-stub>
<title-group>
<article-title>Lithium (Li) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-14">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-14">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;li&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-14">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = li)) +
  scale_fill_viridis_c(name = &quot;Li&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-14">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-14">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -li)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-14">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-14">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(li ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-14">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(li ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$li,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -li))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = li ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$li, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -li)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.5382498
                    % Var explained: 59.34
                       Test set MSE: 0.53
                    % Var explained: 59.8</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-14">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$li)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.70641 -0.30353 -0.02839  0.26928  1.53511 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  6.73579    0.24052   28.00   &lt;2e-16 ***
obs          0.56944    0.01527   37.29   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.5017 on 771 degrees of freedom
Multiple R-squared:  0.6433,    Adjusted R-squared:  0.6428 
F-statistic:  1391 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Li_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-14">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-14">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 113.84536     1045.4107                elevation
5  87.57123      559.3651  relative_slope_position
3  76.68567      530.0261       saga_wetness_index
6  53.27985      290.5358 channel_network_distance
4  49.74883      269.1177           catchment_area
2  29.32618      202.5276        profile_curvature
1  14.76783      141.3034           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-14">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 113.84536     1045.4107                elevation
5  87.57123      559.3651  relative_slope_position
3  76.68567      530.0261       saga_wetness_index
6  53.27985      290.5358 channel_network_distance
4  49.74883      269.1177           catchment_area
2  29.32618      202.5276        profile_curvature
1  14.76783      141.3034           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-14">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Li_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-14">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Li&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Li&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-15-nb-15">
<front-stub>
<title-group>
<article-title>Nickel (Ni) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-15">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-15">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;ni&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-15">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = ni)) +
  scale_fill_viridis_c(name = &quot;Ni&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-15">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-15">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -ni)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-15">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-15">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(ni ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-15">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(ni ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$ni,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -ni))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = ni ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$ni, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -ni)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 2.818505
                    % Var explained: 55.24
                       Test set MSE: 2.81
                    % Var explained: 55.98</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-15">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$ni)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
    Min      1Q  Median      3Q     Max 
-4.0604 -0.7359 -0.0970  0.6386  5.0007 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  9.23355    0.27765   33.26   &lt;2e-16 ***
obs          0.49478    0.01517   32.62   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.087 on 882 degrees of freedom
Multiple R-squared:  0.5468,    Adjusted R-squared:  0.5463 
F-statistic:  1064 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-15">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-15">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 165.03371      6126.896                elevation
5 109.59806      2559.495  relative_slope_position
6  71.39690      2403.750 channel_network_distance
3  44.20826      1567.959       saga_wetness_index
4  40.80689      1467.531           catchment_area
2  36.20145      1400.345        profile_curvature
1  22.26551      1037.886           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-15">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 165.03371      6126.896                elevation
5 109.59806      2559.495  relative_slope_position
6  71.39690      2403.750 channel_network_distance
3  44.20826      1567.959       saga_wetness_index
4  40.80689      1467.531           catchment_area
2  36.20145      1400.345        profile_curvature
1  22.26551      1037.886           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-15">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-15">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">#|
importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Ni&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data

write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Ni&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance


write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-16-nb-16">
<front-stub>
<title-group>
<article-title>Colour space abbreviations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-16">
  <title>Load Libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">library(tidyverse)
  </code>
  <boxed-text>
    <preformat>── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors</preformat>
  </boxed-text>
  <code language="r script">library(gt)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">abbrev &lt;- tribble(
  ~`Colour space model`, ~Parameter, ~Abbreviation,
  &quot;RGB&quot;,                  &quot;Red&quot;,      &quot;R&quot;,
  &quot;RGB&quot;,                  &quot;Green&quot;,    &quot;G&quot;,
  &quot;RGB&quot;,                  &quot;Blue&quot;,     &quot;B&quot;,
  &quot;CIE xyY&quot;,              &quot;Chromatic coordinate x&quot;,     &quot;x&quot;,
  &quot;CIE xyY&quot;,              &quot;Chromatic coordinate y&quot;,     &quot;y&quot;,
  &quot;CIE XYZ&quot;,              &quot;Brightness&quot;,     &quot;Y&quot;,
  &quot;CIE XYZ&quot;,              &quot;Virtual component X&quot;,     &quot;X&quot;,
  &quot;CIE xyY&quot;,              &quot;Virtual component Z&quot;,     &quot;Z&quot;,
  &quot;CIE LAB&quot;,              &quot;Metric lightness function&quot;,     &quot;L&quot;,
  &quot;CIE LAB&quot;,              &quot;Chromatic coordinate opponent red–green scales&quot;,     &quot;a*&quot;,
  &quot;CIE LAB&quot;,              &quot;Chromatic coordinate opponent blue–yellow scales&quot;,     &quot;b*&quot;,
  &quot;CIE LUV&quot;,              &quot;Chromatic coordinate opponent red–green scales&quot;,     &quot;u*&quot;,
  &quot;CIE LUV&quot;,              &quot;Chromatic coordinate opponent blue–yellow scales&quot;,     &quot;v*&quot;,
  &quot;CIE LCH&quot;,              &quot;CIE hue&quot;,     &quot;c*&quot;,
  &quot;CIE LCH&quot;,              &quot;CIE chroma&quot;,     &quot;h*&quot;,)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">suptab1 &lt;- abbrev |&gt;
  group_by(`Colour space model`) |&gt;
  gt() |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_style(style =  cell_text(align = &quot;left&quot;), locations =  cells_body()) |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;left&quot;), locations =  cells_column_labels())
suptab1
  </code>
  <code language="r script">saveRDS(suptab1, file = here::here(&quot;./images/suptab1.rds&quot;))
  </code>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-17-nb-17">
<front-stub>
<title-group>
<article-title>Semivariograms</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-17">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(readODS)
  library(gt)
})
  </code>
  </sec>
</sec>
<sec id="data-nb-17">
  <title>Data</title>
  <sec specific-use="notebook-content">
  <code language="r script">vario &lt;- read_ods(here::here(&quot;./notebooks/semivariogram.ods&quot;)) %&gt;%
  mutate(sill = p_sill + nugget, 
         `C/(C + Co) (%)` = 100 * p_sill/sill,
         `Spatial Class` = case_when(`C/(C + Co) (%)` &gt; 75 ~ &quot;Strong&quot;,
                           `C/(C + Co) (%)`&lt;=75 &amp; `C/(C + Co) (%)` &gt;25 ~ &quot;Moderate&quot;,
                           `C/(C + Co) (%)` &lt; 0.25 ~ &quot;Low&quot;)) %&gt;%
  select(&quot;Property&quot; = &quot;property&quot;, &quot;Kriging Type&quot; = &quot;model&quot;, &quot;Nugget (Co)&quot; = &quot;nugget&quot;, &quot;Sill (Co + C)&quot; = &quot;sill&quot;, &quot;C/(C + Co) (%)&quot;, &quot;Range (m)&quot; = &quot;range&quot;, &quot;site&quot;, &quot;r2&quot;, &quot;Spatial Class&quot;) %&gt;%
  #select(-p_sill) %&gt;%
  mutate(Property = fct_relevel(Property, &quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)) %&gt;%
  arrange(Property)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">
vario |&gt;
  group_by(site) |&gt;
  gt() |&gt;
  fmt_number(decimal = 1) |&gt;
  fmt_number(columns = c(&quot;Range (m)&quot;, &quot;C/(C + Co) (%)&quot;), decimal = 0) |&gt;
  cols_label(r2 = &quot;{{r^2}}&quot;) |&gt;
  tab_footnote(
    footnote = &quot;Models are all isotropic.&quot;,
    locations = cells_column_labels(columns = &quot;Kriging Type&quot;))  |&gt;
  tab_footnote(
    footnote = &quot;Strong spatial dependency (C/(C + Co) % &gt;75); Moderate spatial dependency (C/(C + Co) % between 75 and 25); Low spatial dependency (C/(C + Co) % &lt;25).&quot;,
    locations = cells_column_labels(columns = `Spatial Class`))  |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_options(column_labels.font.weight = &quot;bold&quot;)
  </code>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-18-nb-18">
<front-stub>
<title-group>
<article-title>Soil property mapping</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-18">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(terra)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-18">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script">ag_data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) 

forest_data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) 
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">theme_right &lt;-  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;right&quot;,
        legend.box.spacing = unit(0, &quot;pt&quot;),
        legend.margin=margin(0,0,0,3),
        legend.justification=&quot;left&quot;,
        legend.title = element_text(hjust = 0))

theme_left &lt;-  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;left&quot;,
        legend.text.position = &quot;left&quot;,
        legend.box.spacing = unit(0, &quot;pt&quot;),
        legend.margin=margin(0,3,0,0),
        legend.justification=&quot;right&quot;,
        legend.title = element_text(hjust = 1))

theme_bottom &lt;- theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;,
        legend.text.position = &quot;bottom&quot;,
        legend.box.spacing = unit(0, &quot;pt&quot;),
        legend.margin=margin(3,0,0,0),
        legend.justification=&quot;top&quot;)
  </code>
  </sec>
</sec>
<sec id="agricultural-soil-properties-nb-18">
  <title>Agricultural soil properties</title>
  <sec id="geochemisty-and-colour-nb-18">
    <title>Geochemisty and colour</title>
    <sec specific-use="notebook-content">
    <code language="r script">ag_rast &lt;- rast(ag_data)
crs(x = ag_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

a_col &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = a_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;a*&quot;)), breaks = seq(2.5, 4, 0.5)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

b_col &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = b_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;b*&quot;)), breaks = seq(7, 10, 1)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

c_col &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = c_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;c*&quot;)), breaks = seq(7, 11, 1)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) + 
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

h_col &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = h_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;h*&quot;)), breaks = seq(1.15, 1.25, 0.02)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

x_col &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = x_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;x&quot;)), breaks = seq(18, 26, 2)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 


ca &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = ca)) +
  scale_fill_viridis_c(name = &quot;Ca&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

co &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = co)) +
  scale_fill_viridis_c(name = &quot;Co&quot;, breaks = seq(8, 11, 1)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

cs &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = cs)) +
  scale_fill_viridis_c(name = &quot;Cs&quot;, breaks = seq(0.5, 1.1, 0.2), limits = c(0.4, 1.1)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

fe &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = fe)) +
  scale_fill_viridis_c(name = &quot;Cs&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

li &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = li)) +
  scale_fill_viridis_c(name = &quot;Li&quot;, breaks = seq(14, 20, 2), limits = c(13, 20)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

la &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = la)) +
  scale_fill_viridis_c(name = &quot;La&quot;, breaks = seq(16, 20, 1), limits = c(16, 20)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

nb &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = nb)) +
  scale_fill_viridis_c(name = &quot;Nb&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

ni &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = ni)) +
  scale_fill_viridis_c(name = &quot;Ni&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

rb &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = rb)) +
  scale_fill_viridis_c(name = &quot;Rb&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

sr &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = sr)) +
  scale_fill_viridis_c(name = &quot;Sr&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))
    </code>
    </sec>
  </sec>
  <sec id="grain-size-om-elevation-nb-18">
    <title>Grain size, OM, elevation</title>
    <sec specific-use="notebook-content">
    <code language="r script">dem &lt;- ggplot() +
  tidyterra::geom_spatraster(data = ag_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation&quot;, option = &quot;inferno&quot;, limits = c(309, 312)) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))
# 
# ssa &lt;- ggplot() +
#   tidyterra::geom_spatraster(data = ag_rast, aes(fill = ssa)) +
#   scale_fill_viridis_c(name = &quot;SSA&quot;) +
#   #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
#   theme_minimal(base_size = 12) +
#   theme_right +
#   scale_y_continuous(expand = c(0,0)) +
#   scale_x_continuous(expand = c(0,0))
# 
# organic &lt;- ggplot() +
#   tidyterra::geom_spatraster(data = ag_rast, aes(fill = organic)) +
#   scale_fill_viridis_c(name = &quot;Organic&quot;) +
#   #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
#   theme_minimal(base_size = 12) +
#   theme_left +
#   scale_y_continuous(expand = c(0,0)) +
#   scale_x_continuous(expand = c(0,0))

scale_p &lt;- ggplot() +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;), colour = &quot;white&quot;) +
  theme_void(base_size = 12)+
  ggspatial::annotation_scale(location = &quot;bl&quot;, width_hint = 0.4) +
  ggspatial::annotation_north_arrow(location = &quot;bl&quot;, pad_y  = unit(2, &quot;cm&quot;))
    </code>
    </sec>
    <sec id="cell-fig-ag_map-nb-18" specific-use="notebook-content">
    <code language="r script">
ca + co + cs + fe + li + la + nb + ni + rb + sr + a_col + b_col + c_col + h_col + x_col + dem + scale_p + plot_layout(ncol = 3) 
    </code>
    <fig id="fig-ag_map-nb-18">
      <caption><p>Kriged maps of select colour and geochemical
      properties and elevtion across the agricultural
      site.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="property_maps_files/figure-jats/fig-ag_map-1.png" />
    </fig>
    </sec>
  </sec>
</sec>
<sec id="forest-soil-properties-nb-18">
  <title>Forest soil properties</title>
  <sec id="geochemisty-and-colour-1-nb-18">
    <title>Geochemisty and colour</title>
    <sec specific-use="notebook-content">
    <code language="r script">forest_rast &lt;- rast(forest_data)
crs(x = forest_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

h_col_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = h_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;h*&quot;))) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

x_col_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = x_c)) +
  scale_fill_viridis_c(name = bquote(italic(&quot;x&quot;))) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) + 
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

ca_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = ca)) +
  scale_fill_viridis_c(name = &quot;Ca&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

co_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = co)) +
  scale_fill_viridis_c(name = &quot;Co&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

cs_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = cs)) +
  scale_fill_viridis_c(name = &quot;Cs&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

la_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = la)) +
  scale_fill_viridis_c(name = &quot;La&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

li_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = li)) +
  scale_fill_viridis_c(name = &quot;Li&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

nb_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = nb)) +
  scale_fill_viridis_c(name = &quot;Nb&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

ni_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = ni)) +
  scale_fill_viridis_c(name = &quot;Ni&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 

sr_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = sr)) +
  scale_fill_viridis_c(name = &quot;Sr&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) 
    </code>
    </sec>
  </sec>
  <sec id="grain-size-om-elevation-1-nb-18">
    <title>Grain size, OM, elevation</title>
    <sec specific-use="notebook-content">
    <code language="r script">dem_forest &lt;- ggplot() +
  tidyterra::geom_spatraster(data = forest_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation&quot;, option = &quot;inferno&quot;) +
  #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_minimal(base_size = 12) +
  theme_bottom +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0))

# ssa_forest &lt;- ggplot() +
#   tidyterra::geom_spatraster(data = forest_rast, aes(fill = ssa)) +
#   scale_fill_viridis_c(name = &quot;SSA&quot;) +
#   #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
#   theme_minimal(base_size = 12) +
#   theme_right +
#   scale_y_continuous(expand = c(0,0)) +
#   scale_x_continuous(expand = c(0,0))
# 
# organic_forest &lt;- ggplot() +
#   tidyterra::geom_spatraster(data = forest_rast, aes(fill = organic)) +
#   scale_fill_viridis_c(name = &quot;Organic&quot;) +
#   #geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
#   theme_minimal(base_size = 12) +
#   theme_left +
#   scale_y_continuous(expand = c(0,0)) +
#   scale_x_continuous(expand = c(0,0))

scale_p_forest &lt;- ggplot() +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;), colour = &quot;white&quot;) +
  theme_void(base_size = 12)+
  ggspatial::annotation_scale(location = &quot;bl&quot;, width_hint = 0.3) +
  ggspatial::annotation_north_arrow(location = &quot;bl&quot;, pad_y  = unit(2, &quot;cm&quot;))
    </code>
    </sec>
    <sec id="cell-fig-forest_map-nb-18" specific-use="notebook-content">
    <code language="r script">
ca_forest + co_forest + cs_forest + la_forest + li_forest + nb_forest + ni_forest + sr_forest + h_col_forest + x_col_forest + dem_forest + scale_p_forest +
  plot_layout(ncol = 3) 
    </code>
    <fig id="fig-forest_map-nb-18">
      <caption><p>Kriged map of select colour and geochemical properties
      and elevation across the forested site.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="property_maps_files/figure-jats/fig-forest_map-1.png" />
    </fig>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-19-nb-19">
<front-stub>
<title-group>
<article-title>Chromatic coordinate x (x) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-19">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-19">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;x_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-19">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = x_c)) +
  scale_fill_viridis_c(name = &quot;x&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-19">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-19">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -x_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-19">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-19">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(x_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-19">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(x_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$x_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -x_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = x_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$x_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -x_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.6283935
                    % Var explained: 61.95
                       Test set MSE: 0.7
                    % Var explained: 61.81</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-19">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$x_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.39545 -0.30856  0.05313  0.35896  2.52942 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 10.58460    0.37698   28.08   &lt;2e-16 ***
obs          0.54346    0.01632   33.30   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.6108 on 771 degrees of freedom
Multiple R-squared:  0.5899,    Adjusted R-squared:  0.5893 
F-statistic:  1109 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-19">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-19">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 143.73654     1573.2571                elevation
3 122.45133      791.0423       saga_wetness_index
4  50.12798      355.8947           catchment_area
5  45.10913      352.2350  relative_slope_position
6  67.88313      350.3272 channel_network_distance
2  25.22863      202.4648        profile_curvature
1  13.76394      165.8744           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-19">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 143.73654     1573.2571                elevation
3 122.45133      791.0423       saga_wetness_index
6  67.88313      350.3272 channel_network_distance
4  50.12798      355.8947           catchment_area
5  45.10913      352.2350  relative_slope_position
2  25.22863      202.4648        profile_curvature
1  13.76394      165.8744           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-19">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="x_col_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-19">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;x_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;x_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-20-nb-20">
<front-stub>
<title-group>
<article-title>Rubidium (Rb) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-20">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-20">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;rb&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-20">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = rb)) +
  scale_fill_viridis_c(name = &quot;Rb&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Rb_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-20">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-20">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -rb)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-20">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-20">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(rb ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Rb_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-20">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(rb ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$rb,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -rb))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = rb ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$rb, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -rb)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.7334208
                    % Var explained: 95.26
                       Test set MSE: 0.64
                    % Var explained: 96.06</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Rb_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-20">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$rb)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
    Min      1Q  Median      3Q     Max 
-3.5550 -0.3627  0.0492  0.4433  3.3664 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 0.891148   0.150380   5.926 4.68e-09 ***
obs         0.947447   0.008139 116.403  &lt; 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.8672 on 771 degrees of freedom
Multiple R-squared:  0.9462,    Adjusted R-squared:  0.9461 
F-statistic: 1.355e+04 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Rb_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-20">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-20">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 423.94745    33399.0274                elevation
3  88.62960     1086.2320       saga_wetness_index
6  53.56913      412.8100 channel_network_distance
5  40.27015      367.0206  relative_slope_position
4  39.04415      357.9539           catchment_area
2  22.09730      274.0529        profile_curvature
1  10.81887      213.1812           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-20">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 423.94745    33399.0274                elevation
3  88.62960     1086.2320       saga_wetness_index
6  53.56913      412.8100 channel_network_distance
5  40.27015      367.0206  relative_slope_position
4  39.04415      357.9539           catchment_area
2  22.09730      274.0529        profile_curvature
1  10.81887      213.1812           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-20">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Rb_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-20">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Rb&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Rb&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-21-nb-21">
<front-stub>
<title-group>
<article-title>Nickel (Ni) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-21">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-21">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;ni&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-21">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = ni)) +
  scale_fill_viridis_c(name = &quot;Ni&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-21">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-21">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -ni)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-21">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-21">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(ni ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-21">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(ni ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$ni,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -ni))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = ni ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$ni, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -ni)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.3382089
                    % Var explained: 93.12
                       Test set MSE: 0.33
                    % Var explained: 93.69</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-21">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$ni)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.34093 -0.27905 -0.05581  0.20593  3.04222 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 2.416376   0.274444   8.805   &lt;2e-16 ***
obs         0.919600   0.009176 100.218   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.5572 on 771 degrees of freedom
Multiple R-squared:  0.9287,    Adjusted R-squared:  0.9286 
F-statistic: 1.004e+04 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-21">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-21">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 357.00744    9503.59795                elevation
3 156.19691     956.46701       saga_wetness_index
6 106.37618     391.69942 channel_network_distance
5  48.44527     201.98926  relative_slope_position
2  30.28675     155.10546        profile_curvature
4  34.86870     145.61204           catchment_area
1  19.60779      98.83987           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-21">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 357.00744    9503.59795                elevation
3 156.19691     956.46701       saga_wetness_index
6 106.37618     391.69942 channel_network_distance
5  48.44527     201.98926  relative_slope_position
4  34.86870     145.61204           catchment_area
2  30.28675     155.10546        profile_curvature
1  19.60779      98.83987           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-21">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Ni_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-21">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Ni&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Ni&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-22-nb-22">
<front-stub>
<title-group>
<article-title>Lanthanum (La) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-22">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-22">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;la&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-22">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = la)) +
  scale_fill_viridis_c(name = &quot;La&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-22">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-22">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -la)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-22">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-22">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(la ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-22">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(la ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$la,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -la))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = la ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$la, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -la)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 1.40099
                    % Var explained: 43.26
                       Test set MSE: 1.32
                    % Var explained: 47.51</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-22">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$la)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.06927 -0.48903 -0.02877  0.44268  2.12511 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  8.42990    0.23025   36.61   &lt;2e-16 ***
obs          0.43658    0.01525   28.64   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.6948 on 882 degrees of freedom
Multiple R-squared:  0.4818,    Adjusted R-squared:  0.4812 
F-statistic: 820.1 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="La_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-22">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-22">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 140.81498     1806.2992                elevation
6  75.13893     1112.0347 channel_network_distance
5  86.43222     1036.0908  relative_slope_position
4  47.40859      676.4947           catchment_area
2  38.45028      653.8517        profile_curvature
3  47.85602      653.2578       saga_wetness_index
1  14.52561      525.7884           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-22">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 140.81498     1806.2992                elevation
5  86.43222     1036.0908  relative_slope_position
6  75.13893     1112.0347 channel_network_distance
3  47.85602      653.2578       saga_wetness_index
4  47.40859      676.4947           catchment_area
2  38.45028      653.8517        profile_curvature
1  14.52561      525.7884           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-22">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="La_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-22">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;La&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;La&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-23-nb-23">
<front-stub>
<title-group>
<article-title>Niobium (Nb) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-23">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-23">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;nb&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-23">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = nb)) +
  scale_fill_viridis_c(name = &quot;Nb&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-23">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-23">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -nb)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-23">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-23">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(nb ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-23">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(nb ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$nb,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -nb))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = nb ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$nb, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -nb)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.0005667455
                    % Var explained: 54.96
                       Test set MSE: 0
                    % Var explained: 55.94</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-23">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$nb)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.049559 -0.010780 -0.000114  0.010371  0.075210 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 0.164456   0.005889   27.93   &lt;2e-16 ***
obs         0.551839   0.015821   34.88   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.01685 on 882 degrees of freedom
Multiple R-squared:  0.5797,    Adjusted R-squared:  0.5792 
F-statistic:  1217 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-23">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-23">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 154.17676     1.1237287                elevation
3  82.94224     0.7807375       saga_wetness_index
2  55.04591     0.3543654        profile_curvature
4  51.70270     0.3131254           catchment_area
6  51.40848     0.2958109 channel_network_distance
5  37.78980     0.2533458  relative_slope_position
1  21.42043     0.1889778           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-23">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 154.17676     1.1237287                elevation
3  82.94224     0.7807375       saga_wetness_index
2  55.04591     0.3543654        profile_curvature
4  51.70270     0.3131254           catchment_area
6  51.40848     0.2958109 channel_network_distance
5  37.78980     0.2533458  relative_slope_position
1  21.42043     0.1889778           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-23">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Nb_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-23">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;Nb&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;Nb&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-24-nb-24">
<front-stub>
<title-group>
<article-title>Cesium (Cs) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-24">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-24">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;cs&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-24">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = cs)) +
  scale_fill_viridis_c(name = &quot;Cs&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-24">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-24">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -cs)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-24">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-24">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(cs ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-24">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(cs ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$cs,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -cs))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = cs ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$cs, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -cs)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.002164175
                    % Var explained: 85.66
                       Test set MSE: 0
                    % Var explained: 86.36</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-24">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$cs)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.136888 -0.023571 -0.001203  0.023280  0.114659 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.14517    0.00896   16.20   &lt;2e-16 ***
obs          0.80478    0.01218   66.09   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.04115 on 771 degrees of freedom
Multiple R-squared:   0.85, Adjusted R-squared:  0.8498 
F-statistic:  4368 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-24">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-24">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 184.41709     21.242936                elevation
3  39.00635      7.190443       saga_wetness_index
5  43.21087      1.836686  relative_slope_position
6  63.05166      1.660968 channel_network_distance
4  33.76443      1.089485           catchment_area
2  33.28693      1.063535        profile_curvature
1  29.21036      0.817769           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-24">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 184.41709     21.242936                elevation
6  63.05166      1.660968 channel_network_distance
5  43.21087      1.836686  relative_slope_position
3  39.00635      7.190443       saga_wetness_index
4  33.76443      1.089485           catchment_area
2  33.28693      1.063535        profile_curvature
1  29.21036      0.817769           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-24">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Cs_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-24">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Cs&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Cs&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
        rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-25-nb-25">
<front-stub>
<title-group>
<article-title>Random Forest summary</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-25">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(patchwork)
  library(gt)
})
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">imp_data &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) %&gt;%
  rename(&quot;Terrain Attribute&quot; = &quot;Var.Names&quot;) %&gt;%
  mutate(`Terrain Attribute` = fct_recode(`Terrain Attribute`, &quot;Elevation&quot; = &quot;elevation&quot;, 
                                          &quot;Catchment Area&quot; = &quot;catchment_area&quot;,
                                          &quot;Plan Curvature&quot; = &quot;plan_curvature&quot;,
                                          &quot;Profile Curvature&quot; = &quot;profile_curvature&quot;,
                                          &quot;Rel. Slope Position&quot; = &quot;relative_slope_position&quot;,
                                          &quot;SAGA Wetness Index&quot; = &quot;saga_wetness_index&quot;,
                                          &quot;Vert. Dist. Channel&quot; = &quot;channel_network_distance&quot;)) %&gt;%
  mutate(`Terrain Attribute` = fct_relevel(`Terrain Attribute`, &quot;Elevation&quot;, &quot;SAGA Wetness Index&quot;, &quot;Rel. Slope Position&quot;, &quot;Vert. Dist. Channel&quot;,&quot;Catchment Area&quot;, &quot;Profile Curvature&quot;, &quot;Plan Curvature&quot;)) %&gt;%
  mutate(property = fct_recode(property, &quot;italic(`a*`)&quot; = &quot;a_col&quot;, &quot;italic(`b*`)&quot; = &quot;b_col&quot;, &quot;italic(`c*`)&quot; = &quot;c_col&quot;, &quot;italic(`h*`)&quot; = &quot;h_col&quot;, &quot;italic(`x`)&quot; = &quot;x_col&quot;)) %&gt;%
  mutate(property = fct_relevel(property, &quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;italic(`a*`)&quot;, &quot;italic(`b*`)&quot;, &quot;italic(`c*`)&quot;, &quot;italic(`h*`)&quot;, &quot;italic(`x`)&quot;))
  </code>
  <boxed-text>
    <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
  </boxed-text>
  <code language="r script">avg &lt;- imp_data %&gt;%
  group_by(`Terrain Attribute`) %&gt;%
  summarise(total = mean(MSE_rank)) %&gt;%
  arrange(total) |&gt;
  mutate(MSE_rank = 1:n(),
         property = &quot;Overall&quot;)

avg_site&lt;- imp_data %&gt;%
  group_by(`Terrain Attribute`, site) %&gt;%
  summarise(total = mean(MSE_rank)) %&gt;%
  group_by(site) %&gt;%
  arrange(total) |&gt;
  mutate(MSE_rank = 1:n(),
         property = site)
  </code>
  <boxed-text>
    <preformat>`summarise()` has grouped output by 'Terrain Attribute'. You can override using
the `.groups` argument.</preformat>
  </boxed-text>
  <code language="r script">overall &lt;- avg_site %&gt;%
  bind_rows(avg) %&gt;%
  mutate(facet = &quot;Average&quot;)

g1 &lt;- ggplot(data = imp_data, aes(x = as.factor(MSE_rank), y = property, fill = `Terrain Attribute`)) + 
  geom_tile() +
  theme_bw() +
  viridis::scale_fill_viridis(discrete = TRUE) +
  theme(axis.title.y = element_blank()) +
  labs(x = &quot;Importance Ranking \n(% Increase in Mean Squared Error)&quot;) +
  scale_y_discrete(labels = scales::label_parse(), limits=rev, expand = c(0,0)) +
  scale_x_discrete(expand = c(0,0)) +
  facet_wrap(~site, ncol = 1, scales = &quot;free_y&quot;, strip.position = &quot;right&quot;)

g2 &lt;- ggplot(data = overall, aes(x = as.factor(MSE_rank), y = property, fill = `Terrain Attribute`)) + 
  geom_tile() +
  theme_bw() +
  scale_y_discrete(expand = c(0,0)) +
  scale_x_discrete(expand = c(0,0)) +
  viridis::scale_fill_viridis(discrete = TRUE) +
  theme(axis.text.x = element_blank(), axis.title.x = element_blank(), axis.ticks.x = element_blank(),
        axis.title.y = element_blank())  +
  facet_wrap(~facet, ncol = 1, scales = &quot;free_y&quot;, strip.position = &quot;right&quot;)
  </code>
  </sec>
  <sec id="cell-fig-RF-results-nb-25" specific-use="notebook-content">
  <code language="r script">
g2 + g1 + plot_layout(ncol = 1, heights = c(2, 10), guides = &quot;collect&quot;) &amp; theme(legend.position = 'right')
  </code>
  <fig id="fig-RF-results-nb-25">
    <caption><p>Heat map of the Random Forest regresssion results
    showing the ranking of the importance of terrain attributes (based
    on % increase in Mean Squared Error) in explaining the spatial
    variabilty of selected colour and geochemical properties within the
    agricultural and forested sites. Top panel shows an average ranking
    for each site and across both sites.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="RF_summary_files/figure-jats/fig-RF-results-1.png" />
  </fig>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">m_performance &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
  mutate(property = fct_recode(property, &quot;a*&quot; = &quot;a_col&quot;, &quot;b*&quot; = &quot;b_col&quot;, &quot;c*&quot; = &quot;c_col&quot;, &quot;h*&quot; = &quot;h_col&quot;, &quot;x&quot; = &quot;x_col&quot;)) |&gt;
  mutate(property = fct_relevel(property, &quot;Ca&quot;, &quot;Co&quot;, &quot;Cs&quot;, &quot;Fe&quot;, &quot;Li&quot;, &quot;La&quot;, &quot;Nb&quot;, &quot;Ni&quot;, &quot;Rb&quot;, &quot;Sr&quot;, &quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;)) |&gt;
  mutate(Var_exp = Var_exp *100,
         Var_exp_test = Var_exp_test *100) |&gt;
  arrange(property) 
  </code>
  <boxed-text>
    <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">
m_performance |&gt;
  group_by(site) |&gt;
  gt() |&gt;
  cols_move_to_start(columns = property) |&gt;
  # tab_spanner(label = &quot;Training&quot;, columns = c(&quot;MSE&quot;, &quot;Var_exp&quot;)) |&gt;
  # tab_spanner(label = &quot;Validation&quot;, columns = c(&quot;MSE_test&quot;, &quot;Var_exp_test&quot;)) |&gt;
  # tab_spanner(label = &quot;Testing&quot;, columns = &quot;R2&quot;) |&gt;
  fmt_number(columns = c(&quot;MSE_test&quot;, &quot;MSE&quot;), decimal = 3) |&gt;
  fmt_number(columns = c(&quot;Var_exp_test&quot;, &quot;Var_exp&quot;), decimal = 1) |&gt;
  fmt_number(columns = c(&quot;R2&quot;), decimal = 2) |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;center&quot;), locations =  cells_row_groups()) |&gt;
  tab_style(style =  cell_text(align = &quot;left&quot;), locations =  cells_body()) |&gt;
  tab_style(style =  cell_text(weight = &quot;bold&quot;, align = &quot;left&quot;), locations =  cells_column_labels()) |&gt;
  cols_label(Var_exp = md(&quot;% Var&lt;br/&gt;Training&quot;), Var_exp_test = md(&quot;% Var&lt;br/&gt;Validation&quot;), MSE_test = md(&quot;MSE&lt;br/&gt;Testing&quot;), MSE = md(&quot;MSE&lt;br/&gt;Training&quot;), R2 = md(&quot;{{R^2}}&lt;br/&gt;Testing&quot;), property = &quot;Property&quot;) |&gt;
  row_group_order(groups = c(&quot;Agriculture&quot;, &quot;Forest&quot;))  |&gt;
  tab_style(
    style = list(cell_text(style = &quot;italic&quot;)),
    locations = cells_body(
      columns = property,
      rows = property %in% c(&quot;a*&quot;, &quot;b*&quot;, &quot;c*&quot;, &quot;h*&quot;, &quot;x&quot;))) |&gt;
    tab_footnote(
    footnote = &quot;Mean square error&quot;,
    locations = cells_column_labels(columns = c(&quot;MSE_test&quot;, &quot;MSE&quot;))) |&gt;
  tab_footnote(
    footnote = &quot;Percent variance explained&quot;,
    locations = cells_column_labels(columns = c(&quot;Var_exp&quot;, &quot;Var_exp_test&quot;)))
  </code>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-26-nb-26">
<front-stub>
<title-group>
<article-title>Iron (Fe) Agriculture site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-26">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-26">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;fe&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-26">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = fe)) +
  scale_fill_viridis_c(name = &quot;Fe&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Fe_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-26">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-26">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -fe)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-26">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-26">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(fe ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Fe_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-26">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(fe ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$fe,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -fe))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = fe ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$fe, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -fe)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.001273
                    % Var explained: 69.64
                       Test set MSE: 0
                    % Var explained: 70.88</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Fe_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-26">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$fe)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.104237 -0.017188  0.000049  0.015963  0.099435 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.71739    0.02887   24.85   &lt;2e-16 ***
obs          0.62709    0.01505   41.66   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02678 on 771 degrees of freedom
Multiple R-squared:  0.6924,    Adjusted R-squared:  0.692 
F-statistic:  1736 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Fe_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-26">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-26">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 147.05058     3.1746676                elevation
3  95.79689     2.8008702       saga_wetness_index
2  41.35200     0.9395512        profile_curvature
5  44.27198     0.8626849  relative_slope_position
6  53.24251     0.8405542 channel_network_distance
4  37.51306     0.5578755           catchment_area
1  24.58090     0.4634563           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-26">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 147.05058     3.1746676                elevation
3  95.79689     2.8008702       saga_wetness_index
6  53.24251     0.8405542 channel_network_distance
5  44.27198     0.8626849  relative_slope_position
2  41.35200     0.9395512        profile_curvature
4  37.51306     0.5578755           catchment_area
1  24.58090     0.4634563           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-26">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Fe_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-26">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Fe&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Fe&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-27-nb-27">
<front-stub>
<title-group>
<article-title>Calcium (Ca) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-27">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-27">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;ca&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-27">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = ca)) +
  scale_fill_viridis_c(name = &quot;Ca&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-27">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-27">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -ca)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-27">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-27">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(ca ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-27">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(ca ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$ca,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -ca))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = ca ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$ca, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -ca)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 0.3744649
                    % Var explained: 91.65
                       Test set MSE: 0.36
                    % Var explained: 91.82</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-27">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$ca)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-2.32068 -0.31060 -0.05891  0.23608  2.54493 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.41798    0.04678   8.935   &lt;2e-16 ***
obs          0.90147    0.01023  88.161   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.5856 on 771 degrees of freedom
Multiple R-squared:  0.9098,    Adjusted R-squared:  0.9096 
F-statistic:  7772 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-27">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-27">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 201.16526     7145.1265                elevation
3  47.53396     2280.4896       saga_wetness_index
5  34.43160      316.6025  relative_slope_position
6  36.00732      203.7049 channel_network_distance
4  30.55626      188.5582           catchment_area
2  24.26921      163.3890        profile_curvature
1  18.47777      139.3487           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-27">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 201.16526     7145.1265                elevation
3  47.53396     2280.4896       saga_wetness_index
6  36.00732      203.7049 channel_network_distance
5  34.43160      316.6025  relative_slope_position
4  30.55626      188.5582           catchment_area
2  24.26921      163.3890        profile_curvature
1  18.47777      139.3487           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-27">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Ca_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-27">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Ca&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;))
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared,
       site = &quot;Agriculture&quot;,
       property = &quot;Ca&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script"> write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-28-nb-28">
<front-stub>
<title-group>
<article-title>Research Site Locations</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec specific-use="notebook-content">
<code language="r script">suppressPackageStartupMessages({library(tidyverse)
library(ggspatial)
library(sf)
library(rnaturalearth)
library(ggrepel)
library(raster)
library(patchwork)
})
</code>
</sec>
<sec id="bounding-box-of-region-and-sites-nb-28">
  <title>Bounding box of region and sites</title>
  <sec specific-use="notebook-content">
  <code language="r script">box = c(xmin = 455200, ymin = 5616000, xmax = 466200, ymax = 5626500)

ag_site &lt;- data.frame(x = c(464124, 463318),
                         y = c(5622932, 5622121)) %&gt;% 
  st_as_sf(coords = c(&quot;x&quot;, &quot;y&quot;), crs = 3158) %&gt;% 
  st_bbox() %&gt;% 
  st_as_sfc()

forest_site &lt;- data.frame(x = c(460822, 460189),
                         y = c(5619887, 5619206)) %&gt;% 
  st_as_sf(coords = c(&quot;x&quot;, &quot;y&quot;), crs = 3158) %&gt;% 
  st_bbox() %&gt;% 
  st_as_sfc()

locations &lt;- data.frame(name = c(&quot;Forest&quot;, &quot;Agriculture&quot;), 
                        long = c(-99.560041, -99.513808), 
                        lat = c( 50.726076,  50.752731)) %&gt;%
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326)

  #st_transform(crs = st_crs(land))

cities &lt;- data.frame(name = &quot;McCreary&quot;, long = -99.493, lat = 50.775) %&gt;%
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) 
  </code>
  </sec>
</sec>
<sec id="land-use-data-of-region-nb-28">
  <title>Land use data of region</title>
  <sec id="get-data-nb-28">
    <title>Get data</title>
    <sec specific-use="notebook-content">
    <code language="r script">minnedosa_data &lt;- &quot;lcv_minnedosa_2004_2006_shp&quot;
if (file.exists(minnedosa_data)) {
  print(&quot;The data already exists!&quot;)
} else {
  download.file(&quot;https://mli.gov.mb.ca/landuse/shp_zip_files/lcv_minnedosa_2004_2006_shp.zip&quot;, 
                destfile = &quot;lcv_minnedosa_2004_2006_shp.zip&quot;)
  unzip(&quot;lcv_minnedosa_2004_2006_shp.zip&quot;, exdir = &quot;lcv_minnedosa_2004_2006_shp&quot;)
}
    </code>
    <boxed-text>
      <preformat>[1] &quot;The data already exists!&quot;</preformat>
    </boxed-text>
    </sec>
  </sec>
  <sec id="summarize-and-crop-nb-28">
    <title>Summarize and crop</title>
    <sec specific-use="notebook-content">
    <code language="r script">land &lt;- st_read(here::here(&quot;./notebooks/lcv_minnedosa_2004_2006_shp/lcv_minnedosa_2004_2006.shp&quot;)) %&gt;%
  st_crop(st_bbox(box)) %&gt;%
  st_transform(4269) %&gt;%
  mutate(Land_use = recode(CLASSNAME, &quot;Agricultural Field&quot; = &quot;Agriculture&quot;, &quot;Agri - Forage Field&quot; = &quot;Agriculture&quot;, &quot;Water Body&quot; = &quot;Water&quot;, &quot;Wetland - Treed Bog&quot; = &quot;Wetland&quot;, &quot;Wetland - Marsh&quot; = &quot;Wetland&quot;, &quot;Decidious Forest&quot; = &quot;Forest&quot;, &quot;Open Decidious Forest&quot; = &quot;Forest&quot;, &quot;Mixedwood Forest&quot; = &quot;Forest&quot;, &quot;Forest Cut Blocks&quot; = &quot;Forest&quot;, &quot;Coniferous Forest&quot; = &quot;Forest&quot;,&quot;Roads Trails Rail Lines&quot; = &quot;Other&quot;, &quot;Sand and Gravel&quot; = &quot;Other&quot;, &quot;Cultural Features&quot; = &quot;Other&quot;, &quot;Range and Grassland&quot; = &quot;Forage&quot;)) %&gt;%
  st_make_valid() %&gt;%
  st_simplify(dTolerance = 0.0001, preserveTopology = F) %&gt;%
  group_by(Land_use) %&gt;%
  summarise(do_union = TRUE) %&gt;%
  mutate(Land_use = factor(Land_use, levels=c(&quot;Agriculture&quot;, &quot;Forest&quot;, &quot;Forage&quot;, &quot;Water&quot;, &quot;Wetland&quot;, &quot;Other&quot;)))
    </code>
    <boxed-text>
      <preformat>Reading layer `lcv_minnedosa_2004_2006' from data source 
  `/home/alex/Dropbox/Graduate students/Maria/Manuscript 2/spatial-variability-soil-manuscript/notebooks/lcv_minnedosa_2004_2006_shp/lcv_minnedosa_2004_2006.shp' 
  using driver `ESRI Shapefile'
Simple feature collection with 160653 features and 5 fields
Geometry type: POLYGON
Dimension:     XY
Bounding box:  xmin: 429972 ymin: 5542070 xmax: 549972 ymax: 5656880
Projected CRS: UTM</preformat>
    </boxed-text>
    <boxed-text>
      <preformat>Warning: attribute variables are assumed to be spatially constant throughout
all geometries</preformat>
    </boxed-text>
    <boxed-text>
      <preformat>Warning in st_simplify.sfc(st_geometry(x), preserveTopology, dTolerance):
argument preserveTopology cannot be set to FALSE when working with ellipsoidal
coordinates since the algorithm behind st_simplify always preserves topological
relationships</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="dem-data-nb-28">
  <title>DEM data</title>
  <p>Freely available from
  <ext-link ext-link-type="uri" xlink:href="https://maps.canada.ca/czs/index-en.html">https://maps.canada.ca/czs/index-en.html</ext-link>
  Data type is Elevation. You provide the clipping area and then submit
  the data request</p>
  <sec specific-use="notebook-content">
  <code language="r script">topo &lt;- raster::aggregate(raster(here::here(&quot;./notebooks/DEM.tif&quot;)), fact = 3) %&gt;%
  crop(extent(land)) %&gt;%
  as.data.frame(xy = T)
  </code>
  <boxed-text>
    <preformat>Warning in new_CppObject_xp(fields$.module, fields$.pointer, ...): GDAL Message
1: CRS EPSG:4140 is deprecated. Its non-deprecated replacement EPSG:4617 will
be used instead. To use the original CRS, set the OSR_USE_NON_DEPRECATED
configuration option to NO.</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="hydro-data-nb-28">
  <title>Hydro data</title>
  <p>Freely available from
  <ext-link ext-link-type="uri" xlink:href="https://maps.canada.ca/czs/index-en.html">https://maps.canada.ca/czs/index-en.html</ext-link>
  Data type is the CanVec. You provide the clipping area and then submit
  the data request</p>
  <sec specific-use="notebook-content">
  <code language="r script">water_linear &lt;- st_read(here::here(&quot;./notebooks/canvec_190514_89905/water_linear_flow_1.shp&quot;)) %&gt;%
  st_transform(crs = st_crs(land)) %&gt;%
  st_make_valid() %&gt;%
  st_crop(st_bbox(land))
  </code>
  <boxed-text>
    <preformat>Reading layer `water_linear_flow_1' from data source 
  `/home/alex/Dropbox/Graduate students/Maria/Manuscript 2/spatial-variability-soil-manuscript/notebooks/canvec_190514_89905/water_linear_flow_1.shp' 
  using driver `ESRI Shapefile'
Simple feature collection with 5160 features and 44 fields
Geometry type: LINESTRING
Dimension:     XY
Bounding box:  xmin: -99.9082 ymin: 50.54151 xmax: -99.12695 ymax: 51.16603
Geodetic CRS:  GCS_North_American_1983_CSRS98</preformat>
  </boxed-text>
  <boxed-text>
    <preformat>Warning: attribute variables are assumed to be spatially constant throughout
all geometries</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="canada-wide-map-nb-28">
  <title>Canada wide map</title>
  <sec specific-use="notebook-content">
  <code language="r script">canada &lt;- ne_states(country = &quot;Canada&quot;, returnclass = &quot;sf&quot;) %&gt;%
  st_transform(crs = 3348)

locations2 &lt;- data.frame(name = c(&quot;Center&quot;), long = c(-99.989671), lat = c(50.742554)) %&gt;%
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = st_crs(land))
  </code>
  </sec>
</sec>
<sec id="maps-nb-28">
  <title>Maps</title>
  <sec id="canada-nb-28">
    <title>Canada</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot() +
  theme_bw() +
  layer_spatial(canada, fill = &quot;white&quot;) +
  layer_spatial(locations2, shape = 23, colour = &quot;red&quot;, fill = &quot;red&quot;, size = 2) +
  annotation_scale(location = &quot;bl&quot;,
                   height = unit(0.05, &quot;cm&quot;)) +
  annotation_north_arrow(location = &quot;br&quot;, 
                         height = unit(0.5, &quot;cm&quot;),
                         width = unit(0.5, &quot;cm&quot;)) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        plot.margin = unit(c(0,0,0,0), &quot;mm&quot;))
    </code>
    </sec>
  </sec>
  <sec id="land-use-nb-28">
    <title>Land use</title>
    <sec specific-use="notebook-content">
    <code language="r script">p2 &lt;- ggplot() +
  theme_bw(base_size = 10) +
  geom_sf(data = land, aes(fill = Land_use)) +
  scale_fill_manual(values=c(&quot;#458B00&quot;, &quot;#006400&quot;, &quot;#CDAD00&quot;, &quot;#009ACD&quot;, &quot;#CDB38B&quot;,  &quot;#C1CDCD&quot;), name = &quot;Land use&quot;) +
  geom_sf(data = water_linear, colour = &quot;#009ACD&quot;, lwd = 0.5) +
  geom_label_repel(
    data = head(locations),
    aes(label = name, geometry = geometry),
    stat = &quot;sf_coordinates&quot;,
    min.segment.length = 0,
    nudge_y = 0.01, 
    size = 3) +
  geom_label_repel(
    data = head(locations),
    aes(label = name, geometry = geometry),
    stat = &quot;sf_coordinates&quot;,
    min.segment.length = 0,
    nudge_y = 0.01, 
    size = 3) +
  geom_sf(data = ag_site, fill = NA, colour = &quot;red&quot;, lwd = 1) +
  geom_sf(data = forest_site, fill = NA, colour = &quot;red&quot;, lwd = 1) +
  geom_label_repel(
    data = head(cities),
    aes(label = name, geometry = geometry),
    stat = &quot;sf_coordinates&quot;,
    min.segment.length = 0,
    nudge_y = 0.01,
    size = 2) +
  annotation_scale(location = &quot;bl&quot;,
                   height = unit(0.05, &quot;cm&quot;)) +
  annotation_north_arrow(location = &quot;br&quot;, 
                         height = unit(0.5, &quot;cm&quot;),
                         width = unit(0.5, &quot;cm&quot;)) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        plot.margin = unit(c(0,0,0,0), &quot;mm&quot;),
        legend.position = &quot;bottom&quot;,
        legend.title = element_blank(),
        legend.key.size = unit(5, 'mm'),
        legend.box.spacing = unit(0, &quot;pt&quot;)) +
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0))
    </code>
    </sec>
  </sec>
  <sec id="dem-nb-28">
    <title>DEM</title>
    <sec specific-use="notebook-content">
    <code language="r script">p3 &lt;- ggplot() +
  theme_bw(base_size = 10) +
  geom_raster(data = topo , aes(x = x, y = y, fill = DEM)) + 
  scale_fill_viridis_c(name = &quot;Elev. (m)  &quot;, limits = c(282, 800), breaks = c(300, 550, 800)) +
  geom_label_repel(
    data = head(locations),
    aes(label = name, geometry = geometry),
    stat = &quot;sf_coordinates&quot;,
    min.segment.length = 0,
    nudge_y = 0.01,
    size = 3) +
  geom_sf(data = ag_site, fill = NA, colour = &quot;red&quot;, lwd = 1) +
  geom_sf(data = forest_site, fill = NA, colour = &quot;red&quot;, lwd = 1) +
  geom_label_repel(
    data = head(cities),
    aes(label = name, geometry = geometry),
    stat = &quot;sf_coordinates&quot;,
    min.segment.length = 0,
    nudge_y = 0.01,
    size = 3) +
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  annotation_scale(location = &quot;bl&quot;,
                   height = unit(0.05, &quot;cm&quot;)) +
  annotation_north_arrow(location = &quot;br&quot;, 
                         height = unit(0.5, &quot;cm&quot;),
                         width = unit(0.5, &quot;cm&quot;)) +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        plot.margin = unit(c(0,0,0,0), &quot;mm&quot;),
        legend.position = &quot;bottom&quot;,
        legend.box.spacing = unit(0, &quot;pt&quot;)) 
    </code>
    </sec>
    <sec id="cell-fig-location_map-nb-28" specific-use="notebook-content">
    <code language="r script">p6 &lt;- p1 + guide_area() + p2 + p3 + plot_layout(ncol = 2, guides = &quot;collect&quot;) 
p6
    </code>
    <boxed-text>
      <preformat>Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
give correct results for longitude/latitude data
Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
give correct results for longitude/latitude data
Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
give correct results for longitude/latitude data
Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
give correct results for longitude/latitude data
Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
give correct results for longitude/latitude data</preformat>
    </boxed-text>
    <code language="r script">#ggsave(filename = &quot;Figures/Maps.png&quot;, plot = p6, height = 80*1.5, width = 100*1.5, units = &quot;mm&quot;, dpi = 800)
    </code>
    <fig id="fig-location_map-nb-28">
      <caption><p>Map showing the location of the study sites within
      Canada, and the regional land use and topography.</p></caption>
      <graphic mimetype="image" mime-subtype="png" xlink:href="location_map_files/figure-jats/fig-location_map-1.png" />
    </fig>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-29-nb-29">
<front-stub>
<title-group>
<article-title>Strontium (Sr) Agriculture site
RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-29">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-29">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;sr&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-29">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = sr)) +
  scale_fill_viridis_c(name = &quot;Sr&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-29">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-29">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -sr)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-29">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-29">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(sr ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 4</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-29">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(sr ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$sr,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -sr))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = sr ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$sr, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -sr)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 4

          Mean of squared residuals: 97.22097
                    % Var explained: 93.51
                       Test set MSE: 93.97
                    % Var explained: 93.63</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-29">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$sr)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
    Min      1Q  Median      3Q     Max 
-37.331  -5.036  -1.171   4.032  47.715 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept) 8.333872   0.917856    9.08   &lt;2e-16 ***
obs         0.911612   0.009141   99.73   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 9.716 on 771 degrees of freedom
Multiple R-squared:  0.9281,    Adjusted R-squared:  0.928 
F-statistic:  9947 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-29">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-29">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 198.81840    2418489.39                elevation
3  67.29258     778633.41       saga_wetness_index
5  25.49412     102448.14  relative_slope_position
6  32.75712      59631.26 channel_network_distance
4  32.29093      52768.71           catchment_area
2  26.13513      44719.59        profile_curvature
1  21.94200      36705.16           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-29">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 198.81840    2418489.39                elevation
3  67.29258     778633.41       saga_wetness_index
6  32.75712      59631.26 channel_network_distance
4  32.29093      52768.71           catchment_area
2  26.13513      44719.59        profile_curvature
5  25.49412     102448.14  relative_slope_position
1  21.94200      36705.16           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-29">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="Sr_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-29">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;Sr&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;Sr&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-30-nb-30">
<front-stub>
<title-group>
<article-title>Chromatic coordinate opponent blue–yellow scales (b*)
Agriculture site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-30">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-30">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/ag_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;b_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-30">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = b_c)) +
  scale_fill_viridis_c(name = &quot;b*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Agriculture&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="b_c_Ag_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-30">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-30">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -b_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( elevation ~ profile_curvature ):  0.002419244 
max correlation ( elevation ~ saga_wetness_index ):  -0.8977745 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.350442
2        profile_curvature 1.315861
3       saga_wetness_index 5.372984
4           catchment_area 1.240758
5  relative_slope_position 2.262207
6 channel_network_distance 1.811908
7                elevation 5.545539</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-30">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-30">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(b_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="b_c_Ag_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-30">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(b_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$b_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -b_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = b_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$b_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -b_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.1364956
                    % Var explained: 72.52
                       Test set MSE: 0.12
                    % Var explained: 75.28</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="b_c_Ag_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-30">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$b_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.25615 -0.17162  0.03358  0.19068  0.96689 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  3.11750    0.12591   24.76   &lt;2e-16 ***
obs          0.64397    0.01443   44.63   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2886 on 771 degrees of freedom
Multiple R-squared:  0.7209,    Adjusted R-squared:  0.7206 
F-statistic:  1992 on 1 and 771 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">#caret::postResample(test_plot$pred, test_plot$obs)['RMSE']^2

ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="b_c_Ag_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-30">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-30">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 151.02801     476.70392                elevation
3  94.52376     191.73436       saga_wetness_index
5  80.93456     149.42096  relative_slope_position
2  68.62949     124.34641        profile_curvature
6  59.07950      99.39449 channel_network_distance
4  44.41701      65.07768           catchment_area
1  18.33322      41.25086           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-30">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 151.02801     476.70392                elevation
3  94.52376     191.73436       saga_wetness_index
5  80.93456     149.42096  relative_slope_position
2  68.62949     124.34641        profile_curvature
6  59.07950      99.39449 channel_network_distance
4  44.41701      65.07768           catchment_area
1  18.33322      41.25086           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-30">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="b_c_Ag_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-30">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Agriculture&quot;,
        property = &quot;b_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Agriculture&quot;,
       property = &quot;b_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;)) 
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>
<sub-article article-type="notebook" id="nb-31-nb-31">
<front-stub>
<title-group>
<article-title>CIE chroma (h*) Forest site RF_Regression</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<name>
<surname>Koiter</surname>
<given-names>Alex</given-names>
</name>
<string-name>Alex Koiter</string-name>

</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="load-libraries-nb-31">
  <title>Load libraries</title>
  <sec specific-use="notebook-content">
  <code language="r script">suppressPackageStartupMessages({
  library(tidyverse)
  library(randomForest)
  library(terra)
  library(caret)
  library(patchwork)
  library(sf)
})
  </code>
  </sec>
</sec>
<sec id="load-data-nb-31">
  <title>Load data</title>
  <sec specific-use="notebook-content">
  <code language="r script"> attribute &lt;- c(&quot;plan_curvature&quot;, &quot;profile_curvature&quot;, &quot;saga_wetness_index&quot;, &quot;catchment_area&quot;, &quot;relative_slope_position&quot;, &quot;channel_network_distance&quot;, &quot;elevation&quot;)

data &lt;- read_csv(here::here(&quot;./notebooks/forest_terrain_data.csv&quot;), show_col_types = FALSE) %&gt;%
  select(&quot;x&quot;, &quot;y&quot;, &quot;h_c&quot;, any_of(attribute))
  </code>
  </sec>
</sec>
<sec id="map-soil-property-nb-31">
  <title>Map soil property</title>
  <sec specific-use="notebook-content">
  <code language="r script">temp_rast &lt;- rast(data)
crs(x = temp_rast, warn=FALSE) &lt;- &quot;epsg:26914&quot;

coords &lt;- read_csv(here::here(&quot;./notebooks/coords.csv&quot;), show_col_types = FALSE) %&gt;% 
  st_as_sf(coords = c(&quot;long&quot;, &quot;lat&quot;),  crs = 4326) %&gt;%
  st_transform(crs = 26914)

p1&lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = h_c)) +
  scale_fill_viridis_c(name = &quot;h*&quot;, breaks = seq(4, 9, 1)) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)

p2 &lt;- ggplot() +
  tidyterra::geom_spatraster(data = temp_rast, aes(fill = elevation)) +
  scale_fill_viridis_c(name = &quot;Elevation (m)&quot;, option = &quot;inferno&quot;) +
  geom_sf(data = filter(coords, site == &quot;Forest&quot;)) +
  theme_bw(base_size = 12) +
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        legend.position = &quot;bottom&quot;) +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_continuous(expand = c(0,0)) +
  ggspatial::annotation_scale(location = &quot;bl&quot;) +
  ggspatial::annotation_north_arrow(location = &quot;br&quot;)
  </code>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">p1+p2  
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_c_For_RF_files/figure-jats/unnamed-chunk-4-1.png" />
  </sec>
</sec>
<sec id="create-training-validation-and-testing-datasets-nb-31">
  <title>Create training, validation and testing datasets</title>
  <p>60 % of the data in the training data set 20 % of the data in the
  validation data set 20 % of the data in the testing data set</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(123) # makes it reproducible

temp2 &lt;- data %&gt;%
  mutate(dataset = sample(c(&quot;train&quot;, &quot;validation&quot;, &quot;test&quot;), size = nrow(.), replace = TRUE, prob = c(0.6, 0.2, 0.2)))

train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) 

validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset)

test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset)
  </code>
  </sec>
</sec>
<sec id="feature-selection-nb-31">
  <title>Feature selection</title>
  <p>vifstep() calculates VIF for all variables, excludes the one with
  the highest VIF (if it is greater than the threshold), repeat the
  procedure until no variables with a VIF greater than th remains.</p>
  <sec specific-use="notebook-content">
  <code language="r script">features &lt;- usdm::vifstep(rast(select(filter(train, dataset == &quot;train&quot;), -dataset, -h_c)), th = 8)
features
  </code>
  <boxed-text>
    <preformat>No variable from the 7 input variables has collinearity problem. 

The linear correlation coefficients ranges between: 
min correlation ( channel_network_distance ~ catchment_area ):  0.0163493 
max correlation ( elevation ~ relative_slope_position ):  0.6435028 

---------- VIFs of the remained variables -------- 
                 Variables      VIF
1           plan_curvature 1.063070
2        profile_curvature 1.719859
3       saga_wetness_index 1.797966
4           catchment_area 1.561261
5  relative_slope_position 2.953399
6 channel_network_distance 2.787480
7                elevation 2.634416</preformat>
  </boxed-text>
  </sec>
  <sec id="remove-correlated-features-from-the-data-sets-nb-31">
    <title>Remove correlated features from the data sets</title>
    <sec specific-use="notebook-content">
    <code language="r script">train &lt;- temp2 %&gt;% 
  filter(dataset == &quot;train&quot; | dataset == &quot;validation&quot;) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">validation &lt;- temp2 %&gt;% 
  filter(dataset == &quot;validation&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    <code language="r script">test &lt;- temp2 %&gt;% 
  filter(dataset == &quot;test&quot;) %&gt;%
  select(-dataset) %&gt;%
  usdm::exclude(features) %&gt;%
  select(-x, -y)
    </code>
    <boxed-text>
      <preformat>Warning in usdm::exclude(., features): No variable to exclude!</preformat>
    </boxed-text>
    </sec>
  </sec>
</sec>
<sec id="tune-the-training-rf-model-using-the-validation-dataset-nb-31">
  <title>Tune the training RF model using the validation dataset</title>
  <p>Instructions
  (https://stackoverflow.com/questions/18155482/how-to-specify-a-validation-holdout-set-to-caret)
  This uses the caret package and I included the validation set inside
  my training set and just define the resampling measures to only use
  the validation data. This step is to optimize the mtry parameter</p>
  <sec specific-use="notebook-content">
  <code language="r script">tc &lt;- trainControl(method = &quot;cv&quot;, number = 1, index = list(Fold1 = which(train$dataset == &quot;train&quot;)), savePredictions = T)

set.seed(456)
validate.rf &lt;- train(h_c ~ ., data = select(train, -dataset), method = &quot;rf&quot;, trControl = tc)
plot(validate.rf)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_c_For_RF_files/figure-jats/unnamed-chunk-8-1.png" />
  <code language="r script">my_mtry &lt;- validate.rf$finalModel$mtry
my_mtry
  </code>
  <boxed-text>
    <preformat>[1] 7</preformat>
  </boxed-text>
  </sec>
</sec>
<sec id="validation-back-test-nb-31">
  <title>Validation back test</title>
  <p>Uses the validation dataset as the test</p>
  <sec specific-use="notebook-content">
  <code language="r script">set.seed(789)

rf.fit &lt;- randomForest(h_c ~ ., data = select(filter(train, dataset == &quot;train&quot;), -dataset), 
                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,
                       ytest = select(filter(train, dataset == &quot;validation&quot;), -dataset)$h_c,
                       xtest = dplyr::select(select(filter(train, dataset == &quot;validation&quot;), -dataset), -h_c))
rf.fit
  </code>
  <boxed-text>
    <preformat>
Call:
 randomForest(formula = h_c ~ ., data = select(filter(train, dataset ==      &quot;train&quot;), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = select(filter(train, dataset == &quot;validation&quot;),          -dataset)$h_c, xtest = dplyr::select(select(filter(train,          dataset == &quot;validation&quot;), -dataset), -h_c)) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 7

          Mean of squared residuals: 0.0005625231
                    % Var explained: 58.75
                       Test set MSE: 0
                    % Var explained: 60.27</preformat>
  </boxed-text>
  </sec>
  <sec specific-use="notebook-content">
  <code language="r script">oob_val &lt;- sqrt(rf.fit$mse)
test_val &lt;- sqrt(rf.fit$test$mse)

val_plot &lt;- tibble(`Out of Bag Error` = oob_val,
                   Validation = test_val,
                   ntrees = 1:rf.fit$ntree) %&gt;%
  pivot_longer(cols = -ntrees, names_to = &quot;Metric&quot;, values_to = &quot;RMSE&quot; )

ggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +
  geom_line() +
  theme_bw() +
  xlab(&quot;Number of trees&quot;)
  </code>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_c_For_RF_files/figure-jats/unnamed-chunk-10-1.png" />
  </sec>
</sec>
<sec id="testing-the-rf-model-nb-31">
  <title>Testing the RF model</title>
  <p>Uses the RF model to predict the test dataset. We compare predicted
  against actual</p>
  <sec specific-use="notebook-content">
  <code language="r script">prediction &lt;- predict(rf.fit, newdata = test)
test_plot &lt;- data.frame(pred = prediction, obs = test$h_c)

r_sq &lt;- summary(lm(pred~obs, data = test_plot))
r_sq
  </code>
  <boxed-text>
    <preformat>
Call:
lm(formula = pred ~ obs, data = test_plot)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.064830 -0.011238 -0.000508  0.011116  0.054678 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  0.49578    0.01693   29.28   &lt;2e-16 ***
obs          0.56202    0.01493   37.65   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0164 on 882 degrees of freedom
Multiple R-squared:  0.6164,    Adjusted R-squared:  0.616 
F-statistic:  1417 on 1 and 882 DF,  p-value: &lt; 2.2e-16</preformat>
  </boxed-text>
  <code language="r script">ggplot(data = test_plot, aes(y = pred, x = obs)) +
  geom_point() +
  ggpmisc::stat_poly_line() +
  ggpmisc::stat_poly_eq() +
  theme_bw() +
  geom_abline(slope = 1, intercept = 0) +
  coord_fixed(ratio = 1)
  </code>
  <boxed-text>
    <preformat>Registered S3 methods overwritten by 'ggpp':
  method                  from   
  heightDetails.titleGrob ggplot2
  widthDetails.titleGrob  ggplot2</preformat>
  </boxed-text>
  <graphic mimetype="image" mime-subtype="png" xlink:href="h_c_For_RF_files/figure-jats/unnamed-chunk-11-1.png" />
  </sec>
</sec>
<sec id="importance-nb-31">
  <title>Importance</title>
  <sec specific-use="notebook-content">
  <code language="r script">ImpData &lt;- as.data.frame(importance(rf.fit)) %&gt;%
  mutate(Var.Names = row.names(.)) %&gt;%
 `row.names&lt;-`(as.character(1:nrow(importance(rf.fit))))
  </code>
  </sec>
  <sec id="top-based-on-incnodepurity-nb-31">
    <title>Top based on IncNodePurity</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = IncNodePurity, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 202.28534     0.9928256                elevation
6  86.98627     0.9267161 channel_network_distance
5 116.11363     0.4871024  relative_slope_position
2  56.27253     0.3894920        profile_curvature
4  39.51325     0.2967019           catchment_area
3  45.80337     0.2872385       saga_wetness_index
1  26.10635     0.2201894           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p1 &lt;- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +
  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=&quot;skyblue&quot;) +
  geom_point(aes(size = `%IncMSE`), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="top-10-based-on-incmse-nb-31">
    <title>Top 10 based on %IncMSE</title>
    <sec specific-use="notebook-content">
    <code language="r script">slice_max(ImpData,order_by = `%IncMSE`, n = 10)
    </code>
    <boxed-text>
      <preformat>    %IncMSE IncNodePurity                Var.Names
7 202.28534     0.9928256                elevation
5 116.11363     0.4871024  relative_slope_position
6  86.98627     0.9267161 channel_network_distance
2  56.27253     0.3894920        profile_curvature
3  45.80337     0.2872385       saga_wetness_index
4  39.51325     0.2967019           catchment_area
1  26.10635     0.2201894           plan_curvature</preformat>
    </boxed-text>
    </sec>
    <sec specific-use="notebook-content">
    <code language="r script">p2&lt;- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +
  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=&quot;skyblue&quot;) +
  geom_point(aes(size = IncNodePurity), color = &quot;blue&quot;, alpha = 0.6) +
  theme_bw() +
  coord_flip() +
  labs(x = &quot;Terrain Attribute&quot;) +
  theme(legend.position=&quot;bottom&quot;)
    </code>
    </sec>
  </sec>
  <sec id="combined-nb-31">
    <title>Combined</title>
    <sec specific-use="notebook-content">
    <code language="r script">p1+p2
    </code>
    <graphic mimetype="image" mime-subtype="png" xlink:href="h_c_For_RF_files/figure-jats/unnamed-chunk-17-1.png" />
    </sec>
  </sec>
  <sec id="write-data-nb-31">
    <title>Write data</title>
    <sec specific-use="notebook-content">
    <code language="r script">importance_data &lt;- ImpData %&gt;%
  mutate(MSE_rank = rank(-`%IncMSE`)) %&gt;%
  mutate(Purity_rank = rank(-IncNodePurity)) %&gt;%
  mutate(site = &quot;Forest&quot;,
        property = &quot;h_col&quot;)

if(file.exists(here::here(&quot;./notebooks/importance_data.csv&quot;))) {
  importance_data_final &lt;- read_csv(here::here(&quot;./notebooks/importance_data.csv&quot;)) |&gt;
    rows_upsert(importance_data, by = c(&quot;MSE_rank&quot;, &quot;site&quot;, &quot;property&quot;)) 
} else importance_data_final &lt;- importance_data
    </code>
    <boxed-text>
      <preformat>Rows: 175 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (3): Var.Names, site, property
dbl (4): %IncMSE, IncNodePurity, MSE_rank, Purity_rank

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(importance_data_final, here::here(&quot;./notebooks/importance_data.csv&quot;))


model_performance &lt;- tibble(MSE = rf.fit$mse[length(rf.fit$mse)],
       Var_exp = rf.fit$rsq[length(rf.fit$rsq)],
       MSE_test = rf.fit$test$mse[length(rf.fit$test$mse)],
       Var_exp_test = rf.fit$test$rsq[length(rf.fit$test$rsq)],
       R2 = r_sq$r.squared, 
       site = &quot;Forest&quot;,
       property = &quot;h_col&quot;)

if(file.exists(here::here(&quot;./notebooks/model_performance_data.csv&quot;))) {
  model_performance_final &lt;- read_csv(here::here(&quot;./notebooks/model_performance_data.csv&quot;)) |&gt;
    rows_upsert(model_performance, by = c(&quot;site&quot;, &quot;property&quot;))  
} else model_performance_final &lt;- model_performance
    </code>
    <boxed-text>
      <preformat>Rows: 25 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: &quot;,&quot;
chr (2): site, property
dbl (5): MSE, Var_exp, MSE_test, Var_exp_test, R2

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</preformat>
    </boxed-text>
    <code language="r script">write_csv(model_performance_final, here::here(&quot;./notebooks/model_performance_data.csv&quot;))
    </code>
    </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>

</article>