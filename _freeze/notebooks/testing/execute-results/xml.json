{
  "hash": "ebb4f0981579371dae21e539d7235077",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testing\"\nauthor: \"Alex Koiter\"\n---\n\n\n\n\n\n\n## Load libraries\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(randomForest)\n  library(terra)\n  library(caret)\n  library(patchwork)\n  library(sf)\n})\n```\n:::\n\n\n\n\n\n\n## Load data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n attribute <- c(\"plan_curvature\", \"profile_curvature\", \"saga_wetness_index\", \"catchment_area\", \"relative_slope_position\", \"channel_network_distance\", \"elevation\")\n\nall_data <- read_csv(here::here(\"./notebooks/ag_terrain_data.csv\"), show_col_types = FALSE) %>%\n  select(\"x\", \"y\", \"a_c\", any_of(attribute)) %>% \n  rename(\"long\" = \"x\", \"lat\" = \"y\") %>%\n  st_as_sf(coords = c(\"long\", \"lat\"),  crs = 32614) %>%\n  st_transform(crs = 26914)\n\ncoords <- read_csv(here::here(\"./notebooks/coords.csv\"), show_col_types = FALSE) %>% \n  filter(site == \"Agriculture\") %>%\n  st_as_sf(coords = c(\"long\", \"lat\"),  crs = 4326) %>%\n  st_transform(crs = 26914)\n\n\ndata <- st_join(coords, all_data, st_nearest_feature) %>%\n  select(-site) %>%\n  st_drop_geometry()\n```\n:::\n\n\n\n\n\n## Create training, validation and testing datasets\n\n60 % of the data in the training data set 20 % of the data in the validation data set 20 % of the data in the testing data set\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nset.seed(123) # makes it reproducible\n\ntemp2 <- data %>%\n  mutate(dataset = sample(c(\"train\", \"test\"), size = nrow(.), replace = TRUE, prob = c(0.6, 0.4)))\n\ntrain <- temp2 %>% \n  filter(dataset == \"train\") \n\ntest <- temp2 %>% \n  filter(dataset == \"test\") %>%\n  select(-dataset)\n```\n:::\n\n\n\n\n\n\n\n## Tune the training RF model\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nset.seed(456)\nvalidate.rf <- train(a_c ~ ., data = select(train, -dataset), method = \"rf\")\nplot(validate.rf)\n```\n\n::: {.cell-output-display}\n![](testing_files/figure-jats/unnamed-chunk-4-1.png)\n:::\n\n```{.r .cell-code .hidden}\nmy_mtry <- validate.rf$finalModel$mtry\nmy_mtry\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Train Model\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nset.seed(789)\n\nrf.fit <- randomForest(a_c ~ ., data = select(filter(train, dataset == \"train\"), -dataset), \n                       ntree = 500, keep.forest = TRUE, importance = TRUE, mtry = my_mtry,\n                       ytest = test$a_c,\n                       xtest = dplyr::select(test, -a_c))\nrf.fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\n randomForest(formula = a_c ~ ., data = select(filter(train, dataset ==      \"train\"), -dataset), ntree = 500, keep.forest = TRUE, importance = TRUE,      mtry = my_mtry, ytest = test$a_c, xtest = dplyr::select(test,          -a_c)) \n               Type of random forest: regression\n                     Number of trees: 500\nNo. of variables tried at each split: 4\n\n          Mean of squared residuals: 0.02429141\n                    % Var explained: 47.54\n                       Test set MSE: 0.03\n                    % Var explained: 39.52\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\noob_val <- sqrt(rf.fit$mse)\ntest_val <- sqrt(rf.fit$test$mse)\n\nval_plot <- tibble(`Out of Bag Error` = oob_val,\n                   Test = test_val,\n                   ntrees = 1:rf.fit$ntree) %>%\n  pivot_longer(cols = -ntrees, names_to = \"Metric\", values_to = \"RMSE\" )\n\nggplot(data = val_plot, aes(ntrees, RMSE, color = Metric)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"Number of trees\")\n```\n\n::: {.cell-output-display}\n![](testing_files/figure-jats/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n\n\n\n\n## Testing the RF model\n\nUses the RF model to predict the test dataset. We compare predicted against actual\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nprediction <- predict(rf.fit, newdata = test)\ntest_plot <- data.frame(pred = prediction, obs = test$a_c)\n\nr_sq <- summary(lm(pred~obs, data = test_plot))\nr_sq\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = pred ~ obs, data = test_plot)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.136170 -0.068403 -0.007279  0.054536  0.179124 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.1516     0.3478   6.186 9.96e-06 ***\nobs           0.3643     0.1042   3.496  0.00277 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.09164 on 17 degrees of freedom\nMultiple R-squared:  0.4182,\tAdjusted R-squared:  0.384 \nF-statistic: 12.22 on 1 and 17 DF,  p-value: 0.002771\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nggplot(data = test_plot, aes(y = pred, x = obs)) +\n  geom_point() +\n  ggpmisc::stat_poly_line() +\n  ggpmisc::stat_poly_eq() +\n  theme_bw() +\n  geom_abline(slope = 1, intercept = 0) +\n  coord_fixed(ratio = 1)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 methods overwritten by 'ggpp':\n  method                  from   \n  heightDetails.titleGrob ggplot2\n  widthDetails.titleGrob  ggplot2\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](testing_files/figure-jats/unnamed-chunk-7-1.png)\n:::\n:::\n\n\n\n\n\n\n## Importance\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nImpData <- as.data.frame(importance(rf.fit)) %>%\n  mutate(Var.Names = row.names(.)) %>%\n `row.names<-`(as.character(1:nrow(importance(rf.fit))))\n```\n:::\n\n\n\n\n\n### Top based on IncNodePurity\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nslice_max(ImpData,order_by = IncNodePurity, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     %IncMSE IncNodePurity                Var.Names\n7 15.3512359    0.39763507                elevation\n3 14.3455619    0.38137868       saga_wetness_index\n5  5.0832424    0.14896240  relative_slope_position\n6  2.3429840    0.11599167 channel_network_distance\n1  0.1420497    0.08642657           plan_curvature\n2 -0.8306163    0.08639376        profile_curvature\n4  0.3909726    0.05464780           catchment_area\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np1 <- ggplot(slice_max(ImpData,order_by = IncNodePurity, n = 10), aes(x = fct_reorder(Var.Names, IncNodePurity), y = IncNodePurity)) +\n  geom_segment(aes(x = fct_reorder(Var.Names, IncNodePurity), xend = fct_reorder(Var.Names, IncNodePurity), y = 0, yend = IncNodePurity), color=\"skyblue\") +\n  geom_point(aes(size = `%IncMSE`), color = \"blue\", alpha = 0.6) +\n  theme_bw() +\n  coord_flip() +\n  labs(x = \"Terrain Attribute\") +\n  theme(legend.position=\"bottom\")\n```\n:::\n\n\n\n\n\n\n### Top 10 based on %IncMSE\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nslice_max(ImpData,order_by = `%IncMSE`, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     %IncMSE IncNodePurity                Var.Names\n7 15.3512359    0.39763507                elevation\n3 14.3455619    0.38137868       saga_wetness_index\n5  5.0832424    0.14896240  relative_slope_position\n6  2.3429840    0.11599167 channel_network_distance\n4  0.3909726    0.05464780           catchment_area\n1  0.1420497    0.08642657           plan_curvature\n2 -0.8306163    0.08639376        profile_curvature\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np2<- ggplot(slice_max(ImpData,order_by = `%IncMSE`, n = 10), aes(x = fct_reorder(Var.Names, `%IncMSE`), y = `%IncMSE`)) +\n  geom_segment(aes(x = fct_reorder(Var.Names, `%IncMSE`), xend = fct_reorder(Var.Names, `%IncMSE`), y = 0, yend = `%IncMSE`), color=\"skyblue\") +\n  geom_point(aes(size = IncNodePurity), color = \"blue\", alpha = 0.6) +\n  theme_bw() +\n  coord_flip() +\n  labs(x = \"Terrain Attribute\") +\n  theme(legend.position=\"bottom\")\n```\n:::\n\n\n\n\n\n\n### Combined\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np1+p2\n```\n\n::: {.cell-output-display}\n![](testing_files/figure-jats/unnamed-chunk-13-1.png)\n:::\n:::",
    "supporting": [
      "testing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}