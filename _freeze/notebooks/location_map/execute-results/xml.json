{
  "hash": "63061986225a2fbf3c57c129e6f91fb7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Research Site Locations\"\nauthor: \"Alex Koiter\"\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsuppressPackageStartupMessages({library(tidyverse)\nlibrary(ggspatial)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(ggrepel)\nlibrary(raster)\nlibrary(patchwork)\n})\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggspatial' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'rnaturalearth' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'patchwork' was built under R version 4.4.2\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Bounding box of region and sites\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbox = c(xmin = 455200, ymin = 5616000, xmax = 466200, ymax = 5626500)\n\nag_site <- data.frame(x = c(464124, 463318),\n                         y = c(5622932, 5622121)) %>% \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 3158) %>% \n  st_bbox() %>% \n  st_as_sfc()\n\nforest_site <- data.frame(x = c(460822, 460189),\n                         y = c(5619887, 5619206)) %>% \n  st_as_sf(coords = c(\"x\", \"y\"), crs = 3158) %>% \n  st_bbox() %>% \n  st_as_sfc()\n\nlocations <- data.frame(name = c(\"Forest\", \"Agriculture\"), \n                        long = c(-99.560041, -99.513808), \n                        lat = c( 50.726076,  50.752731)) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"),  crs = 4326)\n\n  #st_transform(crs = st_crs(land))\n\ncities <- data.frame(name = \"McCreary\", long = -99.493, lat = 50.775) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"),  crs = 4326) \n```\n:::\n\n\n\n\n\n\n## Land use data of region\n### Get data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminnedosa_data <- \"lcv_minnedosa_2004_2006_shp\"\nif (file.exists(minnedosa_data)) {\n  print(\"The data already exists!\")\n} else {\n  download.file(\"https://mli.gov.mb.ca/landuse/shp_zip_files/lcv_minnedosa_2004_2006_shp.zip\", \n                destfile = \"lcv_minnedosa_2004_2006_shp.zip\")\n  unzip(\"lcv_minnedosa_2004_2006_shp.zip\", exdir = \"lcv_minnedosa_2004_2006_shp\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The data already exists!\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Summarize and crop\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nland <- st_read(here::here(\"./notebooks/lcv_minnedosa_2004_2006_shp/lcv_minnedosa_2004_2006.shp\")) %>%\n  st_crop(st_bbox(box)) %>%\n  st_transform(4269) %>%\n  mutate(Land_use = recode(CLASSNAME, \"Agricultural Field\" = \"Agriculture\", \"Agri - Forage Field\" = \"Agriculture\", \"Water Body\" = \"Water\", \"Wetland - Treed Bog\" = \"Wetland\", \"Wetland - Marsh\" = \"Wetland\", \"Decidious Forest\" = \"Forest\", \"Open Decidious Forest\" = \"Forest\", \"Mixedwood Forest\" = \"Forest\", \"Forest Cut Blocks\" = \"Forest\", \"Coniferous Forest\" = \"Forest\",\"Roads Trails Rail Lines\" = \"Other\", \"Sand and Gravel\" = \"Other\", \"Cultural Features\" = \"Other\", \"Range and Grassland\" = \"Forage\")) %>%\n  st_make_valid() %>%\n  st_simplify(dTolerance = 0.0001, preserveTopology = F) %>%\n  group_by(Land_use) %>%\n  summarise(do_union = TRUE) %>%\n  mutate(Land_use = factor(Land_use, levels=c(\"Agriculture\", \"Forest\", \"Forage\", \"Water\", \"Wetland\", \"Other\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `lcv_minnedosa_2004_2006' from data source \n  `C:\\Users\\koitera\\Dropbox\\Graduate students\\Maria\\Manuscript 2\\spatial-variability-soil-manuscript\\notebooks\\lcv_minnedosa_2004_2006_shp\\lcv_minnedosa_2004_2006.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 160653 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 429972 ymin: 5542070 xmax: 549972 ymax: 5656880\nProjected CRS: UTM\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in st_simplify.sfc(st_geometry(x), preserveTopology, dTolerance):\nargument preserveTopology cannot be set to FALSE when working with ellipsoidal\ncoordinates since the algorithm behind st_simplify always preserves topological\nrelationships\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## DEM data\nFreely available from <https://maps.canada.ca/czs/index-en.html>\nData type is Elevation. You provide the clipping area and then submit the data request\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntopo <- raster::aggregate(raster(here::here(\"./notebooks/DEM.tif\")), fact = 3) %>%\n  crop(extent(land)) %>%\n  as.data.frame(xy = T)\n```\n:::\n\n\n\n\n\n\n## Hydro data\nFreely available from <https://maps.canada.ca/czs/index-en.html>\nData type is the CanVec. You provide the clipping area and then submit the data request\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nwater_linear <- st_read(here::here(\"./notebooks/canvec_190514_89905/water_linear_flow_1.shp\")) %>%\n  st_transform(crs = st_crs(land)) %>%\n  st_make_valid() %>%\n  st_crop(st_bbox(land))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `water_linear_flow_1' from data source \n  `C:\\Users\\koitera\\Dropbox\\Graduate students\\Maria\\Manuscript 2\\spatial-variability-soil-manuscript\\notebooks\\canvec_190514_89905\\water_linear_flow_1.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5160 features and 44 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -99.9082 ymin: 50.54151 xmax: -99.12695 ymax: 51.16603\nGeodetic CRS:  GCS_North_American_1983_CSRS98\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Canada wide map\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncanada <- ne_states(country = \"Canada\", returnclass = \"sf\") %>%\n  st_transform(crs = 3348)\n\nlocations2 <- data.frame(name = c(\"Center\"), long = c(-99.989671), lat = c(50.742554)) %>%\n  st_as_sf(coords = c(\"long\", \"lat\"),  crs = 4326) %>%\n  st_transform(crs = st_crs(land))\n```\n:::\n\n\n\n\n\n\n## Maps\n### Canada\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np1 <- ggplot() +\n  theme_bw() +\n  layer_spatial(canada, fill = \"white\") +\n  layer_spatial(locations2, shape = 23, colour = \"red\", fill = \"red\", size = 2) +\n  annotation_scale(location = \"bl\",\n                   height = unit(0.05, \"cm\")) +\n  annotation_north_arrow(location = \"br\", \n                         height = unit(0.5, \"cm\"),\n                         width = unit(0.5, \"cm\")) +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        plot.margin = unit(c(0,0,0,0), \"mm\"))\n```\n:::\n\n\n\n\n\n\n### Land use\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np2 <- ggplot() +\n  theme_bw(base_size = 10) +\n  geom_sf(data = land, aes(fill = Land_use)) +\n  scale_fill_manual(values=c(\"#458B00\", \"#006400\", \"#CDAD00\", \"#009ACD\", \"#CDB38B\",  \"#C1CDCD\"), name = \"Land use\") +\n  geom_sf(data = water_linear, colour = \"#009ACD\", lwd = 0.5) +\n  geom_label_repel(\n    data = head(locations),\n    aes(label = name, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    nudge_y = 0.01, \n    size = 3) +\n  geom_label_repel(\n    data = head(locations),\n    aes(label = name, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    nudge_y = 0.01, \n    size = 3) +\n  geom_sf(data = ag_site, fill = NA, colour = \"red\", lwd = 1) +\n  geom_sf(data = forest_site, fill = NA, colour = \"red\", lwd = 1) +\n  geom_label_repel(\n    data = head(cities),\n    aes(label = name, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    nudge_y = 0.01,\n    size = 2) +\n  annotation_scale(location = \"bl\",\n                   height = unit(0.05, \"cm\")) +\n  annotation_north_arrow(location = \"br\", \n                         height = unit(0.5, \"cm\"),\n                         width = unit(0.5, \"cm\")) +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        plot.margin = unit(c(0,0,0,0), \"mm\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.key.size = unit(5, 'mm'),\n        legend.box.spacing = unit(0, \"pt\")) +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0))\n```\n:::\n\n\n\n\n\n\n### DEM\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np3 <- ggplot() +\n  theme_bw(base_size = 10) +\n  geom_raster(data = topo , aes(x = x, y = y, fill = DEM)) + \n  scale_fill_viridis_c(name = \"Elev. (m)  \", limits = c(282, 800), breaks = c(300, 550, 800)) +\n  geom_label_repel(\n    data = head(locations),\n    aes(label = name, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    nudge_y = 0.01,\n    size = 3) +\n  geom_sf(data = ag_site, fill = NA, colour = \"red\", lwd = 1) +\n  geom_sf(data = forest_site, fill = NA, colour = \"red\", lwd = 1) +\n  geom_label_repel(\n    data = head(cities),\n    aes(label = name, geometry = geometry),\n    stat = \"sf_coordinates\",\n    min.segment.length = 0,\n    nudge_y = 0.01,\n    size = 3) +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0)) +\n  annotation_scale(location = \"bl\",\n                   height = unit(0.05, \"cm\")) +\n  annotation_north_arrow(location = \"br\", \n                         height = unit(0.5, \"cm\"),\n                         width = unit(0.5, \"cm\")) +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        plot.margin = unit(c(0,0,0,0), \"mm\"),\n        legend.position = \"bottom\",\n        legend.box.spacing = unit(0, \"pt\")) \n```\n:::\n\n::: {#cell-fig-location_map .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-location_map\n#| fig-cap: Map showing the location of the study sites within Canada, and the regional land use and topography.\np6 <- p1 + guide_area() + p2 + p3 + plot_layout(ncol = 2, guides = \"collect\") \np6\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-location_map\n#| fig-cap: Map showing the location of the study sites within Canada, and the regional land use and topography.\n#ggsave(filename = \"Figures/Maps.png\", plot = p6, height = 80*1.5, width = 100*1.5, units = \"mm\", dpi = 800)\n```\n\n::: {.cell-output-display}\n![Map showing the location of the study sites within Canada, and the regional land use and topography.](location_map_files/figure-jats/fig-location_map-1.png){#fig-location_map}\n:::\n:::",
    "supporting": [
      "location_map_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}